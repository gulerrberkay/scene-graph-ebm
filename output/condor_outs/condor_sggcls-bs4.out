2023-03-05 17:19:55,485 maskrcnn_benchmark INFO: Using 1 GPUs
2023-03-05 17:19:55,485 maskrcnn_benchmark INFO: Namespace(config_file='configs/e2e_relation_X_101_32_8_FPN_1x_energy.yaml', local_rank=0, skip_test=False, opts=[], slurm_id=None, distributed=False)
2023-03-05 17:19:55,485 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2023-03-05 17:19:56,466 maskrcnn_benchmark INFO: 
PyTorch version: 1.13.0+cu117
Is debug build: False
CUDA used to build PyTorch: 11.7
ROCM used to build PyTorch: N/A

OS: Fedora Linux 37 (KDE Plasma) (x86_64)
GCC version: (GCC) 12.2.1 20221121 (Red Hat 12.2.1-4)
Clang version: 15.0.7 (Fedora 15.0.7-1.fc37)
CMake version: version 3.26.0-rc4
Libc version: glibc-2.36

Python version: 3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0] (64-bit runtime)
Python platform: Linux-6.1.13-200.fc37.x86_64-x86_64-with-glibc2.36
Is CUDA available: True
CUDA runtime version: Could not collect
CUDA_MODULE_LOADING set to: LAZY
GPU models and configuration: GPU 0: NVIDIA GeForce RTX 3080 Ti
Nvidia driver version: 525.89.02
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

Versions of relevant libraries:
[pip3] numpy==1.23.5
[pip3] torch==1.13.0
[pip3] torch-scatter==2.1.0
[pip3] torchaudio==0.13.0
[pip3] torchvision==0.14.0
[conda] Could not collect
        Pillow (9.3.0)
2023-03-05 17:19:56,466 maskrcnn_benchmark INFO: Loaded configuration file configs/e2e_relation_X_101_32_8_FPN_1x_energy.yaml
2023-03-05 17:19:56,467 maskrcnn_benchmark INFO: 
INPUT:
  MIN_SIZE_TRAIN: (600,)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/FAIR/20171220/X-101-32x8d"
  PRETRAINED_DETECTOR_CKPT: "/users/students/r0879687/amager/vg/pretrained-detector/pretrained_faster_rcnn/model_final.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN" # VGG-16
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
  BASE_ONLY: False           # When training energy model set this to false.
  RELATION_ON: True
  ATTRIBUTE_ON: False
  FLIP_AUG: False            # if there is any left-right relation, FLIP AUG should be false
  RPN:
    USE_FPN: True
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.23232838, 0.63365731, 1.28478321, 3.15089189)   # from neural-motifs
    PRE_NMS_TOP_N_TRAIN: 6000
    PRE_NMS_TOP_N_TEST: 6000
    POST_NMS_TOP_N_TRAIN: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_PER_BATCH: False
    RPN_MID_CHANNEL: 256
  ROI_HEADS:
    USE_FPN: True
    POSITIVE_FRACTION: 0.5
    BG_IOU_THRESHOLD: 0.3
    BATCH_SIZE_PER_IMAGE: 256
    DETECTIONS_PER_IMG: 80
    NMS_FILTER_DUPLICATES: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
    NUM_CLASSES: 151                # 151 for VG, 1201 for GQA
    MLP_HEAD_DIM: 4096
  ROI_ATTRIBUTE_HEAD:
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
    USE_BINARY_LOSS: True           # choose binary, because cross_entropy loss deteriorate the box head, even with 0.1 weight
    POS_WEIGHT: 50.0
    ATTRIBUTE_LOSS_WEIGHT: 1.0
    NUM_ATTRIBUTES: 201             # 201 for VG, 501 for GQA
    MAX_ATTRIBUTES: 10             
    ATTRIBUTE_BGFG_SAMPLE: True    
    ATTRIBUTE_BGFG_RATIO: 3        
  ROI_RELATION_HEAD:
    USE_GT_BOX: True
    USE_GT_OBJECT_LABEL: False
    REQUIRE_BOX_OVERLAP: False              # for sgdet, during training, only train pairs with overlap
    ADD_GTBOX_TO_PROPOSAL_IN_TRAIN: True    # for sgdet only, in case some gt boxes are missing
    NUM_CLASSES: 51                 # 51 for VG, 201 for GQA (not contain "to the left of" & "to the right of")
    BATCH_SIZE_PER_IMAGE: 1024      # sample as much as possible
    POSITIVE_FRACTION: 0.25
    CONTEXT_POOLING_DIM: 4096
    CONTEXT_HIDDEN_DIM: 512         #1024 for VCTree
    POOLING_ALL_LEVELS: True
    LABEL_SMOOTHING_LOSS: False
    FEATURE_EXTRACTOR: "RelationFeatureExtractor"
    #################### Select Relationship Model ####################
    PREDICTOR: "MotifPredictor"
    #PREDICTOR: "VCTreePredictor"
    #PREDICTOR: "TransformerPredictor"
    #PREDICTOR: "CausalAnalysisPredictor"
    ################# Parameters for Motif Predictor ##################
    CONTEXT_OBJ_LAYER: 1
    CONTEXT_REL_LAYER: 1
    ############# Parameters for Causal Unbias Predictor ##############
    ### Implementation for paper "Unbiased Scene Graph Generation from Biased Training"
    CAUSAL:
      EFFECT_TYPE: 'none'             # candicates: 'TDE', 'NIE', 'TE', 'none'
      FUSION_TYPE: 'sum'              # candicates: 'sum', 'gate'         
      SEPARATE_SPATIAL: False         # separate spatial in union feature
      CONTEXT_LAYER: "motifs"         # candicates: motifs, vctree, vtranse
      SPATIAL_FOR_VISION: True
      EFFECT_ANALYSIS: True
    ############### Parameters for Transformer Predictor ##############
    TRANSFORMER:
      DROPOUT_RATE: 0.1
      OBJ_LAYER: 4
      REL_LAYER: 2
      NUM_HEAD: 8
      KEY_DIM: 64
      VAL_DIM: 64
      INNER_DIM: 2048
    ############### Parameters for Energy Model ##############
    EBM:
      OBJ_EMBED_DIM: 384
      REL_EMBED_DIM: 384
      OBJ_LABEL_EMBED_DIM: 384
      REL_LABEL_EMBED_DIM: 384
      POOLING_DIM: 384
DATASETS:
  TRAIN: ("VG_stanford_filtered_with_attribute_train",)
  VAL: ("VG_stanford_filtered_with_attribute_val",)
  TEST: ("VG_stanford_filtered_with_attribute_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  PRE_VAL: False
  IMS_PER_BATCH: 4
  BIAS_LR_FACTOR: 1
  BASE_LR: 0.0025
  WARMUP_FACTOR: 0.1
  WEIGHT_DECAY: 0.0001
  MOMENTUM: 0.9
  GRAD_NORM_CLIP: 5.0
  STEPS: [0, 30000, 40000 ]
  MAX_ITER: 60000
  VAL_PERIOD: 2000
  CHECKPOINT_PERIOD: 2000
  PRINT_GRAD_FREQ: 4000
  SCHEDULE:
    # the following paramters are only used for WarmupReduceLROnPlateau
    TYPE: "WarmupReduceLROnPlateau"    # WarmupMultiStepLR, WarmupReduceLROnPlateau
    #TYPE: "WarmupMultiStepLR"
    PATIENCE: 2
    THRESHOLD: 0.001
    COOLDOWN: 0
    FACTOR: 0.05   #0.1
    MAX_DECAY_STEP: 3

#OUTPUT_DIR: '/users/students/r0879687/amager/vg/output/relation_baseline_predcls_energy_bs4'
OUTPUT_DIR: '/users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4'

TEST:
  IMS_PER_BATCH: 1
  ALLOW_LOAD_FROM_CACHE: False
  RELATION:
    SYNC_GATHER: False      # turn on will slow down the evaluation to solve the sgdet test out of memory problem
    REQUIRE_OVERLAP: False
    LATER_NMS_PREDICTION_THRES: 0.5

  # Equival schedules with...
  # 1 GPU:
  #   BASE_LR: 0.0025
  #   MAX_ITER: 60000
  #   STEPS: [0, 30000, 40000]
  # 2 GPUs:
  #   BASE_LR: 0.005
  #   MAX_ITER: 30000
  #   STEPS: [0, 15000, 20000]
  # 4 GPUs:
  #   BASE_LR: 0.01
  #   MAX_ITER: 15000
  #   STEPS: [0, 7500, 10000]
  # 8 GPUs:
  #   BASE_LR: 0.02
  #   MAX_ITER: 7500
  #   STEPS: [0, 3750, 5000]

2023-03-05 17:19:56,468 maskrcnn_benchmark INFO: Running with config:
AMP_VERBOSE: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 4
  SIZE_DIVISIBILITY: 32
DATASETS:
  NUM_OBJ_CLASSES: 151
  NUM_REL_CLASSES: 51
  TEST: ('VG_stanford_filtered_with_attribute_test',)
  TRAIN: ('VG_stanford_filtered_with_attribute_train',)
  VAL: ('VG_stanford_filtered_with_attribute_val',)
DTYPE: float32
ENERGY_MODEL:
  DATA_NOISE_VAR: 0.0001
  L2COEFF: 1
  LOSS: ContrastiveDivergence
  META_ARCHITECTURE: GraphEnergyModel
  TEMP: 1
  TRAINIG_MODE: joint
GLOVE_DIR: /users/students/r0879687/amager/vg/glove
INPUT:
  BRIGHTNESS: 0.0
  CONTRAST: 0.0
  FLIP_PROB_TRAIN: 0
  HUE: 0.0
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (600,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  SATURATION: 0.0
  TO_BGR255: True
  VERTICAL_FLIP_PROB_TRAIN: 0.0
MODEL:
  ATTRIBUTE_ON: False
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 2
  BASE_ONLY: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  DEV_RUN: False
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FLIP_AUG: False
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PRETRAINED_DETECTOR_CKPT: /users/students/r0879687/amager/vg/pretrained-detector/pretrained_faster_rcnn/model_final.pth
  RELATION_ON: True
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    DEFORMABLE_GROUPS: 1
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STAGE_WITH_DCN: (False, False, False, False)
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
    WITH_MODULATED_DCN: False
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_ATTRIBUTE_HEAD:
    ATTRIBUTE_BGFG_RATIO: 3
    ATTRIBUTE_BGFG_SAMPLE: True
    ATTRIBUTE_LOSS_WEIGHT: 1.0
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MAX_ATTRIBUTES: 10
    NUM_ATTRIBUTES: 201
    POS_WEIGHT: 50.0
    PREDICTOR: FPNPredictor
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_BINARY_LOSS: True
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 4096
    NUM_CLASSES: 151
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.3
    DETECTIONS_PER_IMG: 80
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.3
    NMS_FILTER_DUPLICATES: True
    POSITIVE_FRACTION: 0.5
    POST_NMS_PER_CLS_TOPN: 300
    SCORE_THRESH: 0.01
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  ROI_RELATION_HEAD:
    ADD_GTBOX_TO_PROPOSAL_IN_TRAIN: True
    BATCH_SIZE_PER_IMAGE: 1024
    CAUSAL:
      CONTEXT_LAYER: motifs
      EFFECT_ANALYSIS: True
      EFFECT_TYPE: none
      FUSION_TYPE: sum
      SEPARATE_SPATIAL: False
      SPATIAL_FOR_VISION: True
    CONTEXT_DROPOUT_RATE: 0.2
    CONTEXT_HIDDEN_DIM: 512
    CONTEXT_OBJ_LAYER: 1
    CONTEXT_POOLING_DIM: 4096
    CONTEXT_REL_LAYER: 1
    EBM:
      OBJ_EMBED_DIM: 384
      OBJ_LABEL_EMBED_DIM: 384
      POOLING_DIM: 384
      REL_EMBED_DIM: 384
      REL_LABEL_EMBED_DIM: 384
    EMBED_DIM: 200
    FEATURE_EXTRACTOR: RelationFeatureExtractor
    LABEL_SMOOTHING_LOSS: False
    NUM_CLASSES: 51
    NUM_SAMPLE_PER_GT_REL: 4
    POOLING_ALL_LEVELS: True
    POSITIVE_FRACTION: 0.25
    PREDICTOR: MotifPredictor
    PREDICT_USE_BIAS: True
    PREDICT_USE_VISION: True
    REL_PROP: [0.01858, 0.00057, 0.00051, 0.00109, 0.0015, 0.00489, 0.00432, 0.02913, 0.00245, 0.00121, 0.00404, 0.0011, 0.00132, 0.00172, 5e-05, 0.00242, 0.0005, 0.00048, 0.00208, 0.15608, 0.0265, 0.06091, 0.009, 0.00183, 0.00225, 0.0009, 0.00028, 0.00077, 0.04844, 0.08645, 0.31621, 0.00088, 0.00301, 0.00042, 0.00186, 0.001, 0.00027, 0.01012, 0.0001, 0.01286, 0.00647, 0.00084, 0.01077, 0.00132, 0.00069, 0.00376, 0.00214, 0.11424, 0.01205, 0.02958]
    REQUIRE_BOX_OVERLAP: False
    TRANSFORMER:
      DROPOUT_RATE: 0.1
      INNER_DIM: 2048
      KEY_DIM: 64
      NUM_HEAD: 8
      OBJ_LAYER: 4
      REL_LAYER: 2
      VAL_DIM: 64
    USE_GT_BOX: True
    USE_GT_OBJECT_LABEL: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.23232838, 0.63365731, 1.28478321, 3.15089189)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_PER_BATCH: False
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 1000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 6000
    PRE_NMS_TOP_N_TRAIN: 6000
    RPN_HEAD: SingleConvRPNHead
    RPN_MID_CHANNEL: 256
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  VGG:
    VGG16_OUT_CHANNELS: 512
  WEIGHT: catalog://ImageNetPretrained/FAIR/20171220/X-101-32x8d
OUTPUT_DIR: /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4
PATHS_CATALOG: /users/students/r0879687/Documents/Master_thesis/ebm/energy-based-scene-graph/maskrcnn_benchmark/config/paths_catalog.py
PATHS_DATA: /users/students/r0879687/amager/vg/VG_100K
SAMPLER:
  GRAD_CLIP: 0.01
  ITERS: 10
  LR: 0.1
  NAME: SGLD
  VAR: 0.001
SOLVER:
  BASE_LR: 0.0025
  BIAS_LR_FACTOR: 1
  CHECKPOINT_PERIOD: 2000
  CLIP_NORM: 5.0
  GAMMA: 0.1
  GRAD_NORM_CLIP: 5.0
  IMS_PER_BATCH: 4
  MAX_ITER: 60000
  MOMENTUM: 0.9
  PRE_VAL: False
  PRINT_GRAD_FREQ: 4000
  SCHEDULE:
    COOLDOWN: 0
    FACTOR: 0.05
    MAX_DECAY_STEP: 3
    PATIENCE: 2
    THRESHOLD: 0.001
    TYPE: WarmupReduceLROnPlateau
  STEPS: (0, 30000, 40000)
  TO_VAL: True
  UPDATE_SCHEDULE_DURING_LOAD: False
  VAL_PERIOD: 2000
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0
TEST:
  ALLOW_LOAD_FROM_CACHE: False
  BBOX_AUG:
    ENABLED: False
    H_FLIP: False
    MAX_SIZE: 4000
    SCALES: ()
    SCALE_H_FLIP: False
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
  RELATION:
    IOU_THRESHOLD: 0.5
    LATER_NMS_PREDICTION_THRES: 0.5
    MULTIPLE_PREDS: False
    REQUIRE_OVERLAP: False
    SYNC_GATHER: False
  SAVE_PROPOSALS: False
WANDB:
  MUTE: False
2023-03-05 17:19:56,468 maskrcnn_benchmark INFO: Saving config into: /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4/config.yml
2023-03-05 17:19:56,525 maskrcnn_benchmark INFO: #################### prepare training ####################
2023-03-05 17:19:56,526 maskrcnn_benchmark.modeling.detector.generalized_rcnn INFO: #################### Building Backbone ####################
2023-03-05 17:19:57,381 maskrcnn_benchmark.modeling.detector.generalized_rcnn INFO: #################### Building RPN ####################
2023-03-05 17:19:57,388 maskrcnn_benchmark.modeling.detector.generalized_rcnn INFO: #################### Building ROI Heads ####################
2023-03-05 17:19:59,237 maskrcnn_benchmark.data.build INFO: ----------------------------------------------------------------------------------------------------
2023-03-05 17:19:59,237 maskrcnn_benchmark.data.build INFO: get dataset statistics...
2023-03-05 17:19:59,239 maskrcnn_benchmark.data.build INFO: Loading data statistics from: /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4/VG_stanford_filtered_with_attribute_train_statistics.cache
2023-03-05 17:19:59,240 maskrcnn_benchmark.data.build INFO: ----------------------------------------------------------------------------------------------------
loading word vectors from /users/students/r0879687/amager/vg/glove/glove.6B.200d.pt
__background__ -> __background__ 
fail on __background__
loading word vectors from /users/students/r0879687/amager/vg/glove/glove.6B.200d.pt
__background__ -> __background__ 
fail on __background__
2023-03-05 17:20:30,133 maskrcnn_benchmark INFO: #################### end base model construction ####################
2023-03-05 17:20:30,174 maskrcnn_benchmark INFO: #################### End energy Model Constructin ####################
2023-03-05 17:20:36,057 maskrcnn_benchmark INFO: #################### end optimizer and scheduler ####################
2023-03-05 17:20:36,057 maskrcnn_benchmark INFO: #################### end distributed ####################
2023-03-05 17:20:36,060 maskrcnn_benchmark.utils.checkpoint INFO: Loading checkpoint from /users/students/r0879687/amager/vg/pretrained-detector/pretrained_faster_rcnn/model_final.pth
2023-03-05 17:21:15,685 maskrcnn_benchmark.utils.model_serialization INFO: MAPPING roi_heads.relation.box_feature_extractor.fc6.bias in current model to roi_heads.box.feature_extractor.fc6.bias in loaded model.
2023-03-05 17:21:15,686 maskrcnn_benchmark.utils.model_serialization INFO: MAPPING roi_heads.relation.box_feature_extractor.fc6.weight in current model to roi_heads.box.feature_extractor.fc6.weight in loaded model.
2023-03-05 17:21:15,686 maskrcnn_benchmark.utils.model_serialization INFO: MAPPING roi_heads.relation.box_feature_extractor.fc7.bias in current model to roi_heads.box.feature_extractor.fc7.bias in loaded model.
2023-03-05 17:21:15,686 maskrcnn_benchmark.utils.model_serialization INFO: MAPPING roi_heads.relation.box_feature_extractor.fc7.weight in current model to roi_heads.box.feature_extractor.fc7.weight in loaded model.
2023-03-05 17:21:15,686 maskrcnn_benchmark.utils.model_serialization INFO: MAPPING roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias in current model to roi_heads.box.feature_extractor.fc6.bias in loaded model.
2023-03-05 17:21:15,686 maskrcnn_benchmark.utils.model_serialization INFO: MAPPING roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight in current model to roi_heads.box.feature_extractor.fc6.weight in loaded model.
2023-03-05 17:21:15,686 maskrcnn_benchmark.utils.model_serialization INFO: MAPPING roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias in current model to roi_heads.box.feature_extractor.fc7.bias in loaded model.
2023-03-05 17:21:15,686 maskrcnn_benchmark.utils.model_serialization INFO: MAPPING roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight in current model to roi_heads.box.feature_extractor.fc7.weight in loaded model.
2023-03-05 17:21:15,686 maskrcnn_benchmark.utils.model_serialization INFO: MAPPING roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias in current model to roi_heads.box.feature_extractor.pooler.reduce_channel.0.bias in loaded model.
2023-03-05 17:21:15,687 maskrcnn_benchmark.utils.model_serialization INFO: MAPPING roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight in current model to roi_heads.box.feature_extractor.pooler.reduce_channel.0.weight in loaded model.
2023-03-05 17:21:15,731 maskrcnn_benchmark.utils.model_serialization INFO: REMATCHING! roi_heads.relation.box_feature_extractor.fc6.bias                                           loaded from roi_heads.box.feature_extractor.fc6.bias         of shape (4096,)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: REMATCHING! roi_heads.relation.box_feature_extractor.fc6.weight                                         loaded from roi_heads.box.feature_extractor.fc6.weight       of shape (4096, 12544)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: REMATCHING! roi_heads.relation.box_feature_extractor.fc7.bias                                           loaded from roi_heads.box.feature_extractor.fc7.bias         of shape (4096,)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: REMATCHING! roi_heads.relation.box_feature_extractor.fc7.weight                                         loaded from roi_heads.box.feature_extractor.fc7.weight       of shape (4096, 4096)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias of shape (3072,)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight of shape (3072, 5136)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight of shape (152, 200)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias of shape (151,)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight of shape (151, 512)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias of shape (2560,)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight of shape (2560, 512)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0 of shape (2048,)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse of shape (2048,)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0 of shape (2048,)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse of shape (2048,)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0 of shape (2048, 512)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse of shape (2048, 512)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0 of shape (2048, 4808)
2023-03-05 17:21:15,732 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse of shape (2048, 4808)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.lin_edge_h.bias of shape (512,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.lin_edge_h.weight of shape (512, 1024)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.lin_obj_h.bias of shape (512,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.lin_obj_h.weight of shape (512, 1024)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0 of shape (2048,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse of shape (2048,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0 of shape (2048,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse of shape (2048,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0 of shape (2048, 512)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse of shape (2048, 512)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0 of shape (2048, 4424)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse of shape (2048, 4424)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.obj_embed1.weight of shape (151, 200)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.obj_embed2.weight of shape (151, 200)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.pos_embed.0.bias of shape (32,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.pos_embed.0.weight of shape (32, 9)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.pos_embed.1.bias of shape (32,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.pos_embed.1.num_batches_tracked of shape ()
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.pos_embed.1.running_mean of shape (32,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.pos_embed.1.running_var of shape (32,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.pos_embed.1.weight of shape (32,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.pos_embed.2.bias of shape (128,)
2023-03-05 17:21:15,733 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.pos_embed.2.weight of shape (128, 32)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.untreated_dcd_feat of shape (4936,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.untreated_edg_feat of shape (4296,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.context_layer.untreated_obj_feat of shape (4424,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.freq_bias.obj_baseline.weight of shape (22801, 51)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.post_cat.bias of shape (4096,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.post_cat.weight of shape (4096, 1024)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.post_emb.bias of shape (1024,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.post_emb.weight of shape (1024, 512)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.rel_compress.bias of shape (51,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.predictor.rel_compress.weight of shape (51, 4096)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: REMATCHING! roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias                       loaded from roi_heads.box.feature_extractor.fc6.bias         of shape (4096,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: REMATCHING! roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight                     loaded from roi_heads.box.feature_extractor.fc6.weight       of shape (4096, 12544)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: REMATCHING! roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias                       loaded from roi_heads.box.feature_extractor.fc7.bias         of shape (4096,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: REMATCHING! roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight                     loaded from roi_heads.box.feature_extractor.fc7.weight       of shape (4096, 4096)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias of shape (256,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight of shape (256, 1024, 3, 3)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.0.bias of shape (128,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.0.weight of shape (128, 2, 7, 7)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.2.bias of shape (128,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.2.num_batches_tracked of shape ()
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.2.running_mean of shape (128,)
2023-03-05 17:21:15,734 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.2.running_var of shape (128,)
2023-03-05 17:21:15,735 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.2.weight of shape (128,)
2023-03-05 17:21:15,735 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.4.bias of shape (256,)
2023-03-05 17:21:15,735 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.4.weight of shape (256, 128, 3, 3)
2023-03-05 17:21:15,735 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.6.bias of shape (256,)
2023-03-05 17:21:15,735 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.6.num_batches_tracked of shape ()
2023-03-05 17:21:15,735 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.6.running_mean of shape (256,)
2023-03-05 17:21:15,735 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.6.running_var of shape (256,)
2023-03-05 17:21:15,735 maskrcnn_benchmark.utils.model_serialization INFO: NO-MATCHING of current module: roi_heads.relation.union_feature_extractor.rect_conv.6.weight of shape (256,)
2023-03-05 17:21:15,886 maskrcnn_benchmark INFO: #################### end load checkpointer ####################
2023-03-05 17:21:15,887 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
2023-03-05 17:22:30,326 maskrcnn_benchmark.utils.miscellaneous INFO: Saving labels mapping into /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4/labels.json
2023-03-05 17:22:58,553 maskrcnn_benchmark INFO: #################### end dataloader ####################
2023-03-05 17:22:58,553 maskrcnn_benchmark INFO: Start training
2023-03-05 17:23:11,565 maskrcnn_benchmark INFO: ---Total norm 0.86435 clip coef 5.78467-----------------
2023-03-05 17:23:11,571 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.54098, (torch.Size([1]))
2023-03-05 17:23:11,571 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.34774, (torch.Size([384, 768]))
2023-03-05 17:23:11,571 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.29256, (torch.Size([384, 768]))
2023-03-05 17:23:11,571 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.27419, (torch.Size([1, 384]))
2023-03-05 17:23:11,571 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.26625, (torch.Size([384]))
2023-03-05 17:23:11,571 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.12403, (torch.Size([1152, 384]))
2023-03-05 17:23:11,571 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.12260, (torch.Size([1152, 384]))
2023-03-05 17:23:11,572 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.10804, (torch.Size([384]))
2023-03-05 17:23:11,572 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.10501, (torch.Size([384]))
2023-03-05 17:23:11,572 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.10339, (torch.Size([384, 768, 1, 1]))
2023-03-05 17:23:11,572 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.09072, (torch.Size([384, 384, 1, 1]))
2023-03-05 17:23:11,572 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.07786, (torch.Size([384]))
2023-03-05 17:23:11,572 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.06201, (torch.Size([384, 279]))
2023-03-05 17:23:11,572 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.05160, (torch.Size([384, 51]))
2023-03-05 17:23:11,572 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.05149, (torch.Size([1, 384]))
2023-03-05 17:23:11,573 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.04044, (torch.Size([1152, 384]))
2023-03-05 17:23:11,573 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.04036, (torch.Size([384]))
2023-03-05 17:23:11,573 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.03949, (torch.Size([1]))
2023-03-05 17:23:11,573 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.03831, (torch.Size([384, 4096]))
2023-03-05 17:23:11,573 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.03645, (torch.Size([1152, 384]))
2023-03-05 17:23:11,573 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.03405, (torch.Size([384, 384]))
2023-03-05 17:23:11,573 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.03404, (torch.Size([1]))
2023-03-05 17:23:11,573 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.03159, (torch.Size([384, 384]))
2023-03-05 17:23:11,573 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.03076, (torch.Size([384]))
2023-03-05 17:23:11,574 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.02286, (torch.Size([1152]))
2023-03-05 17:23:11,574 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.02221, (torch.Size([1]))
2023-03-05 17:23:11,574 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.01860, (torch.Size([1, 384]))
2023-03-05 17:23:11,574 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.01624, (torch.Size([1, 384]))
2023-03-05 17:23:11,574 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.01514, (torch.Size([1152]))
2023-03-05 17:23:11,574 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.01391, (torch.Size([384, 384]))
2023-03-05 17:23:11,574 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.01148, (torch.Size([1152]))
2023-03-05 17:23:11,574 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00841, (torch.Size([1152, 384]))
2023-03-05 17:23:11,574 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00836, (torch.Size([1152, 384]))
2023-03-05 17:23:11,575 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00820, (torch.Size([384]))
2023-03-05 17:23:11,575 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00759, (torch.Size([1152]))
2023-03-05 17:23:11,575 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00703, (torch.Size([384, 384]))
2023-03-05 17:23:11,575 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00617, (torch.Size([384]))
2023-03-05 17:23:11,575 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00570, (torch.Size([384, 384]))
2023-03-05 17:23:11,575 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00536, (torch.Size([384, 384]))
2023-03-05 17:23:11,575 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00519, (torch.Size([128, 32]))
2023-03-05 17:23:11,575 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00490, (torch.Size([384]))
2023-03-05 17:23:11,575 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00487, (torch.Size([384]))
2023-03-05 17:23:11,575 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00392, (torch.Size([384, 384]))
2023-03-05 17:23:11,576 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00311, (torch.Size([32, 9]))
2023-03-05 17:23:11,576 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00305, (torch.Size([384]))
2023-03-05 17:23:11,576 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00275, (torch.Size([384]))
2023-03-05 17:23:11,576 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00203, (torch.Size([384]))
2023-03-05 17:23:11,576 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00194, (torch.Size([384]))
2023-03-05 17:23:11,576 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00166, (torch.Size([128]))
2023-03-05 17:23:11,576 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00090, (torch.Size([32]))
2023-03-05 17:23:11,576 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00056, (torch.Size([32]))
2023-03-05 17:23:11,576 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-05 17:23:11,576 maskrcnn_benchmark INFO: -------------------------------
2023-03-05 17:23:11,580 maskrcnn_benchmark INFO: ---Total norm 3.84919 clip coef 1.29897-----------------
2023-03-05 17:23:11,586 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 2.23003, (torch.Size([4096, 4096]))
2023-03-05 17:23:11,587 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 1.87294, (torch.Size([4096, 12544]))
2023-03-05 17:23:11,587 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.73375, (torch.Size([3072, 5136]))
2023-03-05 17:23:11,587 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 1.01919, (torch.Size([4096, 12544]))
2023-03-05 17:23:11,587 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.87670, (torch.Size([4096, 4096]))
2023-03-05 17:23:11,587 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.55745, (torch.Size([4096, 1024]))
2023-03-05 17:23:11,587 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.55617, (torch.Size([512, 1024]))
2023-03-05 17:23:11,587 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 0.52332, (torch.Size([151, 512]))
2023-03-05 17:23:11,587 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.45678, (torch.Size([51, 4096]))
2023-03-05 17:23:11,587 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.30203, (torch.Size([256, 1024, 3, 3]))
2023-03-05 17:23:11,588 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.29598, (torch.Size([2048, 4808]))
2023-03-05 17:23:11,588 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.29331, (torch.Size([2048, 4808]))
2023-03-05 17:23:11,588 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.20540, (torch.Size([151]))
2023-03-05 17:23:11,588 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.17683, (torch.Size([256, 128, 3, 3]))
2023-03-05 17:23:11,588 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.16947, (torch.Size([512]))
2023-03-05 17:23:11,588 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.10342, (torch.Size([51]))
2023-03-05 17:23:11,588 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.09332, (torch.Size([512, 1024]))
2023-03-05 17:23:11,588 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.07598, (torch.Size([3072]))
2023-03-05 17:23:11,588 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.07314, (torch.Size([128, 2, 7, 7]))
2023-03-05 17:23:11,589 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.05528, (torch.Size([2560, 512]))
2023-03-05 17:23:11,589 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.05180, (torch.Size([2048, 4424]))
2023-03-05 17:23:11,589 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.05162, (torch.Size([2048, 512]))
2023-03-05 17:23:11,589 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.05004, (torch.Size([2048, 4424]))
2023-03-05 17:23:11,589 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.04702, (torch.Size([2048, 512]))
2023-03-05 17:23:11,589 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.04222, (torch.Size([4096]))
2023-03-05 17:23:11,589 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.03079, (torch.Size([2560]))
2023-03-05 17:23:11,589 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.02880, (torch.Size([4096]))
2023-03-05 17:23:11,589 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.02395, (torch.Size([1024, 512]))
2023-03-05 17:23:11,590 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.02373, (torch.Size([2048]))
2023-03-05 17:23:11,590 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.02373, (torch.Size([2048]))
2023-03-05 17:23:11,590 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.02324, (torch.Size([512]))
2023-03-05 17:23:11,590 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.02319, (torch.Size([2048]))
2023-03-05 17:23:11,590 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.02319, (torch.Size([2048]))
2023-03-05 17:23:11,590 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.02095, (torch.Size([128, 32]))
2023-03-05 17:23:11,590 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.01782, (torch.Size([22801, 51]))
2023-03-05 17:23:11,590 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.01758, (torch.Size([1024]))
2023-03-05 17:23:11,590 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01205, (torch.Size([4096]))
2023-03-05 17:23:11,590 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01195, (torch.Size([32, 9]))
2023-03-05 17:23:11,591 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01009, (torch.Size([128]))
2023-03-05 17:23:11,591 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00920, (torch.Size([4096]))
2023-03-05 17:23:11,591 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00858, (torch.Size([2048, 512]))
2023-03-05 17:23:11,591 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00812, (torch.Size([2048, 512]))
2023-03-05 17:23:11,591 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00786, (torch.Size([256]))
2023-03-05 17:23:11,591 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00614, (torch.Size([151, 200]))
2023-03-05 17:23:11,591 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00594, (torch.Size([152, 200]))
2023-03-05 17:23:11,591 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00512, (torch.Size([128]))
2023-03-05 17:23:11,591 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00432, (torch.Size([256]))
2023-03-05 17:23:11,592 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00425, (torch.Size([4096]))
2023-03-05 17:23:11,592 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00406, (torch.Size([151, 200]))
2023-03-05 17:23:11,592 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00340, (torch.Size([2048]))
2023-03-05 17:23:11,592 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00340, (torch.Size([2048]))
2023-03-05 17:23:11,592 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00325, (torch.Size([2048]))
2023-03-05 17:23:11,592 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00325, (torch.Size([2048]))
2023-03-05 17:23:11,592 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00310, (torch.Size([32]))
2023-03-05 17:23:11,592 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00279, (torch.Size([256]))
2023-03-05 17:23:11,592 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00257, (torch.Size([128]))
2023-03-05 17:23:11,593 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00238, (torch.Size([32]))
2023-03-05 17:23:11,593 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00220, (torch.Size([256]))
2023-03-05 17:23:11,593 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00149, (torch.Size([128]))
2023-03-05 17:23:11,593 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-05 17:23:11,593 maskrcnn_benchmark INFO: -------------------------------
2023-03-05 17:24:28,711 maskrcnn_benchmark INFO: eta: 7:29:17  iter: 200  loss: 2.2834 (3.8172)  loss_rel: 0.1417 (0.1721)  loss_refine_obj: 2.1993 (3.7268)  ML Loss (cd): -0.1010 (-0.0817)  time: 0.3663 (0.4508)  data: 0.0064 (0.0101)  energy lr: 0.004582  base lr : 0.004582  max mem: 6020
2023-03-05 17:25:45,868 maskrcnn_benchmark INFO: eta: 6:55:29  iter: 400  loss: 1.2346 (2.6261)  loss_rel: 0.1793 (0.1662)  loss_refine_obj: 1.1111 (2.5578)  ML Loss (cd): -0.1184 (-0.0978)  time: 0.3628 (0.4183)  data: 0.0064 (0.0083)  energy lr: 0.008182  base lr : 0.008182  max mem: 6020
2023-03-05 17:27:03,266 maskrcnn_benchmark INFO: eta: 6:43:46  iter: 600  loss: 1.1305 (2.1559)  loss_rel: 0.1532 (0.1628)  loss_refine_obj: 1.0992 (2.0983)  ML Loss (cd): -0.1245 (-0.1052)  time: 0.3768 (0.4079)  data: 0.0065 (0.0077)  energy lr: 0.010000  base lr : 0.010000  max mem: 6020
2023-03-05 17:28:20,873 maskrcnn_benchmark INFO: eta: 6:37:31  iter: 800  loss: 1.2014 (1.9080)  loss_rel: 0.1562 (0.1609)  loss_refine_obj: 1.1581 (1.8570)  ML Loss (cd): -0.1248 (-0.1099)  time: 0.3737 (0.4029)  data: 0.0065 (0.0074)  energy lr: 0.010000  base lr : 0.010000  max mem: 6020
2023-03-05 17:29:40,528 maskrcnn_benchmark INFO: eta: 6:35:16  iter: 1000  loss: 1.1338 (1.7500)  loss_rel: 0.1588 (0.1586)  loss_refine_obj: 1.1061 (1.7042)  ML Loss (cd): -0.1249 (-0.1129)  time: 0.3628 (0.4020)  data: 0.0065 (0.0088)  energy lr: 0.010000  base lr : 0.010000  max mem: 6020
2023-03-05 17:30:58,300 maskrcnn_benchmark INFO: eta: 6:31:47  iter: 1200  loss: 1.2183 (1.6460)  loss_rel: 0.1580 (0.1578)  loss_refine_obj: 1.2103 (1.6030)  ML Loss (cd): -0.1249 (-0.1148)  time: 0.3702 (0.3998)  data: 0.0065 (0.0086)  energy lr: 0.010000  base lr : 0.010000  max mem: 6020
2023-03-05 17:32:16,152 maskrcnn_benchmark INFO: eta: 6:28:59  iter: 1400  loss: 1.0894 (1.5715)  loss_rel: 0.1621 (0.1568)  loss_refine_obj: 1.0167 (1.5309)  ML Loss (cd): -0.1249 (-0.1163)  time: 0.3768 (0.3983)  data: 0.0067 (0.0083)  energy lr: 0.010000  base lr : 0.010000  max mem: 6085
2023-03-05 17:33:33,252 maskrcnn_benchmark INFO: eta: 6:26:06  iter: 1600  loss: 0.9870 (1.5095)  loss_rel: 0.1207 (0.1567)  loss_refine_obj: 1.0129 (1.4701)  ML Loss (cd): -0.1249 (-0.1173)  time: 0.3828 (0.3967)  data: 0.0067 (0.0081)  energy lr: 0.010000  base lr : 0.010000  max mem: 6085
2023-03-05 17:34:50,764 maskrcnn_benchmark INFO: eta: 6:23:48  iter: 1800  loss: 0.9535 (1.4681)  loss_rel: 0.1655 (0.1566)  loss_refine_obj: 0.9513 (1.4296)  ML Loss (cd): -0.1250 (-0.1181)  time: 0.3654 (0.3957)  data: 0.0066 (0.0080)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:36:08,670 maskrcnn_benchmark INFO: eta: 6:21:53  iter: 2000  loss: 0.9405 (1.4334)  loss_rel: 0.1393 (0.1556)  loss_refine_obj: 0.9534 (1.3966)  ML Loss (cd): -0.1250 (-0.1188)  time: 0.3696 (0.3951)  data: 0.0065 (0.0079)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:36:08,673 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4/model_0002000.pth
2023-03-05 17:36:56,593 maskrcnn_benchmark INFO: Start validating
2023-03-05 17:36:56,642 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-05 17:42:07,119 maskrcnn_benchmark INFO: Total run time: 0:05:10.476638 (0.0620953275680542 s / img per device, on 1 devices)
2023-03-05 17:42:07,120 maskrcnn_benchmark INFO: Model inference time: 0:04:55.765133 (0.05915302653312683 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(62754, 7)
0/62754
DONE (t=0.25s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=13.88s).
Accumulating evaluation results...
DONE (t=2.80s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.534
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.538
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.533
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.400
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.483
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.562
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.411
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.612
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.615
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.460
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.564
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.634
2023-03-05 17:44:35,314 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.5380
====================================================================================================
SGG eval:   R @ 20: 0.3253;   R @ 50: 0.3527;   R @ 100: 0.3596;  for mode=sgcls, type=Recall(Main).
SGG eval: ngR @ 20: 0.3686; ngR @ 50: 0.4293; ngR @ 100: 0.4610;  for mode=sgcls, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0089;  zR @ 50: 0.0133;  zR @ 100: 0.0133;  for mode=sgcls, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0169;  zR @ 50: 0.0356;  zR @ 100: 0.0440;  for mode=sgcls, type=1 Shot Recall.
 zR @ 20: 0.0355;  zR @ 50: 0.0521;  zR @ 100: 0.0616;  for mode=sgcls, type=2 Shot Recall.
 zR @ 20: 0.0293;  zR @ 50: 0.0495;  zR @ 100: 0.0568;  for mode=sgcls, type=3 Shot Recall.
 zR @ 20: 0.0322;  zR @ 50: 0.0494;  zR @ 100: 0.0708;  for mode=sgcls, type=4 Shot Recall.
 zR @ 20: 0.0629;  zR @ 50: 0.1001;  zR @ 100: 0.1139;  for mode=sgcls, type=5 Shot Recall.
 zR @ 20: 0.0513;  zR @ 50: 0.0897;  zR @ 100: 0.1128;  for mode=sgcls, type=6 Shot Recall.
 zR @ 20: 0.0451;  zR @ 50: 0.0855;  zR @ 100: 0.1194;  for mode=sgcls, type=7 Shot Recall.
 zR @ 20: 0.0636;  zR @ 50: 0.0848;  zR @ 100: 0.1030;  for mode=sgcls, type=8 Shot Recall.
 zR @ 20: 0.0863;  zR @ 50: 0.1266;  zR @ 100: 0.1317;  for mode=sgcls, type=9 Shot Recall.
 zR @ 20: 0.0689;  zR @ 50: 0.1095;  zR @ 100: 0.1252;  for mode=sgcls, type=10 Shot Recall.
 zR @ 20: 0.0957;  zR @ 50: 0.1223;  zR @ 100: 0.1436;  for mode=sgcls, type=20 Shot Recall.
 zR @ 20: 0.1000;  zR @ 50: 0.1655;  zR @ 100: 0.2012;  for mode=sgcls, type=25 Shot Recall.
 zR @ 20: 0.0390;  zR @ 50: 0.0649;  zR @ 100: 0.0649;  for mode=sgcls, type=30 Shot Recall.
 zR @ 20: 0.1860;  zR @ 50: 0.2093;  zR @ 100: 0.2267;  for mode=sgcls, type=40 Shot Recall.
 zR @ 20: 0.1458;  zR @ 50: 0.1875;  zR @ 100: 0.2083;  for mode=sgcls, type=50 Shot Recall.
 zR @ 20: 0.2115;  zR @ 50: 0.2115;  zR @ 100: 0.2115;  for mode=sgcls, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.3333;  zR @ 100: 0.3333;  for mode=sgcls, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0453;  mR @ 50: 0.0564;  mR @ 100: 0.0602;  for mode=sgcls, type=Mean Recall.
(above:0.0301) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.0202) (attached to:0.0000) (behind:0.3055) (belonging to:0.0000) (between:0.0000) (carrying:0.0066) (covered in:0.0000) (covering:0.0000) (eating:0.0000) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0074) (has:0.4409) (holding:0.2170) (in:0.1595) (in front of:0.0384) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2714) (of:0.2143) (on:0.4965) (on back of:0.0000) (over:0.0122) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.0804) (says:0.0000) (sitting on:0.0524) (standing on:0.0000) (to:0.0000) (under:0.0816) (using:0.0769) (walking in:0.0000) (walking on:0.0000) (watching:0.0000) (wearing:0.4739) (wears:0.0000) (with:0.0248) 
SGG eval:   A @ 20: 0.3826;   A @ 50: 0.3846;   A @ 100: 0.3846;  for mode=sgcls, type=TopK Accuracy.
====================================================================================================

2023-03-05 17:44:35,741 maskrcnn_benchmark INFO: Validation Result: 0.3596
2023-03-05 17:45:52,274 maskrcnn_benchmark INFO: eta: 10:01:31  iter: 2200  loss: 1.0993 (1.4041)  loss_rel: 0.1169 (0.1559)  loss_refine_obj: 1.1218 (1.3675)  ML Loss (cd): -0.1250 (-0.1194)  time: 0.3779 (0.6244)  data: 0.0068 (0.2383)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:47:10,037 maskrcnn_benchmark INFO: eta: 9:40:35  iter: 2400  loss: 1.2108 (1.3776)  loss_rel: 0.1391 (0.1549)  loss_refine_obj: 1.1623 (1.3425)  ML Loss (cd): -0.1250 (-0.1198)  time: 0.3809 (0.6048)  data: 0.0068 (0.2190)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:48:28,413 maskrcnn_benchmark INFO: eta: 9:22:54  iter: 2600  loss: 0.9293 (1.3538)  loss_rel: 0.1296 (0.1539)  loss_refine_obj: 0.8664 (1.3202)  ML Loss (cd): -0.1250 (-0.1202)  time: 0.3730 (0.5884)  data: 0.0068 (0.2027)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:49:45,243 maskrcnn_benchmark INFO: eta: 9:07:02  iter: 2800  loss: 1.0668 (1.3324)  loss_rel: 0.1559 (0.1536)  loss_refine_obj: 0.9775 (1.2994)  ML Loss (cd): -0.1249 (-0.1206)  time: 0.3675 (0.5738)  data: 0.0066 (0.1887)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:51:03,703 maskrcnn_benchmark INFO: eta: 8:53:37  iter: 3000  loss: 1.0026 (1.3159)  loss_rel: 0.1345 (0.1532)  loss_refine_obj: 0.9239 (1.2835)  ML Loss (cd): -0.1249 (-0.1208)  time: 0.3728 (0.5617)  data: 0.0066 (0.1765)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:52:20,533 maskrcnn_benchmark INFO: eta: 8:41:15  iter: 3200  loss: 0.8404 (1.3006)  loss_rel: 0.1322 (0.1530)  loss_refine_obj: 0.8731 (1.2687)  ML Loss (cd): -0.1250 (-0.1211)  time: 0.3776 (0.5506)  data: 0.0065 (0.1659)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:53:38,301 maskrcnn_benchmark INFO: eta: 8:30:26  iter: 3400  loss: 1.1435 (1.2888)  loss_rel: 0.1236 (0.1525)  loss_refine_obj: 1.1061 (1.2575)  ML Loss (cd): -0.1249 (-0.1213)  time: 0.3724 (0.5411)  data: 0.0065 (0.1565)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:54:56,219 maskrcnn_benchmark INFO: eta: 8:20:43  iter: 3600  loss: 0.9709 (1.2797)  loss_rel: 0.1342 (0.1522)  loss_refine_obj: 0.9841 (1.2489)  ML Loss (cd): -0.1248 (-0.1214)  time: 0.3744 (0.5327)  data: 0.0064 (0.1482)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:56:14,554 maskrcnn_benchmark INFO: eta: 8:11:59  iter: 3800  loss: 1.0940 (1.2727)  loss_rel: 0.1290 (0.1519)  loss_refine_obj: 1.0679 (1.2422)  ML Loss (cd): -0.1247 (-0.1215)  time: 0.3806 (0.5253)  data: 0.0065 (0.1407)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:57:32,533 maskrcnn_benchmark INFO: ---Total norm 0.02928 clip coef 170.77228-----------------
2023-03-05 17:57:32,537 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.01428, (torch.Size([384, 4096]))
2023-03-05 17:57:32,537 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.00966, (torch.Size([384, 768]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00914, (torch.Size([384]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.00856, (torch.Size([384, 768]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00842, (torch.Size([1152, 384]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00774, (torch.Size([1152, 384]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00755, (torch.Size([384, 768, 1, 1]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00547, (torch.Size([1, 384]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00505, (torch.Size([384, 279]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00498, (torch.Size([384, 384, 1, 1]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00453, (torch.Size([384]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00446, (torch.Size([384]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00428, (torch.Size([1, 384]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00364, (torch.Size([384, 51]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00347, (torch.Size([384, 384]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00329, (torch.Size([1152, 384]))
2023-03-05 17:57:32,538 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00305, (torch.Size([384]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00294, (torch.Size([1]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00201, (torch.Size([1152]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00197, (torch.Size([384]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00168, (torch.Size([384]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00167, (torch.Size([1152, 384]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00143, (torch.Size([128, 32]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00108, (torch.Size([384]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00101, (torch.Size([1152]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00097, (torch.Size([1]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00081, (torch.Size([1152, 384]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00070, (torch.Size([1152]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00069, (torch.Size([32, 9]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00062, (torch.Size([1152, 384]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00047, (torch.Size([384]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00046, (torch.Size([384, 384]))
2023-03-05 17:57:32,539 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00043, (torch.Size([384]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00037, (torch.Size([384, 384]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00037, (torch.Size([1152]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00036, (torch.Size([128]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00031, (torch.Size([384, 384]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00031, (torch.Size([384, 384]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00028, (torch.Size([1, 384]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00026, (torch.Size([384, 384]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00024, (torch.Size([1]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00024, (torch.Size([1]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00024, (torch.Size([384]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00023, (torch.Size([384, 384]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00018, (torch.Size([32]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00018, (torch.Size([384]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00017, (torch.Size([384]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00016, (torch.Size([32]))
2023-03-05 17:57:32,540 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00013, (torch.Size([384]))
2023-03-05 17:57:32,541 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00008, (torch.Size([1, 384]))
2023-03-05 17:57:32,541 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00008, (torch.Size([384]))
2023-03-05 17:57:32,541 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-05 17:57:32,541 maskrcnn_benchmark INFO: -------------------------------
2023-03-05 17:57:32,545 maskrcnn_benchmark INFO: ---Total norm 21.54346 clip coef 0.23209-----------------
2023-03-05 17:57:32,549 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 15.84667, (torch.Size([4096, 4096]))
2023-03-05 17:57:32,549 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 12.13305, (torch.Size([4096, 12544]))
2023-03-05 17:57:32,549 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 7.18733, (torch.Size([3072, 5136]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 3.42912, (torch.Size([151, 512]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 1.10709, (torch.Size([2560, 512]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.63794, (torch.Size([4096, 12544]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.44137, (torch.Size([51, 4096]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.41458, (torch.Size([4096, 4096]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.29701, (torch.Size([256, 1024, 3, 3]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.24023, (torch.Size([4096, 1024]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.23311, (torch.Size([512, 1024]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.20421, (torch.Size([2048, 4808]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.20167, (torch.Size([2048, 4808]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.17364, (torch.Size([256, 128, 3, 3]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.11416, (torch.Size([128, 2, 7, 7]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.10342, (torch.Size([512, 1024]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.09990, (torch.Size([2048, 4424]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.09950, (torch.Size([151]))
2023-03-05 17:57:32,550 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.09145, (torch.Size([2048, 4424]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.06112, (torch.Size([4096]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.05242, (torch.Size([3072]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.03218, (torch.Size([2560]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.02793, (torch.Size([51]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.02726, (torch.Size([4096]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.02689, (torch.Size([512]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.02142, (torch.Size([32, 9]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.02136, (torch.Size([128, 32]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.01553, (torch.Size([22801, 51]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01395, (torch.Size([128]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.01265, (torch.Size([2048, 512]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.01153, (torch.Size([151, 200]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.01140, (torch.Size([2048, 512]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01026, (torch.Size([1024, 512]))
2023-03-05 17:57:32,551 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00987, (torch.Size([512]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00900, (torch.Size([256]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00695, (torch.Size([4096]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00660, (torch.Size([152, 200]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00540, (torch.Size([2048, 512]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00517, (torch.Size([2048, 512]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00488, (torch.Size([128]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00479, (torch.Size([4096]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00413, (torch.Size([256]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00392, (torch.Size([256]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00373, (torch.Size([128]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00294, (torch.Size([4096]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00293, (torch.Size([32]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00284, (torch.Size([1024]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00232, (torch.Size([32]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00215, (torch.Size([128]))
2023-03-05 17:57:32,552 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00210, (torch.Size([256]))
2023-03-05 17:57:32,553 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00199, (torch.Size([2048]))
2023-03-05 17:57:32,553 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00199, (torch.Size([2048]))
2023-03-05 17:57:32,553 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00195, (torch.Size([2048]))
2023-03-05 17:57:32,553 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00195, (torch.Size([2048]))
2023-03-05 17:57:32,553 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00085, (torch.Size([2048]))
2023-03-05 17:57:32,553 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00085, (torch.Size([2048]))
2023-03-05 17:57:32,553 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00083, (torch.Size([2048]))
2023-03-05 17:57:32,553 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00083, (torch.Size([2048]))
2023-03-05 17:57:32,553 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00077, (torch.Size([151, 200]))
2023-03-05 17:57:32,553 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-05 17:57:32,553 maskrcnn_benchmark INFO: -------------------------------
2023-03-05 17:57:32,556 maskrcnn_benchmark INFO: eta: 8:03:56  iter: 4000  loss: 1.0845 (1.2669)  loss_rel: 0.1208 (0.1514)  loss_refine_obj: 1.0712 (1.2371)  ML Loss (cd): -0.1249 (-0.1217)  time: 0.3893 (0.5185)  data: 0.0066 (0.1340)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 17:57:32,558 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4/model_0004000.pth
2023-03-05 17:58:19,981 maskrcnn_benchmark INFO: Start validating
2023-03-05 17:58:20,038 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-05 18:03:31,026 maskrcnn_benchmark INFO: Total run time: 0:05:10.988065 (0.062197613096237184 s / img per device, on 1 devices)
2023-03-05 18:03:31,027 maskrcnn_benchmark INFO: Model inference time: 0:04:56.232341 (0.059246468257904056 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(62754, 7)
0/62754
DONE (t=0.27s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=14.47s).
Accumulating evaluation results...
DONE (t=2.76s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.493
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.496
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.492
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.362
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.443
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.508
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.376
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.560
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.564
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.512
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.573
2023-03-05 18:06:01,299 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.4964
====================================================================================================
SGG eval:   R @ 20: 0.3315;   R @ 50: 0.3563;   R @ 100: 0.3635;  for mode=sgcls, type=Recall(Main).
SGG eval: ngR @ 20: 0.3761; ngR @ 50: 0.4348; ngR @ 100: 0.4640;  for mode=sgcls, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0089;  zR @ 50: 0.0089;  zR @ 100: 0.0089;  for mode=sgcls, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0201;  zR @ 50: 0.0377;  zR @ 100: 0.0426;  for mode=sgcls, type=1 Shot Recall.
 zR @ 20: 0.0315;  zR @ 50: 0.0405;  zR @ 100: 0.0561;  for mode=sgcls, type=2 Shot Recall.
 zR @ 20: 0.0403;  zR @ 50: 0.0623;  zR @ 100: 0.0806;  for mode=sgcls, type=3 Shot Recall.
 zR @ 20: 0.0408;  zR @ 50: 0.0494;  zR @ 100: 0.0622;  for mode=sgcls, type=4 Shot Recall.
 zR @ 20: 0.0497;  zR @ 50: 0.0943;  zR @ 100: 0.1137;  for mode=sgcls, type=5 Shot Recall.
 zR @ 20: 0.0436;  zR @ 50: 0.0735;  zR @ 100: 0.0838;  for mode=sgcls, type=6 Shot Recall.
 zR @ 20: 0.0444;  zR @ 50: 0.0741;  zR @ 100: 0.0863;  for mode=sgcls, type=7 Shot Recall.
 zR @ 20: 0.0626;  zR @ 50: 0.0869;  zR @ 100: 0.0990;  for mode=sgcls, type=8 Shot Recall.
 zR @ 20: 0.0964;  zR @ 50: 0.1252;  zR @ 100: 0.1396;  for mode=sgcls, type=9 Shot Recall.
 zR @ 20: 0.0811;  zR @ 50: 0.1149;  zR @ 100: 0.1284;  for mode=sgcls, type=10 Shot Recall.
 zR @ 20: 0.0898;  zR @ 50: 0.1185;  zR @ 100: 0.1729;  for mode=sgcls, type=20 Shot Recall.
 zR @ 20: 0.1095;  zR @ 50: 0.1690;  zR @ 100: 0.1857;  for mode=sgcls, type=25 Shot Recall.
 zR @ 20: 0.0260;  zR @ 50: 0.0390;  zR @ 100: 0.0519;  for mode=sgcls, type=30 Shot Recall.
 zR @ 20: 0.1395;  zR @ 50: 0.1744;  zR @ 100: 0.1744;  for mode=sgcls, type=40 Shot Recall.
 zR @ 20: 0.1577;  zR @ 50: 0.2500;  zR @ 100: 0.2760;  for mode=sgcls, type=50 Shot Recall.
 zR @ 20: 0.2372;  zR @ 50: 0.2372;  zR @ 100: 0.2372;  for mode=sgcls, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.3333;  zR @ 100: 0.3333;  for mode=sgcls, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0500;  mR @ 50: 0.0586;  mR @ 100: 0.0620;  for mode=sgcls, type=Mean Recall.
(above:0.0244) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.0126) (attached to:0.0000) (behind:0.2512) (belonging to:0.0000) (between:0.0000) (carrying:0.0088) (covered in:0.0714) (covering:0.0000) (eating:0.0000) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0074) (has:0.4603) (holding:0.2405) (in:0.1391) (in front of:0.0439) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.3069) (of:0.2527) (on:0.4990) (on back of:0.0000) (over:0.0122) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.1012) (says:0.0000) (sitting on:0.0948) (standing on:0.0000) (to:0.0000) (under:0.0561) (using:0.0769) (walking in:0.0000) (walking on:0.0000) (watching:0.0000) (wearing:0.4161) (wears:0.0000) (with:0.0251) 
SGG eval:   A @ 20: 0.3965;   A @ 50: 0.3994;   A @ 100: 0.3994;  for mode=sgcls, type=TopK Accuracy.
====================================================================================================

2023-03-05 18:06:01,725 maskrcnn_benchmark INFO: Validation Result: 0.3635
2023-03-05 18:07:18,934 maskrcnn_benchmark INFO: eta: 9:49:05  iter: 4200  loss: 1.0037 (1.2604)  loss_rel: 0.1222 (0.1514)  loss_refine_obj: 0.9182 (1.2308)  ML Loss (cd): -0.1249 (-0.1218)  time: 0.3785 (0.6334)  data: 0.0066 (0.2492)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 18:08:36,972 maskrcnn_benchmark INFO: eta: 9:36:43  iter: 4400  loss: 1.3078 (1.2602)  loss_rel: 0.1142 (0.1513)  loss_refine_obj: 1.2593 (1.2308)  ML Loss (cd): -0.1248 (-0.1219)  time: 0.3770 (0.6224)  data: 0.0067 (0.2382)  energy lr: 0.010000  base lr : 0.010000  max mem: 6232
2023-03-05 18:09:54,860 maskrcnn_benchmark INFO: eta: 9:25:18  iter: 4600  loss: 1.1455 (1.2607)  loss_rel: 0.1250 (0.1513)  loss_refine_obj: 1.1874 (1.2314)  ML Loss (cd): -0.1249 (-0.1221)  time: 0.3803 (0.6122)  data: 0.0065 (0.2281)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:11:13,404 maskrcnn_benchmark INFO: eta: 9:14:50  iter: 4800  loss: 1.4112 (1.2669)  loss_rel: 0.1233 (0.1511)  loss_refine_obj: 1.3589 (1.2332)  ML Loss (cd): -0.0918 (-0.1173)  time: 0.3980 (0.6031)  data: 0.0068 (0.2189)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:12:31,486 maskrcnn_benchmark INFO: eta: 9:05:02  iter: 5000  loss: 1.4142 (1.2733)  loss_rel: 0.1211 (0.1509)  loss_refine_obj: 1.3207 (1.2385)  ML Loss (cd): -0.1247 (-0.1162)  time: 0.3734 (0.5946)  data: 0.0069 (0.2104)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:13:49,746 maskrcnn_benchmark INFO: eta: 8:55:54  iter: 5200  loss: 1.4365 (1.2796)  loss_rel: 0.1450 (0.1506)  loss_refine_obj: 1.3788 (1.2455)  ML Loss (cd): -0.1249 (-0.1165)  time: 0.3672 (0.5868)  data: 0.0066 (0.2026)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:15:07,393 maskrcnn_benchmark INFO: eta: 8:47:16  iter: 5400  loss: 1.5219 (1.2872)  loss_rel: 0.1400 (0.1505)  loss_refine_obj: 1.4737 (1.2536)  ML Loss (cd): -0.1249 (-0.1168)  time: 0.3660 (0.5794)  data: 0.0067 (0.1953)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:16:26,692 maskrcnn_benchmark INFO: eta: 8:39:24  iter: 5600  loss: 1.5390 (1.3783)  loss_rel: 0.1259 (0.1501)  loss_refine_obj: 1.4762 (1.2628)  ML Loss (cd): -0.1213 (-0.0346)  time: 0.3790 (0.5729)  data: 0.0068 (0.1886)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:17:44,189 maskrcnn_benchmark INFO: eta: 8:31:43  iter: 5800  loss: 1.5666 (1.3878)  loss_rel: 0.1310 (0.1501)  loss_refine_obj: 1.4929 (1.2749)  ML Loss (cd): -0.1246 (-0.0371)  time: 0.3778 (0.5665)  data: 0.0067 (0.1823)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:19:02,546 maskrcnn_benchmark INFO: eta: 8:24:35  iter: 6000  loss: 1.6575 (1.4003)  loss_rel: 0.1380 (0.1495)  loss_refine_obj: 1.6951 (1.2909)  ML Loss (cd): -0.1249 (-0.0401)  time: 0.3734 (0.5607)  data: 0.0066 (0.1765)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:19:02,549 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4/model_0006000.pth
2023-03-05 18:19:40,269 maskrcnn_benchmark INFO: Start validating
2023-03-05 18:19:40,325 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-05 18:24:52,209 maskrcnn_benchmark INFO: Total run time: 0:05:11.884112 (0.062376822328567505 s / img per device, on 1 devices)
2023-03-05 18:24:52,210 maskrcnn_benchmark INFO: Model inference time: 0:04:56.963991 (0.05939279818534851 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(62754, 7)
0/62754
DONE (t=0.26s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=14.56s).
Accumulating evaluation results...
DONE (t=2.82s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.342
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.347
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.341
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.268
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.295
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.361
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.301
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.437
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.439
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.332
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.385
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.452
2023-03-05 18:27:19,263 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.3473
====================================================================================================
SGG eval:   R @ 20: 0.2562;   R @ 50: 0.2762;   R @ 100: 0.2812;  for mode=sgcls, type=Recall(Main).
SGG eval: ngR @ 20: 0.2916; ngR @ 50: 0.3373; ngR @ 100: 0.3602;  for mode=sgcls, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgcls, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0211;  zR @ 50: 0.0296;  zR @ 100: 0.0338;  for mode=sgcls, type=1 Shot Recall.
 zR @ 20: 0.0240;  zR @ 50: 0.0315;  zR @ 100: 0.0395;  for mode=sgcls, type=2 Shot Recall.
 zR @ 20: 0.0256;  zR @ 50: 0.0458;  zR @ 100: 0.0531;  for mode=sgcls, type=3 Shot Recall.
 zR @ 20: 0.0150;  zR @ 50: 0.0236;  zR @ 100: 0.0365;  for mode=sgcls, type=4 Shot Recall.
 zR @ 20: 0.0300;  zR @ 50: 0.0482;  zR @ 100: 0.0614;  for mode=sgcls, type=5 Shot Recall.
 zR @ 20: 0.0154;  zR @ 50: 0.0333;  zR @ 100: 0.0607;  for mode=sgcls, type=6 Shot Recall.
 zR @ 20: 0.0333;  zR @ 50: 0.0417;  zR @ 100: 0.0500;  for mode=sgcls, type=7 Shot Recall.
 zR @ 20: 0.0258;  zR @ 50: 0.0424;  zR @ 100: 0.0606;  for mode=sgcls, type=8 Shot Recall.
 zR @ 20: 0.0612;  zR @ 50: 0.0755;  zR @ 100: 0.0755;  for mode=sgcls, type=9 Shot Recall.
 zR @ 20: 0.0293;  zR @ 50: 0.0428;  zR @ 100: 0.0428;  for mode=sgcls, type=10 Shot Recall.
 zR @ 20: 0.0532;  zR @ 50: 0.0875;  zR @ 100: 0.1336;  for mode=sgcls, type=20 Shot Recall.
 zR @ 20: 0.0786;  zR @ 50: 0.1036;  zR @ 100: 0.1464;  for mode=sgcls, type=25 Shot Recall.
 zR @ 20: 0.0260;  zR @ 50: 0.0260;  zR @ 100: 0.0260;  for mode=sgcls, type=30 Shot Recall.
 zR @ 20: 0.0465;  zR @ 50: 0.0581;  zR @ 100: 0.0581;  for mode=sgcls, type=40 Shot Recall.
 zR @ 20: 0.1250;  zR @ 50: 0.1667;  zR @ 100: 0.1875;  for mode=sgcls, type=50 Shot Recall.
 zR @ 20: 0.1731;  zR @ 50: 0.1731;  zR @ 100: 0.1731;  for mode=sgcls, type=100 Shot Recall.
 zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgcls, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0362;  mR @ 50: 0.0429;  mR @ 100: 0.0456;  for mode=sgcls, type=Mean Recall.
(above:0.0315) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.0253) (attached to:0.0000) (behind:0.2197) (belonging to:0.0000) (between:0.0000) (carrying:0.0132) (covered in:0.0000) (covering:0.0000) (eating:0.0000) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.3482) (holding:0.1531) (in:0.1056) (in front of:0.0206) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2363) (of:0.1539) (on:0.3863) (on back of:0.0000) (over:0.0122) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.0491) (says:0.0000) (sitting on:0.0524) (standing on:0.0000) (to:0.0000) (under:0.0850) (using:0.0000) (walking in:0.0000) (walking on:0.0000) (watching:0.0000) (wearing:0.3679) (wears:0.0000) (with:0.0210) 
SGG eval:   A @ 20: 0.3094;   A @ 50: 0.3107;   A @ 100: 0.3107;  for mode=sgcls, type=TopK Accuracy.
====================================================================================================

2023-03-05 18:27:19,707 maskrcnn_benchmark INFO: Validation Result: 0.2812
2023-03-05 18:28:37,068 maskrcnn_benchmark INFO: eta: 9:29:36  iter: 6200  loss: 1.7188 (1.4132)  loss_rel: 0.1514 (0.1493)  loss_refine_obj: 1.7704 (1.3066)  ML Loss (cd): -0.1250 (-0.0428)  time: 0.3678 (0.6352)  data: 0.0069 (0.2512)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:29:54,407 maskrcnn_benchmark INFO: eta: 9:20:32  iter: 6400  loss: 1.7773 (1.4274)  loss_rel: 0.1272 (0.1491)  loss_refine_obj: 1.7652 (1.3236)  ML Loss (cd): -0.1250 (-0.0454)  time: 0.3726 (0.6275)  data: 0.0069 (0.2436)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:31:12,261 maskrcnn_benchmark INFO: eta: 9:12:01  iter: 6600  loss: 2.1389 (1.4473)  loss_rel: 0.1419 (0.1491)  loss_refine_obj: 2.1327 (1.3460)  ML Loss (cd): -0.1249 (-0.0478)  time: 0.3798 (0.6203)  data: 0.0071 (0.2364)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:32:31,333 maskrcnn_benchmark INFO: eta: 9:04:05  iter: 6800  loss: 2.3710 (1.4690)  loss_rel: 0.1521 (0.1490)  loss_refine_obj: 2.4302 (1.3700)  ML Loss (cd): -0.1250 (-0.0500)  time: 0.3798 (0.6136)  data: 0.0068 (0.2297)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:33:49,854 maskrcnn_benchmark INFO: eta: 8:56:28  iter: 7000  loss: 3.6366 (3.5800)  loss_rel: 0.1195 (0.1490)  loss_refine_obj: 2.7616 (1.4071)  ML Loss (cd): 0.4613 (2.0240)  time: 0.3784 (0.6073)  data: 0.0067 (0.2233)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:35:08,533 maskrcnn_benchmark INFO: eta: 8:49:13  iter: 7200  loss: 387.8377 (1277.6645)  loss_rel: 0.2528 (0.1495)  loss_refine_obj: 6.9529 (1.5044)  ML Loss (cd): 383.2511 (1276.0106)  time: 0.3699 (0.6014)  data: 0.0066 (0.2173)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:36:28,756 maskrcnn_benchmark INFO: eta: 8:42:28  iter: 7400  loss: 15.0726 (2311.7990)  loss_rel: 0.1366 (0.1501)  loss_refine_obj: 4.5880 (1.5835)  ML Loss (cd): 11.3436 (2310.0654)  time: 0.3859 (0.5960)  data: 0.0066 (0.2116)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:37:46,904 maskrcnn_benchmark INFO: eta: 8:35:45  iter: 7600  loss: 47764.3633 (7037.6845)  loss_rel: 0.1378 (0.1503)  loss_refine_obj: 3.6764 (1.6988)  ML Loss (cd): 47761.2266 (7035.8354)  time: 0.3777 (0.5906)  data: 0.0065 (0.2062)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:39:04,532 maskrcnn_benchmark INFO: eta: 8:29:16  iter: 7800  loss: 2.7629 (6964.0491)  loss_rel: 0.1240 (0.1502)  loss_refine_obj: 2.6166 (1.7539)  ML Loss (cd): 0.0000 (6962.1449)  time: 0.3772 (0.5854)  data: 0.0066 (0.2011)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:40:22,814 maskrcnn_benchmark INFO: ---Total norm 0.00268 clip coef 1865.47095-----------------
2023-03-05 18:40:22,817 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00268, (torch.Size([1]))
2023-03-05 18:40:22,817 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00000, (torch.Size([384, 4096]))
2023-03-05 18:40:22,817 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,817 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00000, (torch.Size([384, 279]))
2023-03-05 18:40:22,817 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,817 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00000, (torch.Size([384, 51]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00000, (torch.Size([32, 9]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00000, (torch.Size([32]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00000, (torch.Size([32]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00000, (torch.Size([128, 32]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00000, (torch.Size([128]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,818 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00000, (torch.Size([384, 768, 1, 1]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00000, (torch.Size([384, 384, 1, 1]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00000, (torch.Size([1152]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00000, (torch.Size([1152]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00000, (torch.Size([384, 384]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00000, (torch.Size([384, 384]))
2023-03-05 18:40:22,819 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00000, (torch.Size([1152]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00000, (torch.Size([1152]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00000, (torch.Size([1, 384]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00000, (torch.Size([1]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00000, (torch.Size([1, 384]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00000, (torch.Size([1]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.00000, (torch.Size([384, 768]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00000, (torch.Size([1, 384]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00000, (torch.Size([1]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00000, (torch.Size([384, 384]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.00000, (torch.Size([384, 768]))
2023-03-05 18:40:22,820 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00000, (torch.Size([384]))
2023-03-05 18:40:22,821 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00000, (torch.Size([1, 384]))
2023-03-05 18:40:22,821 maskrcnn_benchmark INFO: -------------------------------
2023-03-05 18:40:22,825 maskrcnn_benchmark INFO: ---Total norm 189.46736 clip coef 0.02639-----------------
2023-03-05 18:40:22,829 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 152.76668, (torch.Size([4096, 4096]))
2023-03-05 18:40:22,829 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 101.83414, (torch.Size([4096, 12544]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 44.97451, (torch.Size([3072, 5136]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 12.46784, (torch.Size([151, 512]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 3.22546, (torch.Size([2560, 512]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.57686, (torch.Size([4096, 12544]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.55191, (torch.Size([51, 4096]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.37735, (torch.Size([4096, 4096]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.32671, (torch.Size([2048, 4808]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.32366, (torch.Size([2048, 4424]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.31150, (torch.Size([2048, 4808]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.26308, (torch.Size([4096]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.23525, (torch.Size([256, 1024, 3, 3]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.22115, (torch.Size([4096, 1024]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.22063, (torch.Size([2048, 4424]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.21953, (torch.Size([512, 1024]))
2023-03-05 18:40:22,830 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.19962, (torch.Size([256, 128, 3, 3]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.15514, (torch.Size([512, 1024]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.14665, (torch.Size([151]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.12020, (torch.Size([128, 2, 7, 7]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.07732, (torch.Size([3072]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.04912, (torch.Size([2560]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.04466, (torch.Size([32, 9]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.04229, (torch.Size([128, 32]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.03694, (torch.Size([4096]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.03020, (torch.Size([51]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.02340, (torch.Size([512]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.02331, (torch.Size([151, 200]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01599, (torch.Size([128]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.01480, (torch.Size([22801, 51]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.01326, (torch.Size([512]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.01008, (torch.Size([2048, 512]))
2023-03-05 18:40:22,831 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.00949, (torch.Size([2048, 512]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.00921, (torch.Size([1024, 512]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00903, (torch.Size([152, 200]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00721, (torch.Size([32]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00689, (torch.Size([128]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00673, (torch.Size([128]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00663, (torch.Size([2048, 512]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00575, (torch.Size([4096]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00564, (torch.Size([2048, 512]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00540, (torch.Size([32]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00529, (torch.Size([256]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00450, (torch.Size([4096]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00412, (torch.Size([256]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00255, (torch.Size([1024]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00243, (torch.Size([256]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00238, (torch.Size([4096]))
2023-03-05 18:40:22,832 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00205, (torch.Size([256]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00154, (torch.Size([2048]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00154, (torch.Size([2048]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00126, (torch.Size([2048]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00126, (torch.Size([2048]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00115, (torch.Size([128]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00094, (torch.Size([2048]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00094, (torch.Size([2048]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00089, (torch.Size([2048]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00089, (torch.Size([2048]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00054, (torch.Size([151, 200]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-05 18:40:22,833 maskrcnn_benchmark INFO: -------------------------------
2023-03-05 18:40:22,836 maskrcnn_benchmark INFO: eta: 8:23:07  iter: 8000  loss: 2.7028 (6796.0192)  loss_rel: 0.1140 (0.1502)  loss_refine_obj: 2.5525 (1.7760)  ML Loss (cd): 0.0000 (6794.0929)  time: 0.3853 (0.5805)  data: 0.0064 (0.1962)  energy lr: 0.010000  base lr : 0.010000  max mem: 6477
2023-03-05 18:40:22,838 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4/model_0008000.pth
2023-03-05 18:41:10,228 maskrcnn_benchmark INFO: Start validating
2023-03-05 18:41:10,284 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-05 18:46:21,406 maskrcnn_benchmark INFO: Total run time: 0:05:11.121505 (0.06222430090904236 s / img per device, on 1 devices)
2023-03-05 18:46:21,407 maskrcnn_benchmark INFO: Model inference time: 0:04:56.301516 (0.05926030321121216 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(62754, 7)
0/62754
DONE (t=0.12s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=14.03s).
Accumulating evaluation results...
DONE (t=2.83s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.219
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.224
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.218
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.214
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.199
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.224
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.223
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.320
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.321
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.282
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.291
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.319
2023-03-05 18:48:44,157 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2245
====================================================================================================
SGG eval:   R @ 20: 0.1963;   R @ 50: 0.2137;   R @ 100: 0.2193;  for mode=sgcls, type=Recall(Main).
SGG eval: ngR @ 20: 0.2170; ngR @ 50: 0.2536; ngR @ 100: 0.2722;  for mode=sgcls, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgcls, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0042;  zR @ 50: 0.0106;  zR @ 100: 0.0134;  for mode=sgcls, type=1 Shot Recall.
 zR @ 20: 0.0105;  zR @ 50: 0.0165;  zR @ 100: 0.0275;  for mode=sgcls, type=2 Shot Recall.
 zR @ 20: 0.0037;  zR @ 50: 0.0147;  zR @ 100: 0.0220;  for mode=sgcls, type=3 Shot Recall.
 zR @ 20: 0.0215;  zR @ 50: 0.0300;  zR @ 100: 0.0343;  for mode=sgcls, type=4 Shot Recall.
 zR @ 20: 0.0197;  zR @ 50: 0.0241;  zR @ 100: 0.0285;  for mode=sgcls, type=5 Shot Recall.
 zR @ 20: 0.0231;  zR @ 50: 0.0350;  zR @ 100: 0.0350;  for mode=sgcls, type=6 Shot Recall.
 zR @ 20: 0.0111;  zR @ 50: 0.0400;  zR @ 100: 0.0533;  for mode=sgcls, type=7 Shot Recall.
 zR @ 20: 0.0212;  zR @ 50: 0.0394;  zR @ 100: 0.0394;  for mode=sgcls, type=8 Shot Recall.
 zR @ 20: 0.0432;  zR @ 50: 0.0576;  zR @ 100: 0.0576;  for mode=sgcls, type=9 Shot Recall.
 zR @ 20: 0.0486;  zR @ 50: 0.0622;  zR @ 100: 0.0757;  for mode=sgcls, type=10 Shot Recall.
 zR @ 20: 0.0426;  zR @ 50: 0.0638;  zR @ 100: 0.0638;  for mode=sgcls, type=20 Shot Recall.
 zR @ 20: 0.0821;  zR @ 50: 0.1429;  zR @ 100: 0.1667;  for mode=sgcls, type=25 Shot Recall.
 zR @ 20: 0.0390;  zR @ 50: 0.0390;  zR @ 100: 0.0390;  for mode=sgcls, type=30 Shot Recall.
 zR @ 20: 0.0581;  zR @ 50: 0.0698;  zR @ 100: 0.0698;  for mode=sgcls, type=40 Shot Recall.
 zR @ 20: 0.0417;  zR @ 50: 0.0833;  zR @ 100: 0.1667;  for mode=sgcls, type=50 Shot Recall.
 zR @ 20: 0.0449;  zR @ 50: 0.0449;  zR @ 100: 0.0449;  for mode=sgcls, type=100 Shot Recall.
 zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgcls, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0243;  mR @ 50: 0.0291;  mR @ 100: 0.0311;  for mode=sgcls, type=Mean Recall.
(above:0.0244) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.0000) (attached to:0.0000) (behind:0.1499) (belonging to:0.0000) (between:0.0000) (carrying:0.0000) (covered in:0.0000) (covering:0.0000) (eating:0.0000) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.2573) (holding:0.0779) (in:0.0563) (in front of:0.0264) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.1972) (of:0.0864) (on:0.3102) (on back of:0.0000) (over:0.0000) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.0208) (says:0.0000) (sitting on:0.0209) (standing on:0.0000) (to:0.0000) (under:0.0672) (using:0.0000) (walking in:0.0000) (walking on:0.0000) (watching:0.0000) (wearing:0.2469) (wears:0.0000) (with:0.0156) 
SGG eval:   A @ 20: 0.2531;   A @ 50: 0.2546;   A @ 100: 0.2546;  for mode=sgcls, type=TopK Accuracy.
====================================================================================================

2023-03-05 18:48:44,626 maskrcnn_benchmark INFO: Validation Result: 0.2193
2023-03-05 18:48:44,626 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-05 18:48:44,627 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-05 18:50:02,671 maskrcnn_benchmark INFO: eta: 9:10:01  iter: 8200  loss: 2.4765 (6630.4038)  loss_rel: 0.1198 (0.1501)  loss_refine_obj: 2.3338 (1.7935)  ML Loss (cd): 0.0000 (6628.4602)  time: 0.3715 (0.6371)  data: 0.0070 (0.2528)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 18:51:19,858 maskrcnn_benchmark INFO: eta: 9:02:45  iter: 8400  loss: 2.2067 (6472.5965)  loss_rel: 0.1245 (0.1501)  loss_refine_obj: 2.0728 (1.8067)  ML Loss (cd): 0.0000 (6470.6397)  time: 0.3737 (0.6311)  data: 0.0070 (0.2469)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 18:52:38,209 maskrcnn_benchmark INFO: eta: 8:55:52  iter: 8600  loss: 2.3318 (6322.1278)  loss_rel: 0.1149 (0.1499)  loss_refine_obj: 2.1059 (1.8182)  ML Loss (cd): 0.0000 (6320.1597)  time: 0.3689 (0.6255)  data: 0.0069 (0.2414)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 18:53:56,767 maskrcnn_benchmark INFO: eta: 8:49:16  iter: 8800  loss: 2.0710 (6178.4964)  loss_rel: 0.1155 (0.1499)  loss_refine_obj: 1.9931 (1.8268)  ML Loss (cd): 0.0000 (6176.5197)  time: 0.3803 (0.6203)  data: 0.0069 (0.2360)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 18:55:15,413 maskrcnn_benchmark INFO: eta: 8:42:55  iter: 9000  loss: 2.0648 (6041.2462)  loss_rel: 0.1313 (0.1498)  loss_refine_obj: 1.9464 (1.8327)  ML Loss (cd): 0.0000 (6039.2637)  time: 0.3666 (0.6152)  data: 0.0069 (0.2309)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 18:56:33,582 maskrcnn_benchmark INFO: eta: 8:36:44  iter: 9200  loss: 2.0630 (5909.9640)  loss_rel: 0.1086 (0.1497)  loss_refine_obj: 1.8759 (1.8374)  ML Loss (cd): 0.0000 (5907.9768)  time: 0.3863 (0.6103)  data: 0.0068 (0.2261)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 18:57:52,094 maskrcnn_benchmark INFO: eta: 8:30:48  iter: 9400  loss: 2.0174 (5784.3250)  loss_rel: 0.1107 (0.1496)  loss_refine_obj: 1.8278 (1.8406)  ML Loss (cd): 0.0000 (5782.3348)  time: 0.3732 (0.6057)  data: 0.0068 (0.2214)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 18:59:09,837 maskrcnn_benchmark INFO: eta: 8:24:59  iter: 9600  loss: 2.0827 (5663.8628)  loss_rel: 0.1386 (0.1496)  loss_refine_obj: 1.8760 (1.8436)  ML Loss (cd): 0.0000 (5661.8696)  time: 0.3817 (0.6012)  data: 0.0067 (0.2169)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 19:00:28,343 maskrcnn_benchmark INFO: eta: 8:19:25  iter: 9800  loss: 1.8571 (5548.3149)  loss_rel: 0.1212 (0.1493)  loss_refine_obj: 1.7360 (1.8443)  ML Loss (cd): 0.0000 (5546.3212)  time: 0.3816 (0.5969)  data: 0.0067 (0.2126)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 19:01:46,958 maskrcnn_benchmark INFO: eta: 8:14:02  iter: 10000  loss: 1.9416 (5437.3888)  loss_rel: 0.1343 (0.1492)  loss_refine_obj: 1.8038 (1.8449)  ML Loss (cd): 0.0000 (5435.3948)  time: 0.3741 (0.5928)  data: 0.0067 (0.2085)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 19:01:46,961 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4/model_0010000.pth
2023-03-05 19:02:14,900 maskrcnn_benchmark INFO: Start validating
2023-03-05 19:02:14,956 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-05 19:07:25,863 maskrcnn_benchmark INFO: Total run time: 0:05:10.906092 (0.062181218481063845 s / img per device, on 1 devices)
2023-03-05 19:07:25,864 maskrcnn_benchmark INFO: Model inference time: 0:04:55.836720 (0.05916734390258789 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(62754, 7)
0/62754
DONE (t=0.41s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=14.45s).
Accumulating evaluation results...
DONE (t=2.81s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.295
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.300
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.294
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.246
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.260
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.309
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.270
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.398
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.399
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.320
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.354
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.406
2023-03-05 19:09:53,092 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.3001
====================================================================================================
SGG eval:   R @ 20: 0.2678;   R @ 50: 0.2870;   R @ 100: 0.2920;  for mode=sgcls, type=Recall(Main).
SGG eval: ngR @ 20: 0.3023; ngR @ 50: 0.3469; ngR @ 100: 0.3716;  for mode=sgcls, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgcls, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0148;  zR @ 50: 0.0275;  zR @ 100: 0.0345;  for mode=sgcls, type=1 Shot Recall.
 zR @ 20: 0.0135;  zR @ 50: 0.0135;  zR @ 100: 0.0255;  for mode=sgcls, type=2 Shot Recall.
 zR @ 20: 0.0201;  zR @ 50: 0.0403;  zR @ 100: 0.0513;  for mode=sgcls, type=3 Shot Recall.
 zR @ 20: 0.0150;  zR @ 50: 0.0236;  zR @ 100: 0.0365;  for mode=sgcls, type=4 Shot Recall.
 zR @ 20: 0.0307;  zR @ 50: 0.0387;  zR @ 100: 0.0563;  for mode=sgcls, type=5 Shot Recall.
 zR @ 20: 0.0231;  zR @ 50: 0.0359;  zR @ 100: 0.0538;  for mode=sgcls, type=6 Shot Recall.
 zR @ 20: 0.0167;  zR @ 50: 0.0463;  zR @ 100: 0.0607;  for mode=sgcls, type=7 Shot Recall.
 zR @ 20: 0.0182;  zR @ 50: 0.0404;  zR @ 100: 0.0525;  for mode=sgcls, type=8 Shot Recall.
 zR @ 20: 0.0719;  zR @ 50: 0.0719;  zR @ 100: 0.0791;  for mode=sgcls, type=9 Shot Recall.
 zR @ 20: 0.0676;  zR @ 50: 0.0878;  zR @ 100: 0.0946;  for mode=sgcls, type=10 Shot Recall.
 zR @ 20: 0.0532;  zR @ 50: 0.0771;  zR @ 100: 0.0984;  for mode=sgcls, type=20 Shot Recall.
 zR @ 20: 0.0792;  zR @ 50: 0.1095;  zR @ 100: 0.1310;  for mode=sgcls, type=25 Shot Recall.
 zR @ 20: 0.0390;  zR @ 50: 0.0390;  zR @ 100: 0.0390;  for mode=sgcls, type=30 Shot Recall.
 zR @ 20: 0.0465;  zR @ 50: 0.0698;  zR @ 100: 0.0698;  for mode=sgcls, type=40 Shot Recall.
 zR @ 20: 0.1042;  zR @ 50: 0.1667;  zR @ 100: 0.2083;  for mode=sgcls, type=50 Shot Recall.
 zR @ 20: 0.0641;  zR @ 50: 0.0641;  zR @ 100: 0.0641;  for mode=sgcls, type=100 Shot Recall.
 zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgcls, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0359;  mR @ 50: 0.0428;  mR @ 100: 0.0456;  for mode=sgcls, type=Mean Recall.
(above:0.0258) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.0101) (attached to:0.0000) (behind:0.2093) (belonging to:0.0000) (between:0.0000) (carrying:0.0000) (covered in:0.0000) (covering:0.0000) (eating:0.0000) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0074) (has:0.3682) (holding:0.1317) (in:0.0807) (in front of:0.0218) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2420) (of:0.1388) (on:0.4039) (on back of:0.0000) (over:0.0000) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.0952) (says:0.0000) (sitting on:0.0607) (standing on:0.0000) (to:0.0000) (under:0.0740) (using:0.0000) (walking in:0.0000) (walking on:0.0000) (watching:0.0000) (wearing:0.3889) (wears:0.0000) (with:0.0213) 
SGG eval:   A @ 20: 0.3260;   A @ 50: 0.3273;   A @ 100: 0.3273;  for mode=sgcls, type=TopK Accuracy.
====================================================================================================

2023-03-05 19:09:53,523 maskrcnn_benchmark INFO: Validation Result: 0.2920
2023-03-05 19:11:11,280 maskrcnn_benchmark INFO: eta: 8:48:19  iter: 10200  loss: 1.7225 (5330.8123)  loss_rel: 0.1285 (0.1492)  loss_refine_obj: 1.6358 (1.8447)  ML Loss (cd): 0.0000 (5328.8184)  time: 0.3709 (0.6365)  data: 0.0069 (0.2523)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 19:12:28,614 maskrcnn_benchmark INFO: eta: 8:42:14  iter: 10400  loss: 1.6334 (5228.3353)  loss_rel: 0.1442 (0.1491)  loss_refine_obj: 1.3820 (1.8450)  ML Loss (cd): 0.0000 (5226.3411)  time: 0.3718 (0.6317)  data: 0.0068 (0.2476)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 19:13:46,587 maskrcnn_benchmark INFO: eta: 8:36:22  iter: 10600  loss: 1.8581 (5129.7236)  loss_rel: 0.1298 (0.1491)  loss_refine_obj: 1.6126 (1.8435)  ML Loss (cd): 0.0000 (5127.7309)  time: 0.3681 (0.6272)  data: 0.0068 (0.2430)  energy lr: 0.000500  base lr : 0.000500  max mem: 6477
2023-03-05 19:15:04,665 maskrcnn_benchmark INFO: eta: 8:30:41  iter: 10800  loss: 1.8686 (5034.7640)  loss_rel: 0.1524 (0.1491)  loss_refine_obj: 1.7130 (1.8419)  ML Loss (cd): 0.0000 (5032.7729)  time: 0.3737 (0.6228)  data: 0.0067 (0.2386)  energy lr: 0.000500  base lr : 0.000500  max mem: 6551
2023-03-05 19:16:22,610 maskrcnn_benchmark INFO: eta: 8:25:08  iter: 11000  loss: 1.8266 (4943.2569)  loss_rel: 0.1299 (0.1490)  loss_refine_obj: 1.7087 (1.8398)  ML Loss (cd): 0.0000 (4941.2680)  time: 0.3837 (0.6186)  data: 0.0067 (0.2344)  energy lr: 0.000500  base lr : 0.000500  max mem: 6551
2023-03-05 19:17:41,260 maskrcnn_benchmark INFO: eta: 8:19:48  iter: 11200  loss: 1.9136 (4855.0185)  loss_rel: 0.1166 (0.1489)  loss_refine_obj: 1.7982 (1.8385)  ML Loss (cd): 0.0000 (4853.0311)  time: 0.3837 (0.6145)  data: 0.0066 (0.2304)  energy lr: 0.000500  base lr : 0.000500  max mem: 6551
2023-03-05 19:18:59,399 maskrcnn_benchmark INFO: eta: 8:14:35  iter: 11400  loss: 1.5185 (4769.8750)  loss_rel: 0.1522 (0.1488)  loss_refine_obj: 1.3912 (1.8360)  ML Loss (cd): 0.0000 (4767.8902)  time: 0.3692 (0.6106)  data: 0.0066 (0.2264)  energy lr: 0.000500  base lr : 0.000500  max mem: 6551
2023-03-05 19:20:16,403 maskrcnn_benchmark INFO: eta: 8:09:24  iter: 11600  loss: 1.9915 (4687.6676)  loss_rel: 0.1380 (0.1488)  loss_refine_obj: 1.8441 (1.8336)  ML Loss (cd): 0.0000 (4685.6852)  time: 0.3768 (0.6067)  data: 0.0066 (0.2227)  energy lr: 0.000500  base lr : 0.000500  max mem: 6551
2023-03-05 19:21:34,450 maskrcnn_benchmark INFO: eta: 8:04:26  iter: 11800  loss: 1.6501 (4608.2525)  loss_rel: 0.1468 (0.1487)  loss_refine_obj: 1.5153 (1.8310)  ML Loss (cd): 0.0000 (4606.2728)  time: 0.3689 (0.6030)  data: 0.0068 (0.2190)  energy lr: 0.000500  base lr : 0.000500  max mem: 6551
2023-03-05 19:22:52,871 maskrcnn_benchmark INFO: ---Total norm 0.00000 clip coef 4037407.25000-----------------
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00000, (torch.Size([1]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00000, (torch.Size([384, 4096]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00000, (torch.Size([384, 279]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00000, (torch.Size([384, 51]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00000, (torch.Size([32, 9]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00000, (torch.Size([32]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00000, (torch.Size([32]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00000, (torch.Size([128, 32]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00000, (torch.Size([128]))
2023-03-05 19:22:52,873 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00000, (torch.Size([384, 768, 1, 1]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00000, (torch.Size([384, 384, 1, 1]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00000, (torch.Size([1152]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00000, (torch.Size([1152]))
2023-03-05 19:22:52,874 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00000, (torch.Size([384, 384]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00000, (torch.Size([384, 384]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00000, (torch.Size([1152]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00000, (torch.Size([1152]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00000, (torch.Size([1, 384]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00000, (torch.Size([1]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00000, (torch.Size([1, 384]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00000, (torch.Size([1]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.00000, (torch.Size([384, 768]))
2023-03-05 19:22:52,875 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,876 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00000, (torch.Size([1, 384]))
2023-03-05 19:22:52,876 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00000, (torch.Size([1]))
2023-03-05 19:22:52,876 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00000, (torch.Size([384, 384]))
2023-03-05 19:22:52,876 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,876 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.00000, (torch.Size([384, 768]))
2023-03-05 19:22:52,876 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00000, (torch.Size([384]))
2023-03-05 19:22:52,876 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00000, (torch.Size([1, 384]))
2023-03-05 19:22:52,876 maskrcnn_benchmark INFO: -------------------------------
2023-03-05 19:22:52,880 maskrcnn_benchmark INFO: ---Total norm 112.16651 clip coef 0.04458-----------------
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 80.35503, (torch.Size([4096, 4096]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 70.83508, (torch.Size([4096, 12544]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 32.20798, (torch.Size([3072, 5136]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 8.09530, (torch.Size([151, 512]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 1.84924, (torch.Size([2560, 512]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.30015, (torch.Size([4096]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.25808, (torch.Size([2048, 4424]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.23721, (torch.Size([2048, 4808]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.23207, (torch.Size([2048, 4808]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.23029, (torch.Size([4096, 12544]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.18899, (torch.Size([2048, 4424]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.15517, (torch.Size([512, 1024]))
2023-03-05 19:22:52,885 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.14893, (torch.Size([51, 4096]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.14839, (torch.Size([4096, 4096]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.12202, (torch.Size([512, 1024]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.11794, (torch.Size([4096, 1024]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.10041, (torch.Size([256, 1024, 3, 3]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.09450, (torch.Size([151]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.05952, (torch.Size([256, 128, 3, 3]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.05785, (torch.Size([3072]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.03993, (torch.Size([2560]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.02833, (torch.Size([4096]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.02551, (torch.Size([128, 2, 7, 7]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.02188, (torch.Size([32, 9]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.02027, (torch.Size([512]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.02022, (torch.Size([128, 32]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.01301, (torch.Size([151, 200]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00965, (torch.Size([512]))
2023-03-05 19:22:52,886 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.00735, (torch.Size([22801, 51]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00687, (torch.Size([152, 200]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.00567, (torch.Size([51]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.00560, (torch.Size([1024, 512]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.00445, (torch.Size([128]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.00427, (torch.Size([2048, 512]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00422, (torch.Size([2048, 512]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.00419, (torch.Size([2048, 512]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00409, (torch.Size([128]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00347, (torch.Size([32]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00342, (torch.Size([2048, 512]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00268, (torch.Size([4096]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00265, (torch.Size([32]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00249, (torch.Size([4096]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00217, (torch.Size([256]))
2023-03-05 19:22:52,887 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00175, (torch.Size([1024]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00125, (torch.Size([128]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00120, (torch.Size([256]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00105, (torch.Size([256]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00101, (torch.Size([4096]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00087, (torch.Size([256]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00068, (torch.Size([128]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00055, (torch.Size([2048]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00055, (torch.Size([2048]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00054, (torch.Size([2048]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00054, (torch.Size([2048]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00048, (torch.Size([2048]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00048, (torch.Size([2048]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00040, (torch.Size([2048]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00040, (torch.Size([2048]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00019, (torch.Size([151, 200]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-05 19:22:52,888 maskrcnn_benchmark INFO: -------------------------------
2023-03-05 19:22:52,891 maskrcnn_benchmark INFO: eta: 7:59:37  iter: 12000  loss: 1.8601 (4531.4786)  loss_rel: 0.1245 (0.1486)  loss_refine_obj: 1.7571 (1.8283)  ML Loss (cd): 0.0000 (4529.5016)  time: 0.3864 (0.5995)  data: 0.0068 (0.2155)  energy lr: 0.000500  base lr : 0.000500  max mem: 6551
2023-03-05 19:22:52,894 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4/model_0012000.pth
2023-03-05 19:23:20,963 maskrcnn_benchmark INFO: Start validating
2023-03-05 19:23:21,022 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-05 19:28:33,478 maskrcnn_benchmark INFO: Total run time: 0:05:12.455999 (0.062491199731826784 s / img per device, on 1 devices)
2023-03-05 19:28:33,479 maskrcnn_benchmark INFO: Model inference time: 0:04:57.493785 (0.059498757076263425 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(62754, 7)
0/62754
DONE (t=0.43s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=14.64s).
Accumulating evaluation results...
DONE (t=2.80s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.352
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.357
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.351
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.268
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.312
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.371
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.307
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.456
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.458
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.331
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.410
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.466
2023-03-05 19:31:01,389 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.3570
====================================================================================================
SGG eval:   R @ 20: 0.2838;   R @ 50: 0.3040;   R @ 100: 0.3103;  for mode=sgcls, type=Recall(Main).
SGG eval: ngR @ 20: 0.3196; ngR @ 50: 0.3679; ngR @ 100: 0.3954;  for mode=sgcls, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0044;  zR @ 50: 0.0044;  zR @ 100: 0.0044;  for mode=sgcls, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0159;  zR @ 50: 0.0359;  zR @ 100: 0.0409;  for mode=sgcls, type=1 Shot Recall.
 zR @ 20: 0.0200;  zR @ 50: 0.0200;  zR @ 100: 0.0370;  for mode=sgcls, type=2 Shot Recall.
 zR @ 20: 0.0311;  zR @ 50: 0.0421;  zR @ 100: 0.0531;  for mode=sgcls, type=3 Shot Recall.
 zR @ 20: 0.0193;  zR @ 50: 0.0279;  zR @ 100: 0.0451;  for mode=sgcls, type=4 Shot Recall.
 zR @ 20: 0.0351;  zR @ 50: 0.0482;  zR @ 100: 0.0614;  for mode=sgcls, type=5 Shot Recall.
 zR @ 20: 0.0282;  zR @ 50: 0.0521;  zR @ 100: 0.0667;  for mode=sgcls, type=6 Shot Recall.
 zR @ 20: 0.0222;  zR @ 50: 0.0463;  zR @ 100: 0.0619;  for mode=sgcls, type=7 Shot Recall.
 zR @ 20: 0.0242;  zR @ 50: 0.0505;  zR @ 100: 0.0626;  for mode=sgcls, type=8 Shot Recall.
 zR @ 20: 0.0647;  zR @ 50: 0.0719;  zR @ 100: 0.0791;  for mode=sgcls, type=9 Shot Recall.
 zR @ 20: 0.0473;  zR @ 50: 0.0676;  zR @ 100: 0.0811;  for mode=sgcls, type=10 Shot Recall.
 zR @ 20: 0.0426;  zR @ 50: 0.0724;  zR @ 100: 0.1173;  for mode=sgcls, type=20 Shot Recall.
 zR @ 20: 0.0845;  zR @ 50: 0.1202;  zR @ 100: 0.1440;  for mode=sgcls, type=25 Shot Recall.
 zR @ 20: 0.0519;  zR @ 50: 0.0519;  zR @ 100: 0.0519;  for mode=sgcls, type=30 Shot Recall.
 zR @ 20: 0.0756;  zR @ 50: 0.0872;  zR @ 100: 0.0872;  for mode=sgcls, type=40 Shot Recall.
 zR @ 20: 0.1250;  zR @ 50: 0.1488;  zR @ 100: 0.1875;  for mode=sgcls, type=50 Shot Recall.
 zR @ 20: 0.1987;  zR @ 50: 0.1987;  zR @ 100: 0.1987;  for mode=sgcls, type=100 Shot Recall.
 zR @ 20: 0.6667;  zR @ 50: 0.6667;  zR @ 100: 0.6667;  for mode=sgcls, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0391;  mR @ 50: 0.0466;  mR @ 100: 0.0496;  for mode=sgcls, type=Mean Recall.
(above:0.0215) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.0101) (attached to:0.0000) (behind:0.2266) (belonging to:0.0000) (between:0.0000) (carrying:0.0132) (covered in:0.0000) (covering:0.0000) (eating:0.0000) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.3889) (holding:0.1858) (in:0.1000) (in front of:0.0266) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2485) (of:0.1699) (on:0.4377) (on back of:0.0000) (over:0.0000) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.1280) (says:0.0000) (sitting on:0.0581) (standing on:0.0000) (to:0.0000) (under:0.0740) (using:0.0000) (walking in:0.0000) (walking on:0.0000) (watching:0.0000) (wearing:0.3665) (wears:0.0000) (with:0.0271) 
SGG eval:   A @ 20: 0.3500;   A @ 50: 0.3518;   A @ 100: 0.3518;  for mode=sgcls, type=TopK Accuracy.
====================================================================================================

2023-03-05 19:31:01,811 maskrcnn_benchmark INFO: Validation Result: 0.3103
2023-03-05 19:31:01,811 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-05 19:31:01,812 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-05 19:32:19,058 maskrcnn_benchmark INFO: eta: 8:26:45  iter: 12200  loss: 1.8967 (4457.2211)  loss_rel: 0.1424 (0.1487)  loss_refine_obj: 1.6956 (1.8250)  ML Loss (cd): 0.0000 (4455.2474)  time: 0.3751 (0.6361)  data: 0.0071 (0.2521)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:33:36,448 maskrcnn_benchmark INFO: eta: 8:21:27  iter: 12400  loss: 1.8093 (4385.3597)  loss_rel: 0.1513 (0.1488)  loss_refine_obj: 1.5954 (1.8223)  ML Loss (cd): 0.0000 (4383.3886)  time: 0.3649 (0.6321)  data: 0.0068 (0.2482)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:34:53,962 maskrcnn_benchmark INFO: eta: 8:16:16  iter: 12600  loss: 1.5622 (4315.7795)  loss_rel: 0.1353 (0.1488)  loss_refine_obj: 1.4356 (1.8197)  ML Loss (cd): 0.0000 (4313.8110)  time: 0.3718 (0.6282)  data: 0.0070 (0.2443)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:36:13,034 maskrcnn_benchmark INFO: eta: 8:11:19  iter: 12800  loss: 1.6402 (4248.3742)  loss_rel: 0.1152 (0.1487)  loss_refine_obj: 1.5430 (1.8178)  ML Loss (cd): 0.0000 (4246.4077)  time: 0.3853 (0.6246)  data: 0.0070 (0.2406)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:37:31,098 maskrcnn_benchmark INFO: eta: 8:06:25  iter: 13000  loss: 1.5878 (4183.0423)  loss_rel: 0.1281 (0.1486)  loss_refine_obj: 1.4582 (1.8153)  ML Loss (cd): 0.0000 (4181.0784)  time: 0.3746 (0.6210)  data: 0.0069 (0.2370)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:38:49,054 maskrcnn_benchmark INFO: eta: 8:01:37  iter: 13200  loss: 1.8051 (4119.6904)  loss_rel: 0.1379 (0.1485)  loss_refine_obj: 1.6707 (1.8132)  ML Loss (cd): 0.0000 (4117.7287)  time: 0.3815 (0.6175)  data: 0.0068 (0.2336)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:40:06,366 maskrcnn_benchmark INFO: eta: 7:56:53  iter: 13400  loss: 1.6090 (4058.2286)  loss_rel: 0.1383 (0.1486)  loss_refine_obj: 1.5085 (1.8099)  ML Loss (cd): 0.0000 (4056.2701)  time: 0.3744 (0.6140)  data: 0.0068 (0.2302)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:41:24,951 maskrcnn_benchmark INFO: eta: 7:52:19  iter: 13600  loss: 1.6512 (3998.5745)  loss_rel: 0.1538 (0.1485)  loss_refine_obj: 1.5320 (1.8069)  ML Loss (cd): 0.0000 (3996.6190)  time: 0.3757 (0.6108)  data: 0.0067 (0.2269)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:42:43,706 maskrcnn_benchmark INFO: eta: 7:47:52  iter: 13800  loss: 1.6997 (3940.6509)  loss_rel: 0.1253 (0.1484)  loss_refine_obj: 1.5222 (1.8054)  ML Loss (cd): 0.0000 (3938.6970)  time: 0.3738 (0.6076)  data: 0.0066 (0.2237)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:44:01,738 maskrcnn_benchmark INFO: eta: 7:43:27  iter: 14000  loss: 1.9289 (3884.3810)  loss_rel: 0.1267 (0.1483)  loss_refine_obj: 1.7577 (1.8028)  ML Loss (cd): 0.0000 (3882.4299)  time: 0.3678 (0.6045)  data: 0.0066 (0.2206)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:44:01,741 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4/model_0014000.pth
2023-03-05 19:44:30,674 maskrcnn_benchmark INFO: Start validating
2023-03-05 19:44:30,727 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-05 19:49:44,239 maskrcnn_benchmark INFO: Total run time: 0:05:13.512232 (0.06270244641304017 s / img per device, on 1 devices)
2023-03-05 19:49:44,240 maskrcnn_benchmark INFO: Model inference time: 0:04:58.714537 (0.05974290733337402 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(62754, 7)
0/62754
DONE (t=0.13s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=14.44s).
Accumulating evaluation results...
DONE (t=2.79s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.359
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.364
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.358
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.275
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.318
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.379
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.311
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.460
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.462
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.338
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.415
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.471
2023-03-05 19:52:12,514 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.3641
====================================================================================================
SGG eval:   R @ 20: 0.2923;   R @ 50: 0.3129;   R @ 100: 0.3196;  for mode=sgcls, type=Recall(Main).
SGG eval: ngR @ 20: 0.3296; ngR @ 50: 0.3792; ngR @ 100: 0.4073;  for mode=sgcls, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0044;  zR @ 50: 0.0044;  zR @ 100: 0.0044;  for mode=sgcls, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0159;  zR @ 50: 0.0349;  zR @ 100: 0.0430;  for mode=sgcls, type=1 Shot Recall.
 zR @ 20: 0.0200;  zR @ 50: 0.0200;  zR @ 100: 0.0370;  for mode=sgcls, type=2 Shot Recall.
 zR @ 20: 0.0275;  zR @ 50: 0.0421;  zR @ 100: 0.0531;  for mode=sgcls, type=3 Shot Recall.
 zR @ 20: 0.0279;  zR @ 50: 0.0365;  zR @ 100: 0.0536;  for mode=sgcls, type=4 Shot Recall.
 zR @ 20: 0.0395;  zR @ 50: 0.0482;  zR @ 100: 0.0570;  for mode=sgcls, type=5 Shot Recall.
 zR @ 20: 0.0282;  zR @ 50: 0.0521;  zR @ 100: 0.0667;  for mode=sgcls, type=6 Shot Recall.
 zR @ 20: 0.0306;  zR @ 50: 0.0546;  zR @ 100: 0.0691;  for mode=sgcls, type=7 Shot Recall.
 zR @ 20: 0.0242;  zR @ 50: 0.0505;  zR @ 100: 0.0747;  for mode=sgcls, type=8 Shot Recall.
 zR @ 20: 0.0719;  zR @ 50: 0.0791;  zR @ 100: 0.0863;  for mode=sgcls, type=9 Shot Recall.
 zR @ 20: 0.0405;  zR @ 50: 0.0608;  zR @ 100: 0.0743;  for mode=sgcls, type=10 Shot Recall.
 zR @ 20: 0.0319;  zR @ 50: 0.0712;  zR @ 100: 0.1173;  for mode=sgcls, type=20 Shot Recall.
 zR @ 20: 0.0917;  zR @ 50: 0.1274;  zR @ 100: 0.1583;  for mode=sgcls, type=25 Shot Recall.
 zR @ 20: 0.0519;  zR @ 50: 0.0519;  zR @ 100: 0.0519;  for mode=sgcls, type=30 Shot Recall.
 zR @ 20: 0.0756;  zR @ 50: 0.0872;  zR @ 100: 0.0872;  for mode=sgcls, type=40 Shot Recall.
 zR @ 20: 0.1458;  zR @ 50: 0.1875;  zR @ 100: 0.2083;  for mode=sgcls, type=50 Shot Recall.
 zR @ 20: 0.1987;  zR @ 50: 0.1987;  zR @ 100: 0.1987;  for mode=sgcls, type=100 Shot Recall.
 zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgcls, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0405;  mR @ 50: 0.0475;  mR @ 100: 0.0506;  for mode=sgcls, type=Mean Recall.
(above:0.0215) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.0101) (attached to:0.0000) (behind:0.2258) (belonging to:0.0000) (between:0.0000) (carrying:0.0132) (covered in:0.0000) (covering:0.0000) (eating:0.0000) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4098) (holding:0.1897) (in:0.1026) (in front of:0.0251) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2523) (of:0.1666) (on:0.4457) (on back of:0.0000) (over:0.0000) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.1071) (says:0.0000) (sitting on:0.0555) (standing on:0.0000) (to:0.0000) (under:0.0689) (using:0.0000) (walking in:0.0000) (walking on:0.0000) (watching:0.0000) (wearing:0.4103) (wears:0.0000) (with:0.0277) 
SGG eval:   A @ 20: 0.3583;   A @ 50: 0.3602;   A @ 100: 0.3602;  for mode=sgcls, type=TopK Accuracy.
====================================================================================================

2023-03-05 19:52:12,944 maskrcnn_benchmark INFO: Validation Result: 0.3196
2023-03-05 19:53:30,530 maskrcnn_benchmark INFO: eta: 8:05:31  iter: 14200  loss: 1.7718 (3829.6962)  loss_rel: 0.1383 (0.1483)  loss_refine_obj: 1.6312 (1.8001)  ML Loss (cd): 0.0000 (3827.7478)  time: 0.3789 (0.6361)  data: 0.0070 (0.2522)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:54:47,099 maskrcnn_benchmark INFO: eta: 8:00:43  iter: 14400  loss: 1.6777 (3776.5310)  loss_rel: 0.1238 (0.1483)  loss_refine_obj: 1.5431 (1.7981)  ML Loss (cd): 0.0000 (3774.5847)  time: 0.3739 (0.6325)  data: 0.0069 (0.2488)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:56:05,047 maskrcnn_benchmark INFO: eta: 7:56:06  iter: 14600  loss: 1.6948 (3724.8777)  loss_rel: 0.1091 (0.1482)  loss_refine_obj: 1.5648 (1.7948)  ML Loss (cd): 0.0000 (3722.9347)  time: 0.4137 (0.6292)  data: 0.0072 (0.2455)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:57:23,310 maskrcnn_benchmark INFO: eta: 7:51:35  iter: 14800  loss: 1.7076 (3674.5653)  loss_rel: 0.1415 (0.1481)  loss_refine_obj: 1.5645 (1.7925)  ML Loss (cd): 0.0000 (3672.6247)  time: 0.3786 (0.6260)  data: 0.0069 (0.2422)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 19:58:41,770 maskrcnn_benchmark INFO: eta: 7:47:09  iter: 15000  loss: 1.7585 (3625.5939)  loss_rel: 0.1319 (0.1480)  loss_refine_obj: 1.6547 (1.7895)  ML Loss (cd): 0.0000 (3623.6564)  time: 0.3787 (0.6229)  data: 0.0069 (0.2391)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 20:00:00,072 maskrcnn_benchmark INFO: eta: 7:42:48  iter: 15200  loss: 1.5713 (3577.9112)  loss_rel: 0.1197 (0.1479)  loss_refine_obj: 1.4702 (1.7865)  ML Loss (cd): 0.0000 (3575.9767)  time: 0.3861 (0.6198)  data: 0.0068 (0.2361)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 20:01:18,574 maskrcnn_benchmark INFO: eta: 7:38:33  iter: 15400  loss: 1.7094 (3531.4672)  loss_rel: 0.1256 (0.1478)  loss_refine_obj: 1.5616 (1.7839)  ML Loss (cd): 0.0000 (3529.5355)  time: 0.3838 (0.6169)  data: 0.0069 (0.2331)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 20:02:35,855 maskrcnn_benchmark INFO: eta: 7:34:18  iter: 15600  loss: 1.6147 (3486.2136)  loss_rel: 0.1294 (0.1478)  loss_refine_obj: 1.4828 (1.7807)  ML Loss (cd): 0.0000 (3484.2850)  time: 0.3782 (0.6139)  data: 0.0068 (0.2302)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 20:03:53,557 maskrcnn_benchmark INFO: eta: 7:30:09  iter: 15800  loss: 1.5150 (3442.1057)  loss_rel: 0.1190 (0.1478)  loss_refine_obj: 1.3539 (1.7776)  ML Loss (cd): 0.0000 (3440.1803)  time: 0.3937 (0.6111)  data: 0.0069 (0.2274)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 20:05:11,206 maskrcnn_benchmark INFO: ---Total norm 0.00019 clip coef 26581.75000-----------------
2023-03-05 20:05:11,208 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00019, (torch.Size([1]))
2023-03-05 20:05:11,208 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00000, (torch.Size([384, 4096]))
2023-03-05 20:05:11,208 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,208 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00000, (torch.Size([384, 279]))
2023-03-05 20:05:11,208 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,208 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00000, (torch.Size([384, 51]))
2023-03-05 20:05:11,208 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,208 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00000, (torch.Size([32, 9]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00000, (torch.Size([32]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00000, (torch.Size([32]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00000, (torch.Size([128, 32]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00000, (torch.Size([128]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00000, (torch.Size([384, 384]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00000, (torch.Size([384, 768, 1, 1]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,209 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00000, (torch.Size([384, 384, 1, 1]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00000, (torch.Size([1152]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00000, (torch.Size([1152]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00000, (torch.Size([384, 384]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00000, (torch.Size([384, 384]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00000, (torch.Size([1152, 384]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00000, (torch.Size([1152]))
2023-03-05 20:05:11,210 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00000, (torch.Size([1152]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00000, (torch.Size([1, 384]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00000, (torch.Size([1]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00000, (torch.Size([1, 384]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00000, (torch.Size([1]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.00000, (torch.Size([384, 768]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00000, (torch.Size([1, 384]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00000, (torch.Size([1]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00000, (torch.Size([384, 384]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.00000, (torch.Size([384, 768]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00000, (torch.Size([384]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00000, (torch.Size([1, 384]))
2023-03-05 20:05:11,211 maskrcnn_benchmark INFO: -------------------------------
2023-03-05 20:05:11,216 maskrcnn_benchmark INFO: ---Total norm 145.06932 clip coef 0.03447-----------------
2023-03-05 20:05:11,220 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 128.12184, (torch.Size([4096, 4096]))
2023-03-05 20:05:11,220 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 62.01863, (torch.Size([4096, 12544]))
2023-03-05 20:05:11,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 27.15691, (torch.Size([3072, 5136]))
2023-03-05 20:05:11,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 6.49347, (torch.Size([151, 512]))
2023-03-05 20:05:11,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 1.65584, (torch.Size([2560, 512]))
2023-03-05 20:05:11,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.60404, (torch.Size([2048, 4808]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.44709, (torch.Size([2048, 4808]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.34354, (torch.Size([4096, 12544]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.31950, (torch.Size([51, 4096]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.28134, (torch.Size([4096]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.27781, (torch.Size([512, 1024]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.24063, (torch.Size([4096, 4096]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.21825, (torch.Size([4096, 1024]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.19804, (torch.Size([2048, 4424]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.18202, (torch.Size([2048, 4424]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.13677, (torch.Size([151]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.13347, (torch.Size([256, 1024, 3, 3]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.11925, (torch.Size([512, 1024]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.08587, (torch.Size([256, 128, 3, 3]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.05267, (torch.Size([3072]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.04342, (torch.Size([128, 2, 7, 7]))
2023-03-05 20:05:11,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.03316, (torch.Size([32, 9]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.03209, (torch.Size([2560]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.03178, (torch.Size([128, 32]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.02947, (torch.Size([512]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.02527, (torch.Size([4096]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.01862, (torch.Size([51]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.01125, (torch.Size([151, 200]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.01115, (torch.Size([22801, 51]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01021, (torch.Size([1024, 512]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.00911, (torch.Size([2048, 512]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00886, (torch.Size([512]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.00813, (torch.Size([128]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.00711, (torch.Size([2048, 512]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00645, (torch.Size([152, 200]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00583, (torch.Size([32]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00430, (torch.Size([128]))
2023-03-05 20:05:11,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00424, (torch.Size([2048, 512]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00417, (torch.Size([4096]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00406, (torch.Size([4096]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00365, (torch.Size([2048, 512]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00326, (torch.Size([256]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00280, (torch.Size([32]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00264, (torch.Size([1024]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00200, (torch.Size([128]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00156, (torch.Size([4096]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00155, (torch.Size([256]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00150, (torch.Size([256]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00149, (torch.Size([256]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00135, (torch.Size([2048]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00135, (torch.Size([2048]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00106, (torch.Size([2048]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00106, (torch.Size([2048]))
2023-03-05 20:05:11,223 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00101, (torch.Size([128]))
2023-03-05 20:05:11,224 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00049, (torch.Size([151, 200]))
2023-03-05 20:05:11,224 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00045, (torch.Size([2048]))
2023-03-05 20:05:11,224 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00045, (torch.Size([2048]))
2023-03-05 20:05:11,224 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00043, (torch.Size([2048]))
2023-03-05 20:05:11,224 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00043, (torch.Size([2048]))
2023-03-05 20:05:11,224 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-05 20:05:11,224 maskrcnn_benchmark INFO: -------------------------------
2023-03-05 20:05:11,227 maskrcnn_benchmark INFO: eta: 7:26:04  iter: 16000  loss: 1.6904 (3399.1008)  loss_rel: 0.1321 (0.1478)  loss_refine_obj: 1.4843 (1.7749)  ML Loss (cd): 0.0000 (3397.1781)  time: 0.3768 (0.6083)  data: 0.0068 (0.2246)  energy lr: 0.000025  base lr : 0.000025  max mem: 6551
2023-03-05 20:05:11,229 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sggcls_energy_bs4/model_0016000.pth
2023-03-05 20:05:40,051 maskrcnn_benchmark INFO: Start validating
2023-03-05 20:05:40,107 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-05 20:10:51,758 maskrcnn_benchmark INFO: Total run time: 0:05:11.650700 (0.062330139923095704 s / img per device, on 1 devices)
2023-03-05 20:10:51,759 maskrcnn_benchmark INFO: Model inference time: 0:04:56.655758 (0.05933115153312683 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(62754, 7)
0/62754
DONE (t=0.28s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=14.35s).
Accumulating evaluation results...
DONE (t=2.78s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.362
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.367
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.361
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.274
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.321
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.381
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.313
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.463
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.465
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.337
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.420
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.472
2023-03-05 20:13:20,185 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.3670
====================================================================================================
SGG eval:   R @ 20: 0.2924;   R @ 50: 0.3131;   R @ 100: 0.3200;  for mode=sgcls, type=Recall(Main).
SGG eval: ngR @ 20: 0.3301; ngR @ 50: 0.3799; ngR @ 100: 0.4085;  for mode=sgcls, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0044;  zR @ 50: 0.0044;  zR @ 100: 0.0044;  for mode=sgcls, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0159;  zR @ 50: 0.0370;  zR @ 100: 0.0451;  for mode=sgcls, type=1 Shot Recall.
 zR @ 20: 0.0155;  zR @ 50: 0.0155;  zR @ 100: 0.0355;  for mode=sgcls, type=2 Shot Recall.
 zR @ 20: 0.0275;  zR @ 50: 0.0421;  zR @ 100: 0.0568;  for mode=sgcls, type=3 Shot Recall.
 zR @ 20: 0.0279;  zR @ 50: 0.0408;  zR @ 100: 0.0536;  for mode=sgcls, type=4 Shot Recall.
 zR @ 20: 0.0395;  zR @ 50: 0.0482;  zR @ 100: 0.0614;  for mode=sgcls, type=5 Shot Recall.
 zR @ 20: 0.0282;  zR @ 50: 0.0521;  zR @ 100: 0.0667;  for mode=sgcls, type=6 Shot Recall.
 zR @ 20: 0.0309;  zR @ 50: 0.0549;  zR @ 100: 0.0694;  for mode=sgcls, type=7 Shot Recall.
 zR @ 20: 0.0242;  zR @ 50: 0.0444;  zR @ 100: 0.0687;  for mode=sgcls, type=8 Shot Recall.
 zR @ 20: 0.0719;  zR @ 50: 0.0791;  zR @ 100: 0.0863;  for mode=sgcls, type=9 Shot Recall.
 zR @ 20: 0.0405;  zR @ 50: 0.0676;  zR @ 100: 0.0811;  for mode=sgcls, type=10 Shot Recall.
 zR @ 20: 0.0319;  zR @ 50: 0.0700;  zR @ 100: 0.1173;  for mode=sgcls, type=20 Shot Recall.
 zR @ 20: 0.0917;  zR @ 50: 0.1274;  zR @ 100: 0.1583;  for mode=sgcls, type=25 Shot Recall.
 zR @ 20: 0.0519;  zR @ 50: 0.0519;  zR @ 100: 0.0519;  for mode=sgcls, type=30 Shot Recall.
 zR @ 20: 0.0756;  zR @ 50: 0.0872;  zR @ 100: 0.0872;  for mode=sgcls, type=40 Shot Recall.
 zR @ 20: 0.1250;  zR @ 50: 0.1667;  zR @ 100: 0.1875;  for mode=sgcls, type=50 Shot Recall.
 zR @ 20: 0.1987;  zR @ 50: 0.1987;  zR @ 100: 0.1987;  for mode=sgcls, type=100 Shot Recall.
 zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgcls, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0402;  mR @ 50: 0.0473;  mR @ 100: 0.0504;  for mode=sgcls, type=Mean Recall.
(above:0.0215) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.0101) (attached to:0.0000) (behind:0.2271) (belonging to:0.0000) (between:0.0000) (carrying:0.0132) (covered in:0.0000) (covering:0.0000) (eating:0.0000) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0074) (has:0.4088) (holding:0.1930) (in:0.0971) (in front of:0.0266) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2560) (of:0.1643) (on:0.4487) (on back of:0.0000) (over:0.0000) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.0893) (says:0.0000) (sitting on:0.0529) (standing on:0.0000) (to:0.0000) (under:0.0740) (using:0.0000) (walking in:0.0000) (walking on:0.0000) (watching:0.0000) (wearing:0.4031) (wears:0.0000) (with:0.0277) 
SGG eval:   A @ 20: 0.3581;   A @ 50: 0.3600;   A @ 100: 0.3600;  for mode=sgcls, type=TopK Accuracy.
====================================================================================================

2023-03-05 20:13:20,620 maskrcnn_benchmark INFO: Validation Result: 0.3200
2023-03-05 20:13:20,620 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-05 20:13:20,620 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-05 20:13:20,621 maskrcnn_benchmark INFO: Trigger MAX_DECAY_STEP at iteration 16000.
2023-03-05 20:13:20,733 maskrcnn_benchmark INFO: Total training time: 2:50:22.179887 (0.1704 s / it)
2023-03-05 20:14:00,091 maskrcnn_benchmark INFO: >>>>>>>>>>Testing without Sampling
2023-03-05 20:14:00,091 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_test dataset(26446 images).
2023-03-05 20:42:26,867 maskrcnn_benchmark INFO: Total run time: 0:28:26.775572 (0.06453813701825234 s / img per device, on 1 devices)
2023-03-05 20:42:26,867 maskrcnn_benchmark INFO: Model inference time: 0:26:09.378637 (0.05934276024025723 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(325563, 7)
0/325563
DONE (t=1.46s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=83.18s).
Accumulating evaluation results...
DONE (t=13.60s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.348
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.354
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.346
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.260
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.336
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.328
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.301
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.456
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.457
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.369
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.443
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.431
Num of GT boxes is not matching with num of pred boxes in SGCLS
Num of GT boxes is not matching with num of pred boxes in SGCLS
Num of GT boxes is not matching with num of pred boxes in SGCLS
2023-03-05 20:56:07,383 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.3540
====================================================================================================
SGG eval:   R @ 20: 0.2401;   R @ 50: 0.2649;   R @ 100: 0.2712;  for mode=sgcls, type=Recall(Main).
SGG eval: ngR @ 20: 0.2702; ngR @ 50: 0.3258; ngR @ 100: 0.3520;  for mode=sgcls, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0003;  zR @ 50: 0.0010;  zR @ 100: 0.0016;  for mode=sgcls, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0063;  zR @ 50: 0.0147;  zR @ 100: 0.0206;  for mode=sgcls, type=1 Shot Recall.
 zR @ 20: 0.0136;  zR @ 50: 0.0230;  zR @ 100: 0.0271;  for mode=sgcls, type=2 Shot Recall.
 zR @ 20: 0.0149;  zR @ 50: 0.0349;  zR @ 100: 0.0434;  for mode=sgcls, type=3 Shot Recall.
 zR @ 20: 0.0245;  zR @ 50: 0.0432;  zR @ 100: 0.0531;  for mode=sgcls, type=4 Shot Recall.
 zR @ 20: 0.0222;  zR @ 50: 0.0359;  zR @ 100: 0.0425;  for mode=sgcls, type=5 Shot Recall.
 zR @ 20: 0.0240;  zR @ 50: 0.0378;  zR @ 100: 0.0484;  for mode=sgcls, type=6 Shot Recall.
 zR @ 20: 0.0249;  zR @ 50: 0.0377;  zR @ 100: 0.0411;  for mode=sgcls, type=7 Shot Recall.
 zR @ 20: 0.0265;  zR @ 50: 0.0415;  zR @ 100: 0.0507;  for mode=sgcls, type=8 Shot Recall.
 zR @ 20: 0.0545;  zR @ 50: 0.0810;  zR @ 100: 0.0992;  for mode=sgcls, type=9 Shot Recall.
 zR @ 20: 0.0262;  zR @ 50: 0.0447;  zR @ 100: 0.0581;  for mode=sgcls, type=10 Shot Recall.
 zR @ 20: 0.0504;  zR @ 50: 0.0812;  zR @ 100: 0.0949;  for mode=sgcls, type=20 Shot Recall.
 zR @ 20: 0.0723;  zR @ 50: 0.0935;  zR @ 100: 0.1089;  for mode=sgcls, type=25 Shot Recall.
 zR @ 20: 0.0595;  zR @ 50: 0.0918;  zR @ 100: 0.0988;  for mode=sgcls, type=30 Shot Recall.
 zR @ 20: 0.0692;  zR @ 50: 0.0862;  zR @ 100: 0.0868;  for mode=sgcls, type=40 Shot Recall.
 zR @ 20: 0.0915;  zR @ 50: 0.1568;  zR @ 100: 0.1794;  for mode=sgcls, type=50 Shot Recall.
 zR @ 20: 0.1326;  zR @ 50: 0.1825;  zR @ 100: 0.1850;  for mode=sgcls, type=100 Shot Recall.
 zR @ 20: 0.0000;  zR @ 50: 0.0110;  zR @ 100: 0.0110;  for mode=sgcls, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0384;  mR @ 50: 0.0474;  mR @ 100: 0.0508;  for mode=sgcls, type=Mean Recall.
(above:0.0456) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.0670) (attached to:0.0000) (behind:0.2587) (belonging to:0.0000) (between:0.0000) (carrying:0.0000) (covered in:0.0000) (covering:0.0000) (eating:0.0066) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.3665) (holding:0.2166) (in:0.0984) (in front of:0.0194) (laying on:0.0000) (looking at:0.0067) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.1890) (of:0.2702) (on:0.3220) (on back of:0.0000) (over:0.0155) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.0884) (says:0.0000) (sitting on:0.0556) (standing on:0.0000) (to:0.0000) (under:0.1017) (using:0.0000) (walking in:0.0000) (walking on:0.0000) (watching:0.0017) (wearing:0.3945) (wears:0.0000) (with:0.0142) 
SGG eval:   A @ 20: 0.2759;   A @ 50: 0.2764;   A @ 100: 0.2764;  for mode=sgcls, type=TopK Accuracy.
====================================================================================================

