2023-03-14 18:07:20,805 maskrcnn_benchmark INFO: Using 1 GPUs
2023-03-14 18:07:20,805 maskrcnn_benchmark INFO: Namespace(config_file='configs/e2e_relation_X_101_32_8_FPN_1x_energy.yaml', local_rank=0, skip_test=False, opts=[], slurm_id=None, distributed=False)
2023-03-14 18:07:20,805 maskrcnn_benchmark INFO: Collecting env info (might take some time)
2023-03-14 18:07:22,323 maskrcnn_benchmark INFO: 
PyTorch version: 1.13.0+cu117
Is debug build: False
CUDA used to build PyTorch: 11.7
ROCM used to build PyTorch: N/A

OS: Fedora Linux 37 (KDE Plasma) (x86_64)
GCC version: (GCC) 12.2.1 20221121 (Red Hat 12.2.1-4)
Clang version: 15.0.7 (Fedora 15.0.7-1.fc37)
CMake version: version 3.26.0-rc5
Libc version: glibc-2.36

Python version: 3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0] (64-bit runtime)
Python platform: Linux-6.1.14-200.fc37.x86_64-x86_64-with-glibc2.36
Is CUDA available: True
CUDA runtime version: Could not collect
CUDA_MODULE_LOADING set to: LAZY
GPU models and configuration: GPU 0: NVIDIA GeForce RTX 3090 Ti
Nvidia driver version: 525.89.02
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

Versions of relevant libraries:
[pip3] numpy==1.23.5
[pip3] torch==1.13.0
[pip3] torch-scatter==2.1.0
[pip3] torchaudio==0.13.0
[pip3] torchvision==0.14.0
[conda] Could not collect
        Pillow (9.3.0)
2023-03-14 18:07:22,323 maskrcnn_benchmark INFO: Loaded configuration file configs/e2e_relation_X_101_32_8_FPN_1x_energy.yaml
2023-03-14 18:07:22,324 maskrcnn_benchmark INFO: 
INPUT:
  MIN_SIZE_TRAIN: (600,)
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MAX_SIZE_TEST: 1000
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/FAIR/20171220/X-101-32x8d"
  PRETRAINED_DETECTOR_CKPT: "/users/students/r0879687/amager/vg/pretrained-detector/pretrained_faster_rcnn/model_final.pth"
  BACKBONE:
    CONV_BODY: "R-101-FPN" # VGG-16
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    STRIDE_IN_1X1: False
    NUM_GROUPS: 32
    WIDTH_PER_GROUP: 8
  BASE_ONLY: False           # When training energy model set this to false.
  RELATION_ON: True
  ATTRIBUTE_ON: False
  FLIP_AUG: False            # if there is any left-right relation, FLIP AUG should be false
  RPN:
    USE_FPN: True
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.23232838, 0.63365731, 1.28478321, 3.15089189)   # from neural-motifs
    PRE_NMS_TOP_N_TRAIN: 6000
    PRE_NMS_TOP_N_TEST: 6000
    POST_NMS_TOP_N_TRAIN: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_PER_BATCH: False
    RPN_MID_CHANNEL: 256
  ROI_HEADS:
    USE_FPN: True
    POSITIVE_FRACTION: 0.5
    BG_IOU_THRESHOLD: 0.3
    BATCH_SIZE_PER_IMAGE: 256
    DETECTIONS_PER_IMG: 50
    NMS_FILTER_DUPLICATES: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
    NUM_CLASSES: 151                # 151 for VG, 1201 for GQA
    MLP_HEAD_DIM: 4096
  ROI_ATTRIBUTE_HEAD:
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
    USE_BINARY_LOSS: True           # choose binary, because cross_entropy loss deteriorate the box head, even with 0.1 weight
    POS_WEIGHT: 50.0
    ATTRIBUTE_LOSS_WEIGHT: 1.0
    NUM_ATTRIBUTES: 201             # 201 for VG, 501 for GQA
    MAX_ATTRIBUTES: 10             
    ATTRIBUTE_BGFG_SAMPLE: True    
    ATTRIBUTE_BGFG_RATIO: 3        
  ROI_RELATION_HEAD:
    USE_GT_BOX: False
    USE_GT_OBJECT_LABEL: False
    REQUIRE_BOX_OVERLAP: False              # for sgdet, during training, only train pairs with overlap
    ADD_GTBOX_TO_PROPOSAL_IN_TRAIN: True    # for sgdet only, in case some gt boxes are missing
    NUM_CLASSES: 51                 # 51 for VG, 201 for GQA (not contain "to the left of" & "to the right of")
    BATCH_SIZE_PER_IMAGE: 128      # sample as much as possible
    POSITIVE_FRACTION: 0.25
    CONTEXT_POOLING_DIM: 4096
    CONTEXT_HIDDEN_DIM: 512         #1024 for VCTree
    POOLING_ALL_LEVELS: True
    LABEL_SMOOTHING_LOSS: False
    FEATURE_EXTRACTOR: "RelationFeatureExtractor"
    #################### Select Relationship Model ####################
    PREDICTOR: "MotifPredictor"
    #PREDICTOR: "VCTreePredictor"
    #PREDICTOR: "TransformerPredictor"
    #PREDICTOR: "CausalAnalysisPredictor"
    ################# Parameters for Motif Predictor ##################
    CONTEXT_OBJ_LAYER: 1
    CONTEXT_REL_LAYER: 1
    ############# Parameters for Causal Unbias Predictor ##############
    ### Implementation for paper "Unbiased Scene Graph Generation from Biased Training"
    CAUSAL:
      EFFECT_TYPE: 'none'             # candicates: 'TDE', 'NIE', 'TE', 'none'
      FUSION_TYPE: 'sum'              # candicates: 'sum', 'gate'         
      SEPARATE_SPATIAL: False         # separate spatial in union feature
      CONTEXT_LAYER: "motifs"         # candicates: motifs, vctree, vtranse
      SPATIAL_FOR_VISION: True
      EFFECT_ANALYSIS: True
    ############### Parameters for Transformer Predictor ##############
    TRANSFORMER:
      DROPOUT_RATE: 0.1
      OBJ_LAYER: 4
      REL_LAYER: 2
      NUM_HEAD: 8
      KEY_DIM: 64
      VAL_DIM: 64
      INNER_DIM: 2048
    ############### Parameters for Energy Model ##############
    EBM:
      OBJ_EMBED_DIM: 512
      REL_EMBED_DIM: 512
      OBJ_LABEL_EMBED_DIM: 512
      REL_LABEL_EMBED_DIM: 512
      POOLING_DIM: 512
DATASETS:
  TRAIN: ("VG_stanford_filtered_with_attribute_train",)
  VAL: ("VG_stanford_filtered_with_attribute_val",)
  TEST: ("VG_stanford_filtered_with_attribute_test",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
SAMPLER:
  NAME: 'SGLD'
  LR: 0.25                  # For 4GPU -> 1,  1gpu -> 0.25  default:0.1
  VAR: 0.001
  ITERS: 1
  GRAD_CLIP: 0.01

SOLVER:
  PRE_VAL: False
  IMS_PER_BATCH: 4
  BIAS_LR_FACTOR: 1
  BASE_LR: 0.00025          # 0.001/4 = 0.00025 For energy learning
  WARMUP_FACTOR: 0.1
  WEIGHT_DECAY: 0.0001
  MOMENTUM: 0.9
  GRAD_NORM_CLIP: 5.0
  STEPS: (40000, 54000)
  MAX_ITER: 80000
  VAL_PERIOD: 2000
  CHECKPOINT_PERIOD: 2000
  PRINT_GRAD_FREQ: 2000
  SCHEDULE:
    # the following paramters are only used for WarmupReduceLROnPlateau
    TYPE: "WarmupReduceLROnPlateau"    # WarmupMultiStepLR, WarmupReduceLROnPlateau
    #TYPE: "WarmupMultiStepLR"
    PATIENCE: 2
    THRESHOLD: 0.001
    COOLDOWN: 0
    FACTOR: 0.05   #0.1
    MAX_DECAY_STEP: 3

#OUTPUT_DIR: '/users/students/r0879687/amager/vg/output/relation_baseline_predcls_energy_bs4'
#OUTPUT_DIR: '/users/students/r0879687/amager/vg/output/relation_baseline_sgcls_energy_bs4'
OUTPUT_DIR: '/users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44'

TEST:
  IMS_PER_BATCH: 1
  DETECTIONS_PER_IMG: 50
  ALLOW_LOAD_FROM_CACHE: False
  RELATION:
    SYNC_GATHER: True      # turn on will slow down the evaluation to solve the sgdet test out of memory problem
    REQUIRE_OVERLAP: False
    LATER_NMS_PREDICTION_THRES: 0.5

  # Equival schedules with...
  # 1 GPU:
  #   BASE_LR: 0.0025
  #   MAX_ITER: 60000
  #   STEPS: [0, 30000, 40000]
  # 2 GPUs:
  #   BASE_LR: 0.005
  #   MAX_ITER: 30000
  #   STEPS: [0, 15000, 20000]
  # 4 GPUs:
  #   BASE_LR: 0.01
  #   MAX_ITER: 15000
  #   STEPS: [0, 7500, 10000]
  # 8 GPUs:
  #   BASE_LR: 0.02
  #   MAX_ITER: 7500
  #   STEPS: [0, 3750, 5000]

2023-03-14 18:07:22,325 maskrcnn_benchmark INFO: Running with config:
AMP_VERBOSE: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  NUM_WORKERS: 4
  SIZE_DIVISIBILITY: 32
DATASETS:
  NUM_OBJ_CLASSES: 151
  NUM_REL_CLASSES: 51
  TEST: ('VG_stanford_filtered_with_attribute_test',)
  TRAIN: ('VG_stanford_filtered_with_attribute_train',)
  VAL: ('VG_stanford_filtered_with_attribute_val',)
DTYPE: float32
ENERGY_MODEL:
  DATA_NOISE_VAR: 0.0001
  L2COEFF: 1
  LOSS: ContrastiveDivergence
  META_ARCHITECTURE: GraphEnergyModel
  TEMP: 1
  TRAINIG_MODE: joint
GLOVE_DIR: /users/students/r0879687/amager/vg/glove
INPUT:
  BRIGHTNESS: 0.0
  CONTRAST: 0.0
  FLIP_PROB_TRAIN: 0.5
  HUE: 0.0
  MAX_SIZE_TEST: 1000
  MAX_SIZE_TRAIN: 1000
  MIN_SIZE_TEST: 600
  MIN_SIZE_TRAIN: (600,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  SATURATION: 0.0
  TO_BGR255: True
  VERTICAL_FLIP_PROB_TRAIN: 0.0
MODEL:
  ATTRIBUTE_ON: False
  BACKBONE:
    CONV_BODY: R-101-FPN
    FREEZE_CONV_BODY_AT: 2
  BASE_ONLY: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  DEV_RUN: False
  FBNET:
    ARCH: default
    ARCH_DEF: 
    BN_TYPE: bn
    DET_HEAD_BLOCKS: []
    DET_HEAD_LAST_SCALE: 1.0
    DET_HEAD_STRIDE: 0
    DW_CONV_SKIP_BN: True
    DW_CONV_SKIP_RELU: True
    KPTS_HEAD_BLOCKS: []
    KPTS_HEAD_LAST_SCALE: 0.0
    KPTS_HEAD_STRIDE: 0
    MASK_HEAD_BLOCKS: []
    MASK_HEAD_LAST_SCALE: 0.0
    MASK_HEAD_STRIDE: 0
    RPN_BN_TYPE: 
    RPN_HEAD_BLOCKS: 0
    SCALE_FACTOR: 1.0
    WIDTH_DIVISOR: 1
  FLIP_AUG: False
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PRETRAINED_DETECTOR_CKPT: /users/students/r0879687/amager/vg/pretrained-detector/pretrained_faster_rcnn/model_final.pth
  RELATION_ON: True
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256
    DEFORMABLE_GROUPS: 1
    NUM_GROUPS: 32
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STAGE_WITH_DCN: (False, False, False, False)
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 8
    WITH_MODULATED_DCN: False
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_ATTRIBUTE_HEAD:
    ATTRIBUTE_BGFG_RATIO: 3
    ATTRIBUTE_BGFG_SAMPLE: True
    ATTRIBUTE_LOSS_WEIGHT: 1.0
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MAX_ATTRIBUTES: 10
    NUM_ATTRIBUTES: 201
    POS_WEIGHT: 50.0
    PREDICTOR: FPNPredictor
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_BINARY_LOSS: True
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 4096
    NUM_CLASSES: 151
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.3
    DETECTIONS_PER_IMG: 50
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.3
    NMS_FILTER_DUPLICATES: True
    POSITIVE_FRACTION: 0.5
    POST_NMS_PER_CLS_TOPN: 300
    SCORE_THRESH: 0.01
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: False
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: ResNet50Conv5ROIFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
    USE_GN: False
  ROI_RELATION_HEAD:
    ADD_GTBOX_TO_PROPOSAL_IN_TRAIN: True
    BATCH_SIZE_PER_IMAGE: 128
    CAUSAL:
      CONTEXT_LAYER: motifs
      EFFECT_ANALYSIS: True
      EFFECT_TYPE: none
      FUSION_TYPE: sum
      SEPARATE_SPATIAL: False
      SPATIAL_FOR_VISION: True
    CONTEXT_DROPOUT_RATE: 0.2
    CONTEXT_HIDDEN_DIM: 512
    CONTEXT_OBJ_LAYER: 1
    CONTEXT_POOLING_DIM: 4096
    CONTEXT_REL_LAYER: 1
    EBM:
      OBJ_EMBED_DIM: 512
      OBJ_LABEL_EMBED_DIM: 512
      POOLING_DIM: 512
      REL_EMBED_DIM: 512
      REL_LABEL_EMBED_DIM: 512
    EMBED_DIM: 200
    FEATURE_EXTRACTOR: RelationFeatureExtractor
    LABEL_SMOOTHING_LOSS: False
    NUM_CLASSES: 51
    NUM_SAMPLE_PER_GT_REL: 4
    POOLING_ALL_LEVELS: True
    POSITIVE_FRACTION: 0.25
    PREDICTOR: MotifPredictor
    PREDICT_USE_BIAS: True
    PREDICT_USE_VISION: True
    REL_PROP: [0.01858, 0.00057, 0.00051, 0.00109, 0.0015, 0.00489, 0.00432, 0.02913, 0.00245, 0.00121, 0.00404, 0.0011, 0.00132, 0.00172, 5e-05, 0.00242, 0.0005, 0.00048, 0.00208, 0.15608, 0.0265, 0.06091, 0.009, 0.00183, 0.00225, 0.0009, 0.00028, 0.00077, 0.04844, 0.08645, 0.31621, 0.00088, 0.00301, 0.00042, 0.00186, 0.001, 0.00027, 0.01012, 0.0001, 0.01286, 0.00647, 0.00084, 0.01077, 0.00132, 0.00069, 0.00376, 0.00214, 0.11424, 0.01205, 0.02958]
    REQUIRE_BOX_OVERLAP: False
    TRANSFORMER:
      DROPOUT_RATE: 0.1
      INNER_DIM: 2048
      KEY_DIM: 64
      NUM_HEAD: 8
      OBJ_LAYER: 4
      REL_LAYER: 2
      VAL_DIM: 64
    USE_GT_BOX: False
    USE_GT_OBJECT_LABEL: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.23232838, 0.63365731, 1.28478321, 3.15089189)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_PER_BATCH: False
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 1000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 1000
    PRE_NMS_TOP_N_TEST: 6000
    PRE_NMS_TOP_N_TRAIN: 6000
    RPN_HEAD: SingleConvRPNHead
    RPN_MID_CHANNEL: 256
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  VGG:
    VGG16_OUT_CHANNELS: 512
  WEIGHT: catalog://ImageNetPretrained/FAIR/20171220/X-101-32x8d
OUTPUT_DIR: /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44
PATHS_CATALOG: /users/students/r0879687/Documents/Master_thesis/ebm/energy-based-scene-graph/maskrcnn_benchmark/config/paths_catalog.py
PATHS_DATA: /users/students/r0879687/amager/vg/VG_100K
SAMPLER:
  GRAD_CLIP: 0.01
  ITERS: 1
  LR: 0.25
  NAME: SGLD
  VAR: 0.001
SOLVER:
  BASE_LR: 0.00025
  BIAS_LR_FACTOR: 1
  CHECKPOINT_PERIOD: 2000
  CLIP_NORM: 5.0
  GAMMA: 0.1
  GRAD_NORM_CLIP: 5.0
  IMS_PER_BATCH: 4
  MAX_ITER: 80000
  MOMENTUM: 0.9
  PRE_VAL: False
  PRINT_GRAD_FREQ: 2000
  SCHEDULE:
    COOLDOWN: 0
    FACTOR: 0.05
    MAX_DECAY_STEP: 3
    PATIENCE: 2
    THRESHOLD: 0.001
    TYPE: WarmupReduceLROnPlateau
  STEPS: (40000, 54000)
  TO_VAL: True
  UPDATE_SCHEDULE_DURING_LOAD: False
  VAL_PERIOD: 2000
  WARMUP_FACTOR: 0.1
  WARMUP_ITERS: 500
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0
TEST:
  ALLOW_LOAD_FROM_CACHE: False
  BBOX_AUG:
    ENABLED: False
    H_FLIP: False
    MAX_SIZE: 4000
    SCALES: ()
    SCALE_H_FLIP: False
  DETECTIONS_PER_IMG: 50
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 1
  RELATION:
    IOU_THRESHOLD: 0.5
    LATER_NMS_PREDICTION_THRES: 0.5
    MULTIPLE_PREDS: False
    REQUIRE_OVERLAP: False
    SYNC_GATHER: True
  SAVE_PROPOSALS: False
WANDB:
  MUTE: False
2023-03-14 18:07:22,325 maskrcnn_benchmark INFO: Saving config into: /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/config.yml
2023-03-14 18:07:22,402 maskrcnn_benchmark INFO: #################### prepare training ####################
2023-03-14 18:07:22,404 maskrcnn_benchmark.modeling.detector.generalized_rcnn INFO: #################### Building Backbone ####################
2023-03-14 18:07:23,362 maskrcnn_benchmark.modeling.detector.generalized_rcnn INFO: #################### Building RPN ####################
2023-03-14 18:07:23,369 maskrcnn_benchmark.modeling.detector.generalized_rcnn INFO: #################### Building ROI Heads ####################
2023-03-14 18:07:25,355 maskrcnn_benchmark.data.build INFO: ----------------------------------------------------------------------------------------------------
2023-03-14 18:07:25,356 maskrcnn_benchmark.data.build INFO: get dataset statistics...
2023-03-14 18:07:25,368 maskrcnn_benchmark.data.build INFO: Loading data statistics from: /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/VG_stanford_filtered_with_attribute_train_statistics.cache
2023-03-14 18:07:25,368 maskrcnn_benchmark.data.build INFO: ----------------------------------------------------------------------------------------------------
loading word vectors from /users/students/r0879687/amager/vg/glove/glove.6B.200d.pt
__background__ -> __background__ 
fail on __background__
loading word vectors from /users/students/r0879687/amager/vg/glove/glove.6B.200d.pt
__background__ -> __background__ 
fail on __background__
2023-03-14 18:08:21,280 maskrcnn_benchmark INFO: #################### end base model construction ####################
2023-03-14 18:08:21,343 maskrcnn_benchmark INFO: #################### End energy Model Constructin ####################
2023-03-14 18:08:38,554 maskrcnn_benchmark INFO: #################### end optimizer and scheduler ####################
2023-03-14 18:08:39,326 maskrcnn_benchmark INFO: #################### end distributed ####################
2023-03-14 18:08:39,338 maskrcnn_benchmark.utils.checkpoint INFO: Loading checkpoint from /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0022000.pth
2023-03-14 18:08:53,797 maskrcnn_benchmark.utils.checkpoint INFO: Loading energy_optimizer from /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0022000.pth
2023-03-14 18:08:53,808 maskrcnn_benchmark INFO: #################### end load checkpointer ####################
2023-03-14 18:08:53,808 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
2023-03-14 18:10:14,075 maskrcnn_benchmark.utils.miscellaneous INFO: Saving labels mapping into /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/labels.json
2023-03-14 18:10:45,986 maskrcnn_benchmark INFO: #################### end dataloader ####################
2023-03-14 18:10:45,987 maskrcnn_benchmark INFO: Start training
2023-03-14 18:11:13,397 maskrcnn_benchmark INFO: ---Total norm 0.03251 clip coef 153.78040-----------------
2023-03-14 18:11:13,401 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.01558, (torch.Size([512, 1024]))
2023-03-14 18:11:13,401 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.01507, (torch.Size([512, 1024]))
2023-03-14 18:11:13,401 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.01260, (torch.Size([1]))
2023-03-14 18:11:13,401 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.01053, (torch.Size([1, 512]))
2023-03-14 18:11:13,401 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00736, (torch.Size([512, 279]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00703, (torch.Size([1536, 512]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00662, (torch.Size([1536]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00643, (torch.Size([1, 512]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00614, (torch.Size([1]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00464, (torch.Size([512]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00450, (torch.Size([512, 4096]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00334, (torch.Size([1536]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00244, (torch.Size([1536, 512]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00190, (torch.Size([512]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00174, (torch.Size([1536, 512]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00169, (torch.Size([512]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00157, (torch.Size([128, 32]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00147, (torch.Size([512, 512]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00136, (torch.Size([512, 1024, 1, 1]))
2023-03-14 18:11:13,402 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00134, (torch.Size([1, 512]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00131, (torch.Size([512]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00130, (torch.Size([512]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00126, (torch.Size([512]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00122, (torch.Size([1536, 512]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00121, (torch.Size([1536, 512]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00102, (torch.Size([512, 512, 1, 1]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00097, (torch.Size([512, 512]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00086, (torch.Size([512, 512]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00084, (torch.Size([32, 9]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00079, (torch.Size([512]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00076, (torch.Size([512, 51]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00059, (torch.Size([512, 512]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00053, (torch.Size([1]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00050, (torch.Size([1]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00049, (torch.Size([512]))
2023-03-14 18:11:13,403 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00048, (torch.Size([512]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00037, (torch.Size([512]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00035, (torch.Size([1, 512]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00035, (torch.Size([1536]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00033, (torch.Size([512]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00029, (torch.Size([128]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00023, (torch.Size([512, 512]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00018, (torch.Size([1536]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00018, (torch.Size([1536, 512]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00017, (torch.Size([32]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00015, (torch.Size([512]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00013, (torch.Size([32]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00011, (torch.Size([512, 512]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00009, (torch.Size([512, 512]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00007, (torch.Size([512]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00006, (torch.Size([512]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-14 18:11:13,404 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 18:11:13,407 maskrcnn_benchmark INFO: ---Total norm 4.05175 clip coef 1.23403-----------------
2023-03-14 18:11:13,411 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.24842, (torch.Size([4096, 12544]))
2023-03-14 18:11:13,411 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 1.92536, (torch.Size([4096, 4096]))
2023-03-14 18:11:13,411 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.51818, (torch.Size([3072, 5136]))
2023-03-14 18:11:13,411 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.25691, (torch.Size([151, 512]))
2023-03-14 18:11:13,411 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 1.19861, (torch.Size([4096, 12544]))
2023-03-14 18:11:13,411 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.81629, (torch.Size([51, 4096]))
2023-03-14 18:11:13,411 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.79970, (torch.Size([4096, 4096]))
2023-03-14 18:11:13,411 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.49652, (torch.Size([512, 1024]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.49205, (torch.Size([4096, 1024]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.41441, (torch.Size([256, 1024, 3, 3]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.34759, (torch.Size([2048, 4808]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.34194, (torch.Size([2048, 4808]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.26585, (torch.Size([256, 128, 3, 3]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.15796, (torch.Size([2560, 512]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.11512, (torch.Size([128, 2, 7, 7]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.06386, (torch.Size([512, 1024]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.05539, (torch.Size([512]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.05016, (torch.Size([2048, 4424]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.04855, (torch.Size([2048, 4424]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.03570, (torch.Size([151]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.03521, (torch.Size([2048, 512]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.03387, (torch.Size([2048, 512]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.02689, (torch.Size([22801, 51]))
2023-03-14 18:11:13,412 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.02520, (torch.Size([51]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.02297, (torch.Size([3072]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.02173, (torch.Size([32, 9]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.02153, (torch.Size([1024, 512]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01711, (torch.Size([128]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.01588, (torch.Size([128, 32]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.01570, (torch.Size([4096]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01062, (torch.Size([4096]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.01020, (torch.Size([4096]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00933, (torch.Size([4096]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00682, (torch.Size([151, 200]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00652, (torch.Size([512]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00639, (torch.Size([2048]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00639, (torch.Size([2048]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00611, (torch.Size([2048]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00611, (torch.Size([2048]))
2023-03-14 18:11:13,413 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00593, (torch.Size([1024]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00582, (torch.Size([2048, 512]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00560, (torch.Size([2048, 512]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00553, (torch.Size([256]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00550, (torch.Size([128]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00532, (torch.Size([2560]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00469, (torch.Size([256]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00418, (torch.Size([4096]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00334, (torch.Size([256]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00321, (torch.Size([256]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00310, (torch.Size([152, 200]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00262, (torch.Size([151, 200]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00204, (torch.Size([32]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00197, (torch.Size([128]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00192, (torch.Size([128]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00155, (torch.Size([32]))
2023-03-14 18:11:13,414 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00097, (torch.Size([2048]))
2023-03-14 18:11:13,415 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00097, (torch.Size([2048]))
2023-03-14 18:11:13,415 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00093, (torch.Size([2048]))
2023-03-14 18:11:13,415 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00093, (torch.Size([2048]))
2023-03-14 18:11:13,415 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-14 18:11:13,415 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 18:13:45,044 maskrcnn_benchmark INFO: eta: 14:22:27  iter: 22200  loss: 0.6441 (0.6497)  loss_rel: 0.1971 (0.1865)  loss_refine_obj: 0.5819 (0.5881)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7607 (0.8953)  data: 0.0069 (0.0111)  energy lr: 0.001000  base lr : 0.001000  max mem: 8908
2023-03-14 18:16:18,479 maskrcnn_benchmark INFO: eta: 13:17:58  iter: 22400  loss: 0.6297 (0.6400)  loss_rel: 0.1544 (0.1824)  loss_refine_obj: 0.5460 (0.5825)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7671 (0.8312)  data: 0.0067 (0.0090)  energy lr: 0.001000  base lr : 0.001000  max mem: 8948
2023-03-14 18:18:52,025 maskrcnn_benchmark INFO: eta: 12:54:57  iter: 22600  loss: 0.6534 (0.6399)  loss_rel: 0.2192 (0.1861)  loss_refine_obj: 0.5530 (0.5788)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7642 (0.8101)  data: 0.0067 (0.0083)  energy lr: 0.001000  base lr : 0.001000  max mem: 8948
2023-03-14 18:21:24,997 maskrcnn_benchmark INFO: eta: 12:41:29  iter: 22800  loss: 0.5959 (0.6386)  loss_rel: 0.1611 (0.1871)  loss_refine_obj: 0.5759 (0.5765)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7613 (0.7988)  data: 0.0069 (0.0079)  energy lr: 0.001000  base lr : 0.001000  max mem: 8948
2023-03-14 18:23:58,175 maskrcnn_benchmark INFO: eta: 12:32:34  iter: 23000  loss: 0.6002 (0.6366)  loss_rel: 0.1704 (0.1874)  loss_refine_obj: 0.5682 (0.5741)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7664 (0.7922)  data: 0.0062 (0.0076)  energy lr: 0.001000  base lr : 0.001000  max mem: 9111
2023-03-14 18:26:31,360 maskrcnn_benchmark INFO: eta: 12:25:47  iter: 23200  loss: 0.5957 (0.6369)  loss_rel: 0.1521 (0.1875)  loss_refine_obj: 0.5652 (0.5743)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7693 (0.7878)  data: 0.0066 (0.0075)  energy lr: 0.001000  base lr : 0.001000  max mem: 9111
2023-03-14 18:29:04,672 maskrcnn_benchmark INFO: eta: 12:20:18  iter: 23400  loss: 0.6133 (0.6354)  loss_rel: 0.1905 (0.1882)  loss_refine_obj: 0.5938 (0.5721)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7652 (0.7848)  data: 0.0068 (0.0074)  energy lr: 0.001000  base lr : 0.001000  max mem: 9111
2023-03-14 18:31:38,002 maskrcnn_benchmark INFO: eta: 12:15:33  iter: 23600  loss: 0.6818 (0.6364)  loss_rel: 0.1366 (0.1891)  loss_refine_obj: 0.6170 (0.5723)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7635 (0.7825)  data: 0.0068 (0.0073)  energy lr: 0.001000  base lr : 0.001000  max mem: 9111
2023-03-14 18:34:11,760 maskrcnn_benchmark INFO: eta: 12:11:31  iter: 23800  loss: 0.5607 (0.6374)  loss_rel: 0.1447 (0.1888)  loss_refine_obj: 0.5460 (0.5735)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7623 (0.7810)  data: 0.0064 (0.0072)  energy lr: 0.001000  base lr : 0.001000  max mem: 9111
2023-03-14 18:36:45,479 maskrcnn_benchmark INFO: ---Total norm 0.07557 clip coef 66.16579-----------------
2023-03-14 18:36:45,484 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.03580, (torch.Size([512, 1024]))
2023-03-14 18:36:45,484 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.03518, (torch.Size([512, 1024]))
2023-03-14 18:36:45,484 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.02880, (torch.Size([1, 512]))
2023-03-14 18:36:45,484 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.02549, (torch.Size([1]))
2023-03-14 18:36:45,484 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.01773, (torch.Size([1]))
2023-03-14 18:36:45,484 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.01644, (torch.Size([1536]))
2023-03-14 18:36:45,484 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.01563, (torch.Size([1, 512]))
2023-03-14 18:36:45,484 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.01379, (torch.Size([512, 279]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.01349, (torch.Size([1536, 512]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00901, (torch.Size([512]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00891, (torch.Size([1536, 512]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00827, (torch.Size([1536]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00824, (torch.Size([1536, 512]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00594, (torch.Size([512, 4096]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00476, (torch.Size([1536, 512]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00455, (torch.Size([512, 512]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00381, (torch.Size([512, 512]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00372, (torch.Size([512]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00362, (torch.Size([512, 51]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00352, (torch.Size([512]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00336, (torch.Size([512]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00327, (torch.Size([512]))
2023-03-14 18:36:45,485 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00293, (torch.Size([512, 1024, 1, 1]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00289, (torch.Size([512]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00276, (torch.Size([512]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00275, (torch.Size([512, 512, 1, 1]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00260, (torch.Size([512, 512]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00199, (torch.Size([512]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00161, (torch.Size([1536, 512]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00156, (torch.Size([1, 512]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00151, (torch.Size([128, 32]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00141, (torch.Size([512, 512]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00115, (torch.Size([512]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00106, (torch.Size([512]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00103, (torch.Size([32, 9]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00099, (torch.Size([512]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00089, (torch.Size([1536]))
2023-03-14 18:36:45,486 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00074, (torch.Size([1]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00057, (torch.Size([512, 512]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00055, (torch.Size([128]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00045, (torch.Size([1536]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00041, (torch.Size([1536, 512]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00033, (torch.Size([512]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00031, (torch.Size([32]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00017, (torch.Size([512, 512]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00016, (torch.Size([512]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00013, (torch.Size([512]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00013, (torch.Size([32]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00010, (torch.Size([512, 512]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00005, (torch.Size([1, 512]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00000, (torch.Size([1]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-14 18:36:45,487 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 18:36:45,490 maskrcnn_benchmark INFO: ---Total norm 3.67125 clip coef 1.36193-----------------
2023-03-14 18:36:45,494 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.16359, (torch.Size([4096, 12544]))
2023-03-14 18:36:45,494 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 1.76509, (torch.Size([4096, 4096]))
2023-03-14 18:36:45,494 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.47185, (torch.Size([3072, 5136]))
2023-03-14 18:36:45,494 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.31418, (torch.Size([151, 512]))
2023-03-14 18:36:45,494 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.77957, (torch.Size([4096, 12544]))
2023-03-14 18:36:45,494 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.59839, (torch.Size([51, 4096]))
2023-03-14 18:36:45,494 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.48983, (torch.Size([4096, 4096]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.41696, (torch.Size([512, 1024]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.34681, (torch.Size([4096, 1024]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.27385, (torch.Size([256, 1024, 3, 3]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.24950, (torch.Size([2048, 4808]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.24687, (torch.Size([2048, 4808]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.19972, (torch.Size([256, 128, 3, 3]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.16113, (torch.Size([2560, 512]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.07766, (torch.Size([128, 2, 7, 7]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.06160, (torch.Size([512]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.05815, (torch.Size([512, 1024]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.04580, (torch.Size([151]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.04326, (torch.Size([2048, 4424]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.04182, (torch.Size([2048, 4424]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.03004, (torch.Size([51]))
2023-03-14 18:36:45,495 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.02762, (torch.Size([2048, 512]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.02610, (torch.Size([3072]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.02608, (torch.Size([2048, 512]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.02097, (torch.Size([22801, 51]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.01706, (torch.Size([4096]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01621, (torch.Size([1024, 512]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01418, (torch.Size([32, 9]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.01212, (torch.Size([128, 32]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01114, (torch.Size([128]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01077, (torch.Size([4096]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00936, (torch.Size([4096]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00712, (torch.Size([4096]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00677, (torch.Size([512]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00619, (torch.Size([2560]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00606, (torch.Size([1024]))
2023-03-14 18:36:45,496 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00598, (torch.Size([151, 200]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00580, (torch.Size([2048]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00580, (torch.Size([2048]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00566, (torch.Size([2048]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00566, (torch.Size([2048]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00522, (torch.Size([2048, 512]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00504, (torch.Size([2048, 512]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00491, (torch.Size([256]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00436, (torch.Size([128]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00392, (torch.Size([152, 200]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00303, (torch.Size([256]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00296, (torch.Size([4096]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00254, (torch.Size([256]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00247, (torch.Size([256]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00234, (torch.Size([128]))
2023-03-14 18:36:45,497 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00187, (torch.Size([151, 200]))
2023-03-14 18:36:45,498 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00159, (torch.Size([32]))
2023-03-14 18:36:45,498 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00145, (torch.Size([128]))
2023-03-14 18:36:45,498 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00137, (torch.Size([32]))
2023-03-14 18:36:45,498 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00095, (torch.Size([2048]))
2023-03-14 18:36:45,498 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00095, (torch.Size([2048]))
2023-03-14 18:36:45,498 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00092, (torch.Size([2048]))
2023-03-14 18:36:45,498 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00092, (torch.Size([2048]))
2023-03-14 18:36:45,498 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-14 18:36:45,498 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 18:36:45,501 maskrcnn_benchmark INFO: eta: 12:07:46  iter: 24000  loss: 0.6576 (0.6387)  loss_rel: 0.1636 (0.1891)  loss_refine_obj: 0.6187 (0.5745)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7755 (0.7798)  data: 0.0069 (0.0072)  energy lr: 0.001000  base lr : 0.001000  max mem: 9111
2023-03-14 18:36:45,504 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0024000.pth
2023-03-14 18:37:23,749 maskrcnn_benchmark INFO: Start validating
2023-03-14 18:37:23,802 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-14 18:51:31,487 maskrcnn_benchmark INFO: Total run time: 0:14:07.684233 (0.16953684659004212 s / img per device, on 1 devices)
2023-03-14 18:51:31,487 maskrcnn_benchmark INFO: Model inference time: 0:13:12.127135 (0.1584254270553589 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.25s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=24.46s).
Accumulating evaluation results...
DONE (t=5.43s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.149
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.285
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.139
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.063
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.111
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.188
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.221
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.320
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.163
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.270
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.355
2023-03-14 18:55:25,543 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2855
====================================================================================================
SGG eval:   R @ 20: 0.2436;   R @ 50: 0.3053;   R @ 100: 0.3404;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2539; ngR @ 50: 0.3339; ngR @ 100: 0.3904;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0042;  zR @ 50: 0.0116;  zR @ 100: 0.0243;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0135;  zR @ 50: 0.0165;  zR @ 100: 0.0315;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0147;  zR @ 50: 0.0311;  zR @ 100: 0.0495;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0236;  zR @ 100: 0.0322;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0234;  zR @ 50: 0.0563;  zR @ 100: 0.0760;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0410;  zR @ 50: 0.0829;  zR @ 100: 0.1068;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0306;  zR @ 50: 0.0361;  zR @ 100: 0.0863;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0182;  zR @ 50: 0.0495;  zR @ 100: 0.0631;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0504;  zR @ 50: 0.1043;  zR @ 100: 0.1201;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0203;  zR @ 50: 0.0486;  zR @ 100: 0.0554;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0319;  zR @ 50: 0.0517;  zR @ 100: 0.0582;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0488;  zR @ 50: 0.0869;  zR @ 100: 0.1083;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0260;  zR @ 100: 0.0260;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.1827;  zR @ 50: 0.2816;  zR @ 100: 0.3339;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.0625;  zR @ 50: 0.1577;  zR @ 100: 0.2202;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.1859;  zR @ 100: 0.2436;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.3333;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0533;  mR @ 50: 0.0702;  mR @ 100: 0.0806;  for mode=sgdet, type=Mean Recall.
(above:0.0272) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.1902) (attached to:0.0000) (behind:0.1659) (belonging to:0.0000) (between:0.0000) (carrying:0.1294) (covered in:0.0714) (covering:0.0000) (eating:0.4048) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.3929) (holding:0.2656) (in:0.1401) (in front of:0.0652) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.1965) (of:0.2206) (on:0.4550) (on back of:0.0000) (over:0.0366) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.3080) (says:0.0000) (sitting on:0.1091) (standing on:0.0000) (to:0.0000) (under:0.0727) (using:0.0769) (walking in:0.0000) (walking on:0.0593) (watching:0.0392) (wearing:0.5829) (wears:0.0000) (with:0.0198) 
====================================================================================================

2023-03-14 18:55:26,294 maskrcnn_benchmark INFO: Validation Result: 0.3404
2023-03-14 18:57:58,705 maskrcnn_benchmark INFO: eta: 19:57:28  iter: 24200  loss: 0.5465 (0.6378)  loss_rel: 0.1633 (0.1884)  loss_refine_obj: 0.5004 (0.5744)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7603 (1.2876)  data: 0.0068 (0.5166)  energy lr: 0.001000  base lr : 0.001000  max mem: 9111
2023-03-14 19:00:32,131 maskrcnn_benchmark INFO: eta: 19:12:58  iter: 24400  loss: 0.6437 (0.6394)  loss_rel: 0.1693 (0.1886)  loss_refine_obj: 0.5738 (0.5757)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7701 (1.2442)  data: 0.0067 (0.4741)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:03:05,702 maskrcnn_benchmark INFO: eta: 18:35:00  iter: 24600  loss: 0.5614 (0.6393)  loss_rel: 0.1690 (0.1882)  loss_refine_obj: 0.5419 (0.5761)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7635 (1.2076)  data: 0.0066 (0.4382)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:05:39,436 maskrcnn_benchmark INFO: eta: 18:02:07  iter: 24800  loss: 0.6562 (0.6393)  loss_rel: 0.1923 (0.1877)  loss_refine_obj: 0.5622 (0.5765)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7620 (1.1762)  data: 0.0068 (0.4074)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:08:13,420 maskrcnn_benchmark INFO: eta: 17:33:22  iter: 25000  loss: 0.6053 (0.6412)  loss_rel: 0.1765 (0.1882)  loss_refine_obj: 0.5828 (0.5779)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7645 (1.1491)  data: 0.0067 (0.3806)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:10:46,869 maskrcnn_benchmark INFO: eta: 17:07:45  iter: 25200  loss: 0.6251 (0.6400)  loss_rel: 0.1547 (0.1876)  loss_refine_obj: 0.6209 (0.5773)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7616 (1.1253)  data: 0.0066 (0.3573)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:13:20,325 maskrcnn_benchmark INFO: eta: 16:44:50  iter: 25400  loss: 0.6130 (0.6397)  loss_rel: 0.1760 (0.1879)  loss_refine_obj: 0.5471 (0.5767)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7619 (1.1042)  data: 0.0061 (0.3367)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:15:53,536 maskrcnn_benchmark INFO: eta: 16:24:07  iter: 25600  loss: 0.5861 (0.6399)  loss_rel: 0.1654 (0.1881)  loss_refine_obj: 0.5248 (0.5767)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7647 (1.0854)  data: 0.0066 (0.3183)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:18:26,802 maskrcnn_benchmark INFO: eta: 16:05:20  iter: 25800  loss: 0.6402 (0.6391)  loss_rel: 0.1538 (0.1878)  loss_refine_obj: 0.5346 (0.5762)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7620 (1.0686)  data: 0.0068 (0.3019)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:21:00,075 maskrcnn_benchmark INFO: ---Total norm 0.01753 clip coef 285.19427-----------------
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.00869, (torch.Size([512, 1024]))
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.00866, (torch.Size([512, 1024]))
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00606, (torch.Size([1, 512]))
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00421, (torch.Size([1]))
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00405, (torch.Size([1, 512]))
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00400, (torch.Size([512, 4096]))
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00396, (torch.Size([512, 279]))
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00385, (torch.Size([1536, 512]))
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00374, (torch.Size([1536]))
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00188, (torch.Size([1536]))
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00180, (torch.Size([512]))
2023-03-14 19:21:00,080 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00180, (torch.Size([1536, 512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00176, (torch.Size([1536, 512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00143, (torch.Size([512, 512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00105, (torch.Size([1, 512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00101, (torch.Size([1536, 512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00083, (torch.Size([512, 51]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00082, (torch.Size([512, 512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00080, (torch.Size([1536, 512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00078, (torch.Size([512, 512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00076, (torch.Size([512, 1024, 1, 1]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00074, (torch.Size([512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00072, (torch.Size([512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00071, (torch.Size([512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00067, (torch.Size([512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00064, (torch.Size([512]))
2023-03-14 19:21:00,081 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00061, (torch.Size([128, 32]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00059, (torch.Size([512, 512, 1, 1]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00056, (torch.Size([32, 9]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00056, (torch.Size([512]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00050, (torch.Size([1]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00037, (torch.Size([1536]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00036, (torch.Size([512]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00034, (torch.Size([1]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00030, (torch.Size([1, 512]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00030, (torch.Size([512, 512]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00027, (torch.Size([512]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00027, (torch.Size([1]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00024, (torch.Size([512]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00020, (torch.Size([512]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00019, (torch.Size([1536]))
2023-03-14 19:21:00,082 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00017, (torch.Size([1536, 512]))
2023-03-14 19:21:00,083 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00014, (torch.Size([512]))
2023-03-14 19:21:00,083 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00012, (torch.Size([128]))
2023-03-14 19:21:00,083 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00011, (torch.Size([512, 512]))
2023-03-14 19:21:00,083 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00007, (torch.Size([32]))
2023-03-14 19:21:00,083 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00007, (torch.Size([512]))
2023-03-14 19:21:00,083 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00007, (torch.Size([512, 512]))
2023-03-14 19:21:00,083 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00007, (torch.Size([32]))
2023-03-14 19:21:00,083 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00006, (torch.Size([512]))
2023-03-14 19:21:00,083 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00004, (torch.Size([512, 512]))
2023-03-14 19:21:00,083 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-14 19:21:00,083 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 19:21:00,086 maskrcnn_benchmark INFO: ---Total norm 4.50012 clip coef 1.11108-----------------
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.46485, (torch.Size([4096, 12544]))
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 2.20026, (torch.Size([4096, 4096]))
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.61859, (torch.Size([3072, 5136]))
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.46800, (torch.Size([151, 512]))
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 1.27277, (torch.Size([4096, 12544]))
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.87678, (torch.Size([4096, 4096]))
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.79388, (torch.Size([51, 4096]))
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.65102, (torch.Size([512, 1024]))
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.57908, (torch.Size([4096, 1024]))
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.44904, (torch.Size([256, 1024, 3, 3]))
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.42763, (torch.Size([2048, 4808]))
2023-03-14 19:21:00,090 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.42600, (torch.Size([2048, 4808]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.34152, (torch.Size([256, 128, 3, 3]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.17886, (torch.Size([2560, 512]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.17864, (torch.Size([128, 2, 7, 7]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.08456, (torch.Size([512, 1024]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.07397, (torch.Size([512]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.06124, (torch.Size([2048, 4424]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.05628, (torch.Size([2048, 4424]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.04911, (torch.Size([2048, 512]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.04887, (torch.Size([2048, 512]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.04804, (torch.Size([151]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.04177, (torch.Size([22801, 51]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.03251, (torch.Size([51]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.03235, (torch.Size([128]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.02815, (torch.Size([3072]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.02792, (torch.Size([32, 9]))
2023-03-14 19:21:00,091 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.02588, (torch.Size([1024, 512]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.02207, (torch.Size([4096]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.02010, (torch.Size([128, 32]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01364, (torch.Size([4096]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.01201, (torch.Size([4096]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.01070, (torch.Size([4096]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00960, (torch.Size([512]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00909, (torch.Size([2048]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00909, (torch.Size([2048]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00874, (torch.Size([2048]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00874, (torch.Size([2048]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00793, (torch.Size([2048, 512]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00765, (torch.Size([256]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00750, (torch.Size([1024]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00687, (torch.Size([128]))
2023-03-14 19:21:00,092 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00668, (torch.Size([2048, 512]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00659, (torch.Size([2560]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00620, (torch.Size([256]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00522, (torch.Size([151, 200]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00508, (torch.Size([4096]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00455, (torch.Size([256]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00423, (torch.Size([256]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00393, (torch.Size([128]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00388, (torch.Size([152, 200]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00387, (torch.Size([151, 200]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00317, (torch.Size([32]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00299, (torch.Size([32]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00263, (torch.Size([128]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00145, (torch.Size([2048]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00145, (torch.Size([2048]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00122, (torch.Size([2048]))
2023-03-14 19:21:00,093 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00122, (torch.Size([2048]))
2023-03-14 19:21:00,094 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-14 19:21:00,094 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 19:21:00,097 maskrcnn_benchmark INFO: eta: 15:48:10  iter: 26000  loss: 0.6484 (0.6393)  loss_rel: 0.1975 (0.1876)  loss_refine_obj: 0.5700 (0.5766)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7661 (1.0535)  data: 0.0067 (0.2872)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:21:00,099 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0026000.pth
2023-03-14 19:21:36,648 maskrcnn_benchmark INFO: Start validating
2023-03-14 19:21:36,708 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-14 19:35:45,712 maskrcnn_benchmark INFO: Total run time: 0:14:09.003328 (0.16980066556930543 s / img per device, on 1 devices)
2023-03-14 19:35:45,713 maskrcnn_benchmark INFO: Model inference time: 0:13:12.168457 (0.15843369140625 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.26s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=23.52s).
Accumulating evaluation results...
DONE (t=6.18s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.148
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.286
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.138
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.063
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.110
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.188
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.222
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.320
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.164
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.269
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.355
2023-03-14 19:39:39,039 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2859
====================================================================================================
SGG eval:   R @ 20: 0.2380;   R @ 50: 0.3042;   R @ 100: 0.3396;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2448; ngR @ 50: 0.3300; ngR @ 100: 0.3882;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0095;  zR @ 50: 0.0201;  zR @ 100: 0.0359;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0105;  zR @ 50: 0.0180;  zR @ 100: 0.0380;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0220;  zR @ 50: 0.0458;  zR @ 100: 0.0586;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0365;  zR @ 100: 0.0365;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0278;  zR @ 50: 0.0387;  zR @ 100: 0.0760;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0359;  zR @ 50: 0.0697;  zR @ 100: 0.0944;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0247;  zR @ 50: 0.0570;  zR @ 100: 0.0879;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0268;  zR @ 50: 0.0480;  zR @ 100: 0.0717;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0288;  zR @ 50: 0.0734;  zR @ 100: 0.0986;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0351;  zR @ 50: 0.0622;  zR @ 100: 0.1041;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0266;  zR @ 50: 0.0635;  zR @ 100: 0.1061;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0649;  zR @ 50: 0.0952;  zR @ 100: 0.1310;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0260;  zR @ 100: 0.0390;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.1944;  zR @ 50: 0.2467;  zR @ 100: 0.3164;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.0625;  zR @ 50: 0.1667;  zR @ 100: 0.2083;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.1859;  zR @ 100: 0.2051;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.6667;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0514;  mR @ 50: 0.0717;  mR @ 100: 0.0828;  for mode=sgdet, type=Mean Recall.
(above:0.0244) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.0926) (attached to:0.0000) (behind:0.1795) (belonging to:0.0000) (between:0.0000) (carrying:0.2982) (covered in:0.1429) (covering:0.0000) (eating:0.2143) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4078) (holding:0.2229) (in:0.1454) (in front of:0.0483) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2557) (of:0.2131) (on:0.4385) (on back of:0.0000) (over:0.0488) (painted on:0.0000) (parked on:0.0020) (part of:0.0000) (playing:0.0000) (riding:0.3348) (says:0.0000) (sitting on:0.1143) (standing on:0.0000) (to:0.0000) (under:0.0740) (using:0.0769) (walking in:0.0000) (walking on:0.1396) (watching:0.0490) (wearing:0.5831) (wears:0.0000) (with:0.0342) 
====================================================================================================

2023-03-14 19:39:39,778 maskrcnn_benchmark INFO: Validation Result: 0.3396
2023-03-14 19:42:12,355 maskrcnn_benchmark INFO: eta: 19:31:17  iter: 26200  loss: 0.6539 (0.6398)  loss_rel: 0.1694 (0.1874)  loss_refine_obj: 0.5838 (0.5774)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7623 (1.3063)  data: 0.0070 (0.5404)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:44:46,264 maskrcnn_benchmark INFO: eta: 19:05:08  iter: 26400  loss: 0.6728 (0.6400)  loss_rel: 0.2066 (0.1871)  loss_refine_obj: 0.5546 (0.5778)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7654 (1.2819)  data: 0.0069 (0.5162)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:47:19,884 maskrcnn_benchmark INFO: eta: 18:40:59  iter: 26600  loss: 0.6326 (0.6389)  loss_rel: 0.1770 (0.1868)  loss_refine_obj: 0.5652 (0.5770)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7729 (1.2595)  data: 0.0071 (0.4940)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:49:53,716 maskrcnn_benchmark INFO: eta: 18:18:40  iter: 26800  loss: 0.5951 (0.6392)  loss_rel: 0.1594 (0.1872)  loss_refine_obj: 0.5735 (0.5770)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7750 (1.2391)  data: 0.0069 (0.4737)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:52:27,361 maskrcnn_benchmark INFO: eta: 17:57:54  iter: 27000  loss: 0.6072 (0.6389)  loss_rel: 0.1770 (0.1871)  loss_refine_obj: 0.5142 (0.5768)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7679 (1.2203)  data: 0.0068 (0.4551)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:55:01,319 maskrcnn_benchmark INFO: eta: 17:38:35  iter: 27200  loss: 0.5730 (0.6391)  loss_rel: 0.1627 (0.1866)  loss_refine_obj: 0.5549 (0.5774)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7707 (1.2029)  data: 0.0067 (0.4378)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 19:57:34,788 maskrcnn_benchmark INFO: eta: 17:20:26  iter: 27400  loss: 0.5917 (0.6390)  loss_rel: 0.1874 (0.1867)  loss_refine_obj: 0.5289 (0.5772)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7614 (1.1868)  data: 0.0065 (0.4218)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:00:07,823 maskrcnn_benchmark INFO: eta: 17:03:20  iter: 27600  loss: 0.6338 (0.6386)  loss_rel: 0.1949 (0.1868)  loss_refine_obj: 0.5651 (0.5767)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7556 (1.1718)  data: 0.0066 (0.4070)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:02:41,118 maskrcnn_benchmark INFO: eta: 16:47:16  iter: 27800  loss: 0.5201 (0.6381)  loss_rel: 0.1683 (0.1869)  loss_refine_obj: 0.4869 (0.5761)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7615 (1.1578)  data: 0.0063 (0.3932)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:05:14,881 maskrcnn_benchmark INFO: ---Total norm 0.05884 clip coef 84.97425-----------------
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.02763, (torch.Size([512, 1024]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.02753, (torch.Size([512, 1024]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.02253, (torch.Size([1, 512]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.01656, (torch.Size([1]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.01462, (torch.Size([1]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.01445, (torch.Size([1536]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.01368, (torch.Size([1, 512]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.01109, (torch.Size([512, 279]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.01106, (torch.Size([1536, 512]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00726, (torch.Size([1536]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00722, (torch.Size([512, 4096]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00669, (torch.Size([1536, 512]))
2023-03-14 20:05:14,886 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00597, (torch.Size([512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00460, (torch.Size([1536, 512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00396, (torch.Size([512, 512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00283, (torch.Size([512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00283, (torch.Size([512, 512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00272, (torch.Size([1536, 512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00262, (torch.Size([512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00254, (torch.Size([512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00245, (torch.Size([512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00227, (torch.Size([512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00222, (torch.Size([512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00220, (torch.Size([512, 512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00203, (torch.Size([512, 51]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00195, (torch.Size([1536, 512]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00162, (torch.Size([512, 1024, 1, 1]))
2023-03-14 20:05:14,887 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00150, (torch.Size([512, 512, 1, 1]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00140, (torch.Size([1536]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00118, (torch.Size([512]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00118, (torch.Size([512, 512]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00117, (torch.Size([128, 32]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00099, (torch.Size([512]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00095, (torch.Size([512]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00091, (torch.Size([1, 512]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00075, (torch.Size([512]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00073, (torch.Size([32, 9]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00070, (torch.Size([1536]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00063, (torch.Size([1536, 512]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00051, (torch.Size([128]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00051, (torch.Size([512]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00051, (torch.Size([1]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00030, (torch.Size([512, 512]))
2023-03-14 20:05:14,888 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00029, (torch.Size([32]))
2023-03-14 20:05:14,889 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00024, (torch.Size([512, 512]))
2023-03-14 20:05:14,889 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00024, (torch.Size([512]))
2023-03-14 20:05:14,889 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00020, (torch.Size([512]))
2023-03-14 20:05:14,889 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00011, (torch.Size([32]))
2023-03-14 20:05:14,889 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00011, (torch.Size([1]))
2023-03-14 20:05:14,889 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00011, (torch.Size([512, 512]))
2023-03-14 20:05:14,889 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00007, (torch.Size([1, 512]))
2023-03-14 20:05:14,889 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-14 20:05:14,889 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 20:05:14,891 maskrcnn_benchmark INFO: ---Total norm 4.86492 clip coef 1.02777-----------------
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.83631, (torch.Size([4096, 12544]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 2.29691, (torch.Size([4096, 4096]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 2.22758, (torch.Size([151, 512]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 2.02331, (torch.Size([3072, 5136]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.71269, (torch.Size([4096, 12544]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.44463, (torch.Size([4096, 4096]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.41547, (torch.Size([51, 4096]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.29558, (torch.Size([512, 1024]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.26715, (torch.Size([4096, 1024]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.25233, (torch.Size([256, 1024, 3, 3]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.22481, (torch.Size([2560, 512]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.18240, (torch.Size([2048, 4808]))
2023-03-14 20:05:14,896 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.18209, (torch.Size([2048, 4808]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.18148, (torch.Size([256, 128, 3, 3]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.10848, (torch.Size([128, 2, 7, 7]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.09192, (torch.Size([151]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.07710, (torch.Size([512, 1024]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.05620, (torch.Size([2048, 4424]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.05509, (torch.Size([2048, 4424]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.04710, (torch.Size([3072]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.03771, (torch.Size([512]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.02841, (torch.Size([4096]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.02222, (torch.Size([51]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.02180, (torch.Size([2048, 512]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.02092, (torch.Size([2048, 512]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.02052, (torch.Size([22801, 51]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01824, (torch.Size([4096]))
2023-03-14 20:05:14,897 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.01778, (torch.Size([128, 32]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01567, (torch.Size([128]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01368, (torch.Size([32, 9]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01235, (torch.Size([1024, 512]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.01027, (torch.Size([512]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00973, (torch.Size([2560]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00903, (torch.Size([151, 200]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00746, (torch.Size([2048, 512]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00711, (torch.Size([2048, 512]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00641, (torch.Size([4096]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00572, (torch.Size([128]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00566, (torch.Size([4096]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00456, (torch.Size([152, 200]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00426, (torch.Size([2048]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00426, (torch.Size([2048]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00411, (torch.Size([2048]))
2023-03-14 20:05:14,898 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00411, (torch.Size([2048]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00400, (torch.Size([1024]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00394, (torch.Size([256]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00366, (torch.Size([128]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00361, (torch.Size([32]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00288, (torch.Size([256]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00260, (torch.Size([4096]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00259, (torch.Size([32]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00226, (torch.Size([256]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00212, (torch.Size([256]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00153, (torch.Size([151, 200]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00144, (torch.Size([2048]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00144, (torch.Size([2048]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00142, (torch.Size([2048]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00142, (torch.Size([2048]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00118, (torch.Size([128]))
2023-03-14 20:05:14,899 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-14 20:05:14,900 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 20:05:14,903 maskrcnn_benchmark INFO: eta: 16:32:10  iter: 28000  loss: 0.5688 (0.6381)  loss_rel: 0.1634 (0.1869)  loss_refine_obj: 0.5661 (0.5761)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7649 (1.1448)  data: 0.0068 (0.3803)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:05:14,905 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0028000.pth
2023-03-14 20:05:50,864 maskrcnn_benchmark INFO: Start validating
2023-03-14 20:05:50,919 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-14 20:20:00,600 maskrcnn_benchmark INFO: Total run time: 0:14:09.680491 (0.16993609824180603 s / img per device, on 1 devices)
2023-03-14 20:20:00,601 maskrcnn_benchmark INFO: Model inference time: 0:13:12.654008 (0.15853080158233643 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=23.87s).
Accumulating evaluation results...
DONE (t=5.39s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.149
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.286
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.139
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.062
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.111
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.188
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.222
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.321
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.165
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.269
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.354
2023-03-14 20:23:52,605 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2857
====================================================================================================
SGG eval:   R @ 20: 0.2411;   R @ 50: 0.3094;   R @ 100: 0.3428;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2492; ngR @ 50: 0.3343; ngR @ 100: 0.3922;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0044;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0063;  zR @ 50: 0.0190;  zR @ 100: 0.0398;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0165;  zR @ 50: 0.0235;  zR @ 100: 0.0475;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0110;  zR @ 50: 0.0385;  zR @ 100: 0.0659;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0279;  zR @ 100: 0.0451;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0234;  zR @ 50: 0.0344;  zR @ 100: 0.0651;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0462;  zR @ 50: 0.0684;  zR @ 100: 0.0966;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0389;  zR @ 50: 0.0491;  zR @ 100: 0.0835;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0303;  zR @ 50: 0.0500;  zR @ 100: 0.0722;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0360;  zR @ 50: 0.0986;  zR @ 100: 0.0986;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0284;  zR @ 50: 0.0757;  zR @ 100: 0.0973;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0319;  zR @ 50: 0.0851;  zR @ 100: 0.0996;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0738;  zR @ 50: 0.1024;  zR @ 100: 0.1202;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0000;  zR @ 50: 0.0260;  zR @ 100: 0.0390;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.1711;  zR @ 50: 0.2816;  zR @ 100: 0.3397;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.0625;  zR @ 50: 0.1696;  zR @ 100: 0.1994;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1859;  zR @ 50: 0.1859;  zR @ 100: 0.2436;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.6667;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0548;  mR @ 50: 0.0729;  mR @ 100: 0.0842;  for mode=sgdet, type=Mean Recall.
(above:0.0372) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.1700) (attached to:0.0000) (behind:0.1740) (belonging to:0.0000) (between:0.0000) (carrying:0.1294) (covered in:0.0714) (covering:0.0000) (eating:0.0714) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.3956) (holding:0.2897) (in:0.1528) (in front of:0.0648) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2482) (of:0.2008) (on:0.4410) (on back of:0.0000) (over:0.0366) (painted on:0.0000) (parked on:0.0150) (part of:0.0000) (playing:0.0000) (riding:0.3616) (says:0.0000) (sitting on:0.1117) (standing on:0.0583) (to:0.0000) (under:0.0816) (using:0.0769) (walking in:0.0000) (walking on:0.3364) (watching:0.0686) (wearing:0.5830) (wears:0.0000) (with:0.0345) 
====================================================================================================

2023-03-14 20:23:53,332 maskrcnn_benchmark INFO: Validation Result: 0.3428
2023-03-14 20:26:26,083 maskrcnn_benchmark INFO: eta: 18:53:29  iter: 28200  loss: 0.6063 (0.6374)  loss_rel: 0.1830 (0.1868)  loss_refine_obj: 0.5214 (0.5755)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7633 (1.3129)  data: 0.0071 (0.5487)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:28:59,198 maskrcnn_benchmark INFO: eta: 18:34:23  iter: 28400  loss: 0.6004 (0.6372)  loss_rel: 0.2032 (0.1870)  loss_refine_obj: 0.5235 (0.5752)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7650 (1.2958)  data: 0.0067 (0.5317)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:31:32,482 maskrcnn_benchmark INFO: eta: 18:16:20  iter: 28600  loss: 0.5507 (0.6375)  loss_rel: 0.1635 (0.1870)  loss_refine_obj: 0.5119 (0.5755)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7565 (1.2798)  data: 0.0063 (0.5158)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:34:05,831 maskrcnn_benchmark INFO: eta: 17:59:11  iter: 28800  loss: 0.6229 (0.6370)  loss_rel: 0.1746 (0.1870)  loss_refine_obj: 0.5380 (0.5750)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7666 (1.2647)  data: 0.0066 (0.5009)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:36:40,012 maskrcnn_benchmark INFO: eta: 17:42:59  iter: 29000  loss: 0.6419 (0.6374)  loss_rel: 0.2121 (0.1872)  loss_refine_obj: 0.5527 (0.5751)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7757 (1.2506)  data: 0.0066 (0.4867)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:39:13,009 maskrcnn_benchmark INFO: eta: 17:27:23  iter: 29200  loss: 0.5666 (0.6369)  loss_rel: 0.1746 (0.1872)  loss_refine_obj: 0.5164 (0.5747)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7680 (1.2371)  data: 0.0068 (0.4734)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:41:46,649 maskrcnn_benchmark INFO: eta: 17:12:35  iter: 29400  loss: 0.5845 (0.6371)  loss_rel: 0.1816 (0.1872)  loss_refine_obj: 0.5465 (0.5748)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7642 (1.2244)  data: 0.0066 (0.4608)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:44:20,398 maskrcnn_benchmark INFO: eta: 16:58:26  iter: 29600  loss: 0.6800 (0.6373)  loss_rel: 0.2056 (0.1872)  loss_refine_obj: 0.5724 (0.5751)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7686 (1.2124)  data: 0.0066 (0.4488)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:46:53,675 maskrcnn_benchmark INFO: eta: 16:44:49  iter: 29800  loss: 0.6242 (0.6374)  loss_rel: 0.1390 (0.1872)  loss_refine_obj: 0.5705 (0.5752)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7648 (1.2010)  data: 0.0063 (0.4375)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:49:26,955 maskrcnn_benchmark INFO: ---Total norm 0.03367 clip coef 148.50203-----------------
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.01669, (torch.Size([512, 1024]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.01669, (torch.Size([512, 1024]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.01289, (torch.Size([1, 512]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00799, (torch.Size([1]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00730, (torch.Size([1]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00724, (torch.Size([1536]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00686, (torch.Size([1, 512]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00576, (torch.Size([512, 279]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00573, (torch.Size([1536, 512]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00447, (torch.Size([512, 4096]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00433, (torch.Size([1536, 512]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00425, (torch.Size([1536, 512]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00364, (torch.Size([1536]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00319, (torch.Size([512]))
2023-03-14 20:49:26,961 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00254, (torch.Size([1536, 512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00233, (torch.Size([512, 512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00196, (torch.Size([512, 512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00194, (torch.Size([512, 51]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00189, (torch.Size([512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00164, (torch.Size([512, 1024, 1, 1]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00160, (torch.Size([1, 512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00150, (torch.Size([512, 512, 1, 1]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00146, (torch.Size([512, 512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00143, (torch.Size([512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00131, (torch.Size([512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00130, (torch.Size([512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00124, (torch.Size([512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00124, (torch.Size([512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00119, (torch.Size([1536, 512]))
2023-03-14 20:49:26,962 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00106, (torch.Size([512]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00100, (torch.Size([1]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00063, (torch.Size([1536]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00063, (torch.Size([512, 512]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00062, (torch.Size([512]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00059, (torch.Size([128, 32]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00048, (torch.Size([512]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00046, (torch.Size([512]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00041, (torch.Size([1]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00038, (torch.Size([32, 9]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00032, (torch.Size([1536]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00028, (torch.Size([1536, 512]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00027, (torch.Size([1, 512]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00026, (torch.Size([128]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00026, (torch.Size([512]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00024, (torch.Size([512, 512]))
2023-03-14 20:49:26,963 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00014, (torch.Size([32]))
2023-03-14 20:49:26,964 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00012, (torch.Size([512, 512]))
2023-03-14 20:49:26,964 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00011, (torch.Size([512]))
2023-03-14 20:49:26,964 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00009, (torch.Size([512]))
2023-03-14 20:49:26,964 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00008, (torch.Size([512, 512]))
2023-03-14 20:49:26,964 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00006, (torch.Size([32]))
2023-03-14 20:49:26,964 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-14 20:49:26,964 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 20:49:26,966 maskrcnn_benchmark INFO: ---Total norm 4.51987 clip coef 1.10623-----------------
2023-03-14 20:49:26,970 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.66680, (torch.Size([4096, 12544]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 2.11417, (torch.Size([4096, 4096]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.84713, (torch.Size([3072, 5136]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.76927, (torch.Size([151, 512]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.95861, (torch.Size([4096, 12544]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.60541, (torch.Size([4096, 4096]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.55422, (torch.Size([51, 4096]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.40573, (torch.Size([512, 1024]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.36754, (torch.Size([4096, 1024]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.34969, (torch.Size([256, 1024, 3, 3]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.28732, (torch.Size([2048, 4808]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.26843, (torch.Size([2048, 4808]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.25008, (torch.Size([256, 128, 3, 3]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.19584, (torch.Size([2560, 512]))
2023-03-14 20:49:26,971 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.11581, (torch.Size([128, 2, 7, 7]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.07049, (torch.Size([512, 1024]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.05387, (torch.Size([2048, 4424]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.05336, (torch.Size([2048, 4424]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.04650, (torch.Size([151]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.03941, (torch.Size([512]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.03418, (torch.Size([22801, 51]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.03066, (torch.Size([51]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.03055, (torch.Size([2048, 512]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.03051, (torch.Size([3072]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.02962, (torch.Size([2048, 512]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.02138, (torch.Size([128, 32]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.02128, (torch.Size([128]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.01814, (torch.Size([4096]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01766, (torch.Size([32, 9]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01655, (torch.Size([1024, 512]))
2023-03-14 20:49:26,972 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01396, (torch.Size([4096]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00880, (torch.Size([151, 200]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00807, (torch.Size([4096]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00673, (torch.Size([2560]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00668, (torch.Size([4096]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00647, (torch.Size([2048, 512]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00634, (torch.Size([512]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00621, (torch.Size([2048, 512]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00621, (torch.Size([256]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00531, (torch.Size([2048]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00531, (torch.Size([2048]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00528, (torch.Size([128]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00494, (torch.Size([2048]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00494, (torch.Size([2048]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00422, (torch.Size([152, 200]))
2023-03-14 20:49:26,973 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00406, (torch.Size([256]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00405, (torch.Size([1024]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00353, (torch.Size([4096]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00304, (torch.Size([256]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00292, (torch.Size([256]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00289, (torch.Size([128]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00247, (torch.Size([32]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00245, (torch.Size([32]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00237, (torch.Size([151, 200]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00190, (torch.Size([128]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00110, (torch.Size([2048]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00110, (torch.Size([2048]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00110, (torch.Size([2048]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00110, (torch.Size([2048]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-14 20:49:26,974 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 20:49:26,977 maskrcnn_benchmark INFO: eta: 16:31:46  iter: 30000  loss: 0.6054 (0.6372)  loss_rel: 0.1565 (0.1871)  loss_refine_obj: 0.5238 (0.5750)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7655 (1.1901)  data: 0.0068 (0.4267)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 20:49:26,980 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0030000.pth
2023-03-14 20:50:03,396 maskrcnn_benchmark INFO: Start validating
2023-03-14 20:50:03,456 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-14 21:04:20,726 maskrcnn_benchmark INFO: Total run time: 0:14:17.270172 (0.17145403447151183 s / img per device, on 1 devices)
2023-03-14 21:04:20,728 maskrcnn_benchmark INFO: Model inference time: 0:13:10.692876 (0.15813857526779174 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.29s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=23.58s).
Accumulating evaluation results...
DONE (t=5.40s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.149
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.286
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.141
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.062
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.110
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.188
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.221
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.320
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.322
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.163
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.268
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.354
2023-03-14 21:08:13,696 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2862
====================================================================================================
SGG eval:   R @ 20: 0.2407;   R @ 50: 0.3066;   R @ 100: 0.3425;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2483; ngR @ 50: 0.3322; ngR @ 100: 0.3895;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0116;  zR @ 50: 0.0190;  zR @ 100: 0.0430;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0120;  zR @ 50: 0.0260;  zR @ 100: 0.0440;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0220;  zR @ 50: 0.0275;  zR @ 100: 0.0641;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0279;  zR @ 100: 0.0365;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0300;  zR @ 50: 0.0541;  zR @ 100: 0.0760;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0359;  zR @ 50: 0.0684;  zR @ 100: 0.0825;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0250;  zR @ 50: 0.0511;  zR @ 100: 0.0802;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0303;  zR @ 50: 0.0455;  zR @ 100: 0.0616;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0504;  zR @ 50: 0.0827;  zR @ 100: 0.1129;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0486;  zR @ 50: 0.0622;  zR @ 100: 0.0770;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0532;  zR @ 50: 0.0730;  zR @ 100: 0.1008;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0435;  zR @ 50: 0.0905;  zR @ 100: 0.1369;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0260;  zR @ 100: 0.0260;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.1711;  zR @ 50: 0.2932;  zR @ 100: 0.3164;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.1250;  zR @ 50: 0.1875;  zR @ 100: 0.1875;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.1859;  zR @ 100: 0.1859;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.6667;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0567;  mR @ 50: 0.0747;  mR @ 100: 0.0883;  for mode=sgdet, type=Mean Recall.
(above:0.0315) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.1912) (attached to:0.0000) (behind:0.1935) (belonging to:0.0000) (between:0.0000) (carrying:0.3509) (covered in:0.0714) (covering:0.0000) (eating:0.2143) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4027) (holding:0.2253) (in:0.1475) (in front of:0.0739) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2394) (of:0.2070) (on:0.4431) (on back of:0.0000) (over:0.0488) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.3884) (says:0.0000) (sitting on:0.1117) (standing on:0.0384) (to:0.0000) (under:0.0689) (using:0.0769) (walking in:0.0000) (walking on:0.2230) (watching:0.0686) (wearing:0.5803) (wears:0.0000) (with:0.0199) 
====================================================================================================

2023-03-14 21:08:14,423 maskrcnn_benchmark INFO: Validation Result: 0.3425
2023-03-14 21:10:47,024 maskrcnn_benchmark INFO: eta: 18:13:16  iter: 30200  loss: 0.6125 (0.6369)  loss_rel: 0.1667 (0.1868)  loss_refine_obj: 0.5757 (0.5750)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7654 (1.3172)  data: 0.0069 (0.5540)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 21:13:20,017 maskrcnn_benchmark INFO: eta: 17:58:00  iter: 30400  loss: 0.5522 (0.6364)  loss_rel: 0.1392 (0.1867)  loss_refine_obj: 0.5362 (0.5747)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7681 (1.3041)  data: 0.0070 (0.5410)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 21:15:53,786 maskrcnn_benchmark INFO: eta: 17:43:25  iter: 30600  loss: 0.6034 (0.6365)  loss_rel: 0.1534 (0.1865)  loss_refine_obj: 0.5953 (0.5750)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7636 (1.2916)  data: 0.0067 (0.5285)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 21:18:27,152 maskrcnn_benchmark INFO: eta: 17:29:20  iter: 30800  loss: 0.5593 (0.6363)  loss_rel: 0.1473 (0.1864)  loss_refine_obj: 0.5248 (0.5749)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7641 (1.2797)  data: 0.0069 (0.5167)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 21:21:00,593 maskrcnn_benchmark INFO: eta: 17:15:46  iter: 31000  loss: 0.6617 (0.6362)  loss_rel: 0.1929 (0.1863)  loss_refine_obj: 0.6022 (0.5749)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7689 (1.2683)  data: 0.0068 (0.5054)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 21:23:34,095 maskrcnn_benchmark INFO: eta: 17:02:41  iter: 31200  loss: 0.5537 (0.6364)  loss_rel: 0.1548 (0.1863)  loss_refine_obj: 0.5133 (0.5750)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7641 (1.2574)  data: 0.0066 (0.4945)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 21:26:07,391 maskrcnn_benchmark INFO: eta: 16:50:02  iter: 31400  loss: 0.6278 (0.6365)  loss_rel: 0.1587 (0.1864)  loss_refine_obj: 0.5826 (0.5750)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7646 (1.2470)  data: 0.0066 (0.4841)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 21:28:41,046 maskrcnn_benchmark INFO: eta: 16:37:50  iter: 31600  loss: 0.5753 (0.6363)  loss_rel: 0.1853 (0.1865)  loss_refine_obj: 0.4976 (0.5748)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7692 (1.2370)  data: 0.0064 (0.4742)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 21:31:14,668 maskrcnn_benchmark INFO: eta: 16:26:01  iter: 31800  loss: 0.5628 (0.6359)  loss_rel: 0.1583 (0.1863)  loss_refine_obj: 0.4938 (0.5745)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7707 (1.2274)  data: 0.0067 (0.4647)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 21:33:48,543 maskrcnn_benchmark INFO: ---Total norm 0.02419 clip coef 206.69899-----------------
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.01142, (torch.Size([512, 1024]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.01138, (torch.Size([512, 1024]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00885, (torch.Size([1, 512]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00776, (torch.Size([1]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00604, (torch.Size([1]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00557, (torch.Size([1, 512]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00556, (torch.Size([1536]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00524, (torch.Size([512, 279]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00509, (torch.Size([1536, 512]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00286, (torch.Size([512]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00279, (torch.Size([1536]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00221, (torch.Size([512, 4096]))
2023-03-14 21:33:48,549 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00210, (torch.Size([1536, 512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00117, (torch.Size([512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00110, (torch.Size([512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00103, (torch.Size([512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00102, (torch.Size([512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00099, (torch.Size([512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00080, (torch.Size([512, 512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00076, (torch.Size([128, 32]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00066, (torch.Size([1536, 512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00059, (torch.Size([1, 512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00058, (torch.Size([1536, 512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00055, (torch.Size([512, 512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00043, (torch.Size([32, 9]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00042, (torch.Size([512, 512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00042, (torch.Size([512]))
2023-03-14 21:33:48,550 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00037, (torch.Size([512]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00036, (torch.Size([1536, 512]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00030, (torch.Size([512, 51]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00028, (torch.Size([512]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00027, (torch.Size([512, 512]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00027, (torch.Size([512, 1024, 1, 1]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00025, (torch.Size([1]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00023, (torch.Size([512, 512, 1, 1]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00021, (torch.Size([1536]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00020, (torch.Size([128]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00014, (torch.Size([512]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00014, (torch.Size([1]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00011, (torch.Size([32]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00010, (torch.Size([1536]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00010, (torch.Size([512]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00009, (torch.Size([1, 512]))
2023-03-14 21:33:48,551 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00009, (torch.Size([1536, 512]))
2023-03-14 21:33:48,552 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00008, (torch.Size([512]))
2023-03-14 21:33:48,552 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00008, (torch.Size([32]))
2023-03-14 21:33:48,552 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00006, (torch.Size([512, 512]))
2023-03-14 21:33:48,552 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00004, (torch.Size([512, 512]))
2023-03-14 21:33:48,552 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00004, (torch.Size([512]))
2023-03-14 21:33:48,552 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00003, (torch.Size([512]))
2023-03-14 21:33:48,552 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00003, (torch.Size([512, 512]))
2023-03-14 21:33:48,552 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-14 21:33:48,552 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 21:33:48,554 maskrcnn_benchmark INFO: ---Total norm 3.45119 clip coef 1.44878-----------------
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.06970, (torch.Size([4096, 12544]))
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 1.62784, (torch.Size([4096, 4096]))
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.33823, (torch.Size([3072, 5136]))
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.15657, (torch.Size([151, 512]))
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.85897, (torch.Size([4096, 12544]))
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.57062, (torch.Size([51, 4096]))
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.54234, (torch.Size([4096, 4096]))
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.33274, (torch.Size([512, 1024]))
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.33191, (torch.Size([256, 1024, 3, 3]))
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.31461, (torch.Size([4096, 1024]))
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.21828, (torch.Size([256, 128, 3, 3]))
2023-03-14 21:33:48,559 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.20342, (torch.Size([2048, 4808]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.19969, (torch.Size([2048, 4808]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.14070, (torch.Size([2560, 512]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.09733, (torch.Size([128, 2, 7, 7]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.04928, (torch.Size([512, 1024]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.04115, (torch.Size([512]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.03826, (torch.Size([2048, 4424]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.03798, (torch.Size([2048, 4424]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.03739, (torch.Size([151]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.02889, (torch.Size([51]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.02366, (torch.Size([3072]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.02261, (torch.Size([2048, 512]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.02165, (torch.Size([2048, 512]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.02128, (torch.Size([128]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.01848, (torch.Size([22801, 51]))
2023-03-14 21:33:48,560 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.01513, (torch.Size([4096]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01431, (torch.Size([32, 9]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.01429, (torch.Size([128, 32]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01414, (torch.Size([1024, 512]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01116, (torch.Size([4096]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00846, (torch.Size([256]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00804, (torch.Size([4096]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00734, (torch.Size([4096]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00541, (torch.Size([512]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00537, (torch.Size([151, 200]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00491, (torch.Size([2560]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00463, (torch.Size([2048, 512]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00458, (torch.Size([2048, 512]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00445, (torch.Size([1024]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00427, (torch.Size([128]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00420, (torch.Size([2048]))
2023-03-14 21:33:48,561 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00420, (torch.Size([2048]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00409, (torch.Size([2048]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00409, (torch.Size([2048]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00391, (torch.Size([256]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00377, (torch.Size([256]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00351, (torch.Size([4096]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00296, (torch.Size([256]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00290, (torch.Size([152, 200]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00229, (torch.Size([32]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00226, (torch.Size([128]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00198, (torch.Size([128]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00151, (torch.Size([151, 200]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00138, (torch.Size([32]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00081, (torch.Size([2048]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00081, (torch.Size([2048]))
2023-03-14 21:33:48,562 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00080, (torch.Size([2048]))
2023-03-14 21:33:48,563 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00080, (torch.Size([2048]))
2023-03-14 21:33:48,563 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-14 21:33:48,563 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 21:33:48,566 maskrcnn_benchmark INFO: eta: 16:14:36  iter: 32000  loss: 0.6905 (0.6359)  loss_rel: 0.1724 (0.1864)  loss_refine_obj: 0.6030 (0.5745)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7713 (1.2183)  data: 0.0065 (0.4555)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 21:33:48,568 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0032000.pth
2023-03-14 21:34:24,793 maskrcnn_benchmark INFO: Start validating
2023-03-14 21:34:24,853 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-14 21:48:38,400 maskrcnn_benchmark INFO: Total run time: 0:14:13.546861 (0.17070937218666077 s / img per device, on 1 devices)
2023-03-14 21:48:38,401 maskrcnn_benchmark INFO: Model inference time: 0:13:10.259495 (0.15805189905166625 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.29s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=23.62s).
Accumulating evaluation results...
DONE (t=5.40s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.149
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.286
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.139
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.062
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.111
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.188
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.222
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.321
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.162
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.268
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.356
2023-03-14 21:52:30,973 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2856
====================================================================================================
SGG eval:   R @ 20: 0.2416;   R @ 50: 0.3076;   R @ 100: 0.3439;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2499; ngR @ 50: 0.3367; ngR @ 100: 0.3924;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0044;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0085;  zR @ 50: 0.0169;  zR @ 100: 0.0332;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0135;  zR @ 50: 0.0270;  zR @ 100: 0.0450;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0110;  zR @ 50: 0.0311;  zR @ 100: 0.0696;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0236;  zR @ 100: 0.0494;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0234;  zR @ 50: 0.0475;  zR @ 100: 0.0848;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0256;  zR @ 50: 0.0624;  zR @ 100: 0.0966;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0278;  zR @ 50: 0.0502;  zR @ 100: 0.0885;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0121;  zR @ 50: 0.0394;  zR @ 100: 0.0556;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0360;  zR @ 50: 0.0791;  zR @ 100: 0.0971;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0655;  zR @ 100: 0.0723;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0213;  zR @ 50: 0.0665;  zR @ 100: 0.0801;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0470;  zR @ 50: 0.0917;  zR @ 100: 0.0976;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0260;  zR @ 100: 0.0390;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.1827;  zR @ 50: 0.2467;  zR @ 100: 0.3106;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.1042;  zR @ 50: 0.1875;  zR @ 100: 0.1875;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.1859;  zR @ 100: 0.2436;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.3333;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0595;  mR @ 50: 0.0840;  mR @ 100: 0.0955;  for mode=sgdet, type=Mean Recall.
(above:0.0450) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.1852) (attached to:0.0000) (behind:0.1664) (belonging to:0.0000) (between:0.0000) (carrying:0.2939) (covered in:0.1786) (covering:0.0000) (eating:0.4048) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4132) (holding:0.2491) (in:0.1530) (in front of:0.1048) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2134) (of:0.2329) (on:0.4396) (on back of:0.0000) (over:0.0488) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.3348) (says:0.0000) (sitting on:0.1117) (standing on:0.0326) (to:0.0000) (under:0.0893) (using:0.1538) (walking in:0.0000) (walking on:0.2372) (watching:0.0686) (wearing:0.5896) (wears:0.0000) (with:0.0286) 
====================================================================================================

2023-03-14 21:52:31,706 maskrcnn_benchmark INFO: Validation Result: 0.3439
2023-03-14 21:55:04,439 maskrcnn_benchmark INFO: eta: 17:31:09  iter: 32200  loss: 0.5983 (0.6358)  loss_rel: 0.1408 (0.1862)  loss_refine_obj: 0.6153 (0.5746)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7680 (1.3195)  data: 0.0070 (0.5568)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 21:57:37,832 maskrcnn_benchmark INFO: eta: 17:18:20  iter: 32400  loss: 0.6547 (0.6358)  loss_rel: 0.1649 (0.1863)  loss_refine_obj: 0.6053 (0.5744)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7695 (1.3088)  data: 0.0068 (0.5462)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 22:00:11,822 maskrcnn_benchmark INFO: eta: 17:05:56  iter: 32600  loss: 0.5853 (0.6356)  loss_rel: 0.1813 (0.1864)  loss_refine_obj: 0.5528 (0.5741)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7659 (1.2987)  data: 0.0066 (0.5361)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 22:02:45,247 maskrcnn_benchmark INFO: eta: 16:53:52  iter: 32800  loss: 0.5915 (0.6352)  loss_rel: 0.1518 (0.1863)  loss_refine_obj: 0.5338 (0.5739)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7616 (1.2888)  data: 0.0070 (0.5263)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 22:05:19,061 maskrcnn_benchmark INFO: eta: 16:42:10  iter: 33000  loss: 0.6177 (0.6356)  loss_rel: 0.1587 (0.1863)  loss_refine_obj: 0.5426 (0.5742)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7648 (1.2794)  data: 0.0069 (0.5168)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 22:07:52,600 maskrcnn_benchmark INFO: eta: 16:30:46  iter: 33200  loss: 0.5772 (0.6355)  loss_rel: 0.1351 (0.1865)  loss_refine_obj: 0.5115 (0.5740)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7591 (1.2702)  data: 0.0066 (0.5077)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 22:10:25,976 maskrcnn_benchmark INFO: eta: 16:19:41  iter: 33400  loss: 0.5170 (0.6352)  loss_rel: 0.1216 (0.1863)  loss_refine_obj: 0.5255 (0.5738)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7583 (1.2614)  data: 0.0067 (0.4989)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 22:13:00,282 maskrcnn_benchmark INFO: eta: 16:08:57  iter: 33600  loss: 0.6378 (0.6354)  loss_rel: 0.1746 (0.1863)  loss_refine_obj: 0.5483 (0.5741)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7667 (1.2530)  data: 0.0068 (0.4904)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 22:15:33,840 maskrcnn_benchmark INFO: eta: 15:58:26  iter: 33800  loss: 0.5959 (0.6351)  loss_rel: 0.1637 (0.1862)  loss_refine_obj: 0.5660 (0.5739)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7595 (1.2447)  data: 0.0069 (0.4822)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 22:18:07,377 maskrcnn_benchmark INFO: ---Total norm 0.03232 clip coef 154.69876-----------------
2023-03-14 22:18:07,382 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.01645, (torch.Size([512, 1024]))
2023-03-14 22:18:07,382 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.01507, (torch.Size([512, 1024]))
2023-03-14 22:18:07,382 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.01080, (torch.Size([1]))
2023-03-14 22:18:07,382 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00925, (torch.Size([1536]))
2023-03-14 22:18:07,382 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00918, (torch.Size([1, 512]))
2023-03-14 22:18:07,382 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00814, (torch.Size([512, 4096]))
2023-03-14 22:18:07,382 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00556, (torch.Size([512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00555, (torch.Size([1536, 512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00552, (torch.Size([512, 279]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00465, (torch.Size([1536]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00380, (torch.Size([1536, 512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00311, (torch.Size([1, 512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00253, (torch.Size([512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00232, (torch.Size([1]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00231, (torch.Size([1, 512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00206, (torch.Size([512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00205, (torch.Size([1536, 512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00204, (torch.Size([512, 512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00194, (torch.Size([512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00170, (torch.Size([512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00167, (torch.Size([1536, 512]))
2023-03-14 22:18:07,383 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00161, (torch.Size([512]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00159, (torch.Size([1]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00121, (torch.Size([1536]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00120, (torch.Size([512, 512]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00115, (torch.Size([128, 32]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00103, (torch.Size([1536, 512]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00099, (torch.Size([512, 512]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00086, (torch.Size([512, 512]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00074, (torch.Size([512]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00070, (torch.Size([512, 51]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00069, (torch.Size([512, 1024, 1, 1]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00068, (torch.Size([32, 9]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00064, (torch.Size([512]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00061, (torch.Size([1536]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00061, (torch.Size([512]))
2023-03-14 22:18:07,384 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00058, (torch.Size([512, 512, 1, 1]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00057, (torch.Size([1536, 512]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00055, (torch.Size([512, 512]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00046, (torch.Size([512]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00046, (torch.Size([512]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00038, (torch.Size([128]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00027, (torch.Size([512, 512]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00026, (torch.Size([512]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00021, (torch.Size([512]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00019, (torch.Size([32]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00018, (torch.Size([512, 512]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00017, (torch.Size([512]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00014, (torch.Size([32]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00010, (torch.Size([1]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00007, (torch.Size([1, 512]))
2023-03-14 22:18:07,385 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-14 22:18:07,386 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 22:18:07,388 maskrcnn_benchmark INFO: ---Total norm 3.20055 clip coef 1.56223-----------------
2023-03-14 22:18:07,392 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.11064, (torch.Size([4096, 12544]))
2023-03-14 22:18:07,392 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 1.51204, (torch.Size([4096, 4096]))
2023-03-14 22:18:07,392 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.17155, (torch.Size([3072, 5136]))
2023-03-14 22:18:07,392 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.11101, (torch.Size([151, 512]))
2023-03-14 22:18:07,392 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.59295, (torch.Size([4096, 12544]))
2023-03-14 22:18:07,392 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.40570, (torch.Size([51, 4096]))
2023-03-14 22:18:07,392 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.35805, (torch.Size([4096, 4096]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.22509, (torch.Size([256, 128, 3, 3]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.22085, (torch.Size([512, 1024]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.20052, (torch.Size([4096, 1024]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.19114, (torch.Size([256, 1024, 3, 3]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.14453, (torch.Size([2560, 512]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.13006, (torch.Size([2048, 4808]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.12936, (torch.Size([2048, 4808]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.09931, (torch.Size([128, 2, 7, 7]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.04577, (torch.Size([512, 1024]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.04301, (torch.Size([151]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.03311, (torch.Size([2048, 4424]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.03156, (torch.Size([512]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.03088, (torch.Size([2048, 4424]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.02499, (torch.Size([51]))
2023-03-14 22:18:07,393 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.02489, (torch.Size([3072]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01941, (torch.Size([128]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.01742, (torch.Size([22801, 51]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.01642, (torch.Size([4096]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.01584, (torch.Size([2048, 512]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.01509, (torch.Size([128, 32]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.01425, (torch.Size([2048, 512]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01305, (torch.Size([32, 9]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01109, (torch.Size([4096]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.00917, (torch.Size([1024, 512]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00588, (torch.Size([4096]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00572, (torch.Size([512]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00572, (torch.Size([2560]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00566, (torch.Size([151, 200]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00495, (torch.Size([128]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00493, (torch.Size([4096]))
2023-03-14 22:18:07,394 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00437, (torch.Size([152, 200]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00424, (torch.Size([2048, 512]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00416, (torch.Size([2048, 512]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00356, (torch.Size([256]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00356, (torch.Size([256]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00326, (torch.Size([256]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00322, (torch.Size([2048]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00322, (torch.Size([2048]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00318, (torch.Size([1024]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00309, (torch.Size([2048]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00309, (torch.Size([2048]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00283, (torch.Size([128]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00235, (torch.Size([4096]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00185, (torch.Size([128]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00184, (torch.Size([256]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00181, (torch.Size([32]))
2023-03-14 22:18:07,395 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00145, (torch.Size([32]))
2023-03-14 22:18:07,396 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00112, (torch.Size([151, 200]))
2023-03-14 22:18:07,396 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00085, (torch.Size([2048]))
2023-03-14 22:18:07,396 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00085, (torch.Size([2048]))
2023-03-14 22:18:07,396 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00078, (torch.Size([2048]))
2023-03-14 22:18:07,396 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00078, (torch.Size([2048]))
2023-03-14 22:18:07,396 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-14 22:18:07,396 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 22:18:07,399 maskrcnn_benchmark INFO: eta: 15:48:12  iter: 34000  loss: 0.5775 (0.6348)  loss_rel: 0.1713 (0.1862)  loss_refine_obj: 0.4828 (0.5735)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7571 (1.2368)  data: 0.0066 (0.4743)  energy lr: 0.001000  base lr : 0.001000  max mem: 9228
2023-03-14 22:18:07,401 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0034000.pth
2023-03-14 22:18:43,340 maskrcnn_benchmark INFO: Start validating
2023-03-14 22:18:43,401 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-14 22:32:51,642 maskrcnn_benchmark INFO: Total run time: 0:14:08.240634 (0.169648126745224 s / img per device, on 1 devices)
2023-03-14 22:32:51,643 maskrcnn_benchmark INFO: Model inference time: 0:13:12.336702 (0.15846734042167662 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=23.92s).
Accumulating evaluation results...
DONE (t=5.39s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.150
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.287
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.140
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.063
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.110
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.190
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.222
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.321
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.162
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.270
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.355
2023-03-14 22:36:44,185 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2871
====================================================================================================
SGG eval:   R @ 20: 0.2404;   R @ 50: 0.3063;   R @ 100: 0.3403;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2503; ngR @ 50: 0.3380; ngR @ 100: 0.3939;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0063;  zR @ 50: 0.0106;  zR @ 100: 0.0292;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0075;  zR @ 50: 0.0255;  zR @ 100: 0.0395;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0092;  zR @ 50: 0.0385;  zR @ 100: 0.0623;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0193;  zR @ 50: 0.0279;  zR @ 100: 0.0408;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0300;  zR @ 50: 0.0475;  zR @ 100: 0.0716;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0359;  zR @ 50: 0.0748;  zR @ 100: 0.1013;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0296;  zR @ 50: 0.0502;  zR @ 100: 0.0830;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0303;  zR @ 50: 0.0444;  zR @ 100: 0.0631;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0504;  zR @ 50: 0.1007;  zR @ 100: 0.1058;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0486;  zR @ 50: 0.0689;  zR @ 100: 0.1041;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0372;  zR @ 50: 0.0517;  zR @ 100: 0.0901;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0542;  zR @ 50: 0.0917;  zR @ 100: 0.1060;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0390;  zR @ 100: 0.0390;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.2060;  zR @ 50: 0.2932;  zR @ 100: 0.3223;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.1458;  zR @ 50: 0.1756;  zR @ 100: 0.1964;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.2628;  zR @ 100: 0.3205;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.3333;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0530;  mR @ 50: 0.0705;  mR @ 100: 0.0819;  for mode=sgdet, type=Mean Recall.
(above:0.0301) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.1086) (attached to:0.0000) (behind:0.1869) (belonging to:0.0000) (between:0.0000) (carrying:0.2018) (covered in:0.1429) (covering:0.0000) (eating:0.2619) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4155) (holding:0.2624) (in:0.1516) (in front of:0.1356) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2079) (of:0.2137) (on:0.4428) (on back of:0.0000) (over:0.0366) (painted on:0.0000) (parked on:0.0130) (part of:0.0000) (playing:0.0000) (riding:0.2634) (says:0.0000) (sitting on:0.1169) (standing on:0.0043) (to:0.0000) (under:0.0612) (using:0.0769) (walking in:0.0000) (walking on:0.1141) (watching:0.0392) (wearing:0.5861) (wears:0.0000) (with:0.0230) 
====================================================================================================

2023-03-14 22:36:44,924 maskrcnn_benchmark INFO: Validation Result: 0.3403
2023-03-14 22:39:17,727 maskrcnn_benchmark INFO: eta: 16:48:05  iter: 34200  loss: 0.6056 (0.6344)  loss_rel: 0.1475 (0.1861)  loss_refine_obj: 0.5650 (0.5733)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7711 (1.3206)  data: 0.0064 (0.5582)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 22:41:51,144 maskrcnn_benchmark INFO: eta: 16:36:53  iter: 34400  loss: 0.6646 (0.6342)  loss_rel: 0.1836 (0.1862)  loss_refine_obj: 0.5382 (0.5730)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7662 (1.3117)  data: 0.0068 (0.5494)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 22:44:24,600 maskrcnn_benchmark INFO: eta: 16:25:59  iter: 34600  loss: 0.6190 (0.6339)  loss_rel: 0.1569 (0.1860)  loss_refine_obj: 0.5472 (0.5729)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7666 (1.3031)  data: 0.0069 (0.5407)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 22:46:58,670 maskrcnn_benchmark INFO: eta: 16:15:22  iter: 34800  loss: 0.5956 (0.6340)  loss_rel: 0.1182 (0.1860)  loss_refine_obj: 0.5746 (0.5729)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7757 (1.2947)  data: 0.0067 (0.5324)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 22:49:32,345 maskrcnn_benchmark INFO: eta: 16:04:58  iter: 35000  loss: 0.6618 (0.6337)  loss_rel: 0.2093 (0.1859)  loss_refine_obj: 0.6256 (0.5727)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7715 (1.2866)  data: 0.0061 (0.5243)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 22:52:06,561 maskrcnn_benchmark INFO: eta: 15:54:51  iter: 35200  loss: 0.6837 (0.6338)  loss_rel: 0.1810 (0.1860)  loss_refine_obj: 0.5726 (0.5728)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7648 (1.2788)  data: 0.0069 (0.5165)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 22:54:40,462 maskrcnn_benchmark INFO: eta: 15:44:56  iter: 35400  loss: 0.6544 (0.6339)  loss_rel: 0.1589 (0.1861)  loss_refine_obj: 0.5791 (0.5728)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7708 (1.2712)  data: 0.0069 (0.5089)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 22:57:13,878 maskrcnn_benchmark INFO: eta: 15:35:13  iter: 35600  loss: 0.5787 (0.6337)  loss_rel: 0.1799 (0.1859)  loss_refine_obj: 0.5130 (0.5727)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7647 (1.2638)  data: 0.0066 (0.5015)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 22:59:47,747 maskrcnn_benchmark INFO: eta: 15:25:43  iter: 35800  loss: 0.5761 (0.6335)  loss_rel: 0.1493 (0.1859)  loss_refine_obj: 0.5476 (0.5725)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7622 (1.2566)  data: 0.0064 (0.4943)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:02:20,884 maskrcnn_benchmark INFO: ---Total norm 0.04237 clip coef 118.00716-----------------
2023-03-14 23:02:20,889 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.01993, (torch.Size([512, 1024]))
2023-03-14 23:02:20,889 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.01987, (torch.Size([512, 1024]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.01614, (torch.Size([1, 512]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.01330, (torch.Size([1]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.01073, (torch.Size([1]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.01008, (torch.Size([1536]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00922, (torch.Size([1, 512]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00851, (torch.Size([512, 279]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00838, (torch.Size([1536, 512]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00507, (torch.Size([1536]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00478, (torch.Size([512]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00418, (torch.Size([1536, 512]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00409, (torch.Size([512, 4096]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00199, (torch.Size([1536, 512]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00198, (torch.Size([512]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00192, (torch.Size([512]))
2023-03-14 23:02:20,890 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00185, (torch.Size([512]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00184, (torch.Size([512]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00178, (torch.Size([512]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00167, (torch.Size([1, 512]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00135, (torch.Size([512, 512]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00123, (torch.Size([512, 512]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00119, (torch.Size([1]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00116, (torch.Size([1536, 512]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00110, (torch.Size([1536, 512]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00090, (torch.Size([128, 32]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00088, (torch.Size([512, 512]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00087, (torch.Size([512, 51]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00086, (torch.Size([512]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00081, (torch.Size([512, 512]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00080, (torch.Size([512, 1024, 1, 1]))
2023-03-14 23:02:20,891 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00074, (torch.Size([512]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00072, (torch.Size([512, 512, 1, 1]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00069, (torch.Size([1536]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00068, (torch.Size([512]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00047, (torch.Size([32, 9]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00047, (torch.Size([512]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00035, (torch.Size([1536]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00032, (torch.Size([128]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00031, (torch.Size([1536, 512]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00029, (torch.Size([512]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00027, (torch.Size([512]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00018, (torch.Size([32]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00017, (torch.Size([1]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00015, (torch.Size([512, 512]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00012, (torch.Size([512, 512]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00012, (torch.Size([512]))
2023-03-14 23:02:20,892 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00011, (torch.Size([1, 512]))
2023-03-14 23:02:20,893 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00010, (torch.Size([512]))
2023-03-14 23:02:20,893 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00008, (torch.Size([32]))
2023-03-14 23:02:20,893 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00005, (torch.Size([512, 512]))
2023-03-14 23:02:20,893 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-14 23:02:20,893 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 23:02:20,895 maskrcnn_benchmark INFO: ---Total norm 3.94451 clip coef 1.26758-----------------
2023-03-14 23:02:20,899 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.56134, (torch.Size([4096, 12544]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 1.96083, (torch.Size([4096, 4096]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.51259, (torch.Size([3072, 5136]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.37948, (torch.Size([151, 512]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.53319, (torch.Size([4096, 12544]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.48002, (torch.Size([51, 4096]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.37531, (torch.Size([4096, 4096]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.28838, (torch.Size([512, 1024]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.25791, (torch.Size([4096, 1024]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.20135, (torch.Size([256, 1024, 3, 3]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.16618, (torch.Size([2048, 4808]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.16199, (torch.Size([2048, 4808]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.15092, (torch.Size([256, 128, 3, 3]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.14669, (torch.Size([2560, 512]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.06441, (torch.Size([128, 2, 7, 7]))
2023-03-14 23:02:20,900 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.05258, (torch.Size([512, 1024]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.04975, (torch.Size([151]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.04732, (torch.Size([512]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.03784, (torch.Size([2048, 4424]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.03771, (torch.Size([2048, 4424]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.03227, (torch.Size([51]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.02890, (torch.Size([3072]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.01936, (torch.Size([2048, 512]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.01890, (torch.Size([2048, 512]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.01757, (torch.Size([4096]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.01557, (torch.Size([22801, 51]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.01548, (torch.Size([128, 32]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01379, (torch.Size([32, 9]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01293, (torch.Size([128]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01285, (torch.Size([4096]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01188, (torch.Size([1024, 512]))
2023-03-14 23:02:20,901 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00825, (torch.Size([4096]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00698, (torch.Size([256]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00633, (torch.Size([512]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00629, (torch.Size([151, 200]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00578, (torch.Size([4096]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00560, (torch.Size([2560]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00502, (torch.Size([1024]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00444, (torch.Size([2048]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00444, (torch.Size([2048]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00443, (torch.Size([2048, 512]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00441, (torch.Size([2048]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00441, (torch.Size([2048]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00436, (torch.Size([2048, 512]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00366, (torch.Size([128]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00339, (torch.Size([152, 200]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00301, (torch.Size([256]))
2023-03-14 23:02:20,902 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00285, (torch.Size([128]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00246, (torch.Size([4096]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00241, (torch.Size([256]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00219, (torch.Size([32]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00206, (torch.Size([256]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00149, (torch.Size([32]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00136, (torch.Size([128]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00133, (torch.Size([151, 200]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00088, (torch.Size([2048]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00088, (torch.Size([2048]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00081, (torch.Size([2048]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00081, (torch.Size([2048]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-14 23:02:20,903 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 23:02:20,906 maskrcnn_benchmark INFO: eta: 15:16:24  iter: 36000  loss: 0.6891 (0.6339)  loss_rel: 0.1764 (0.1861)  loss_refine_obj: 0.6005 (0.5727)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7642 (1.2496)  data: 0.0065 (0.4873)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:02:20,908 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0036000.pth
2023-03-14 23:02:53,856 maskrcnn_benchmark INFO: Start validating
2023-03-14 23:02:53,920 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-14 23:17:01,356 maskrcnn_benchmark INFO: Total run time: 0:14:07.436503 (0.16948730053901673 s / img per device, on 1 devices)
2023-03-14 23:17:01,357 maskrcnn_benchmark INFO: Model inference time: 0:13:09.970708 (0.1579941415309906 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.27s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=24.09s).
Accumulating evaluation results...
DONE (t=5.39s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.150
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.287
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.140
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.064
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.111
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.188
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.222
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.321
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.324
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.162
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.270
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.355
2023-03-14 23:20:54,217 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2872
====================================================================================================
SGG eval:   R @ 20: 0.2416;   R @ 50: 0.3091;   R @ 100: 0.3455;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2503; ngR @ 50: 0.3372; ngR @ 100: 0.3961;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0044;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0095;  zR @ 50: 0.0229;  zR @ 100: 0.0409;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0135;  zR @ 50: 0.0325;  zR @ 100: 0.0516;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0110;  zR @ 50: 0.0385;  zR @ 100: 0.0696;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0279;  zR @ 100: 0.0451;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0365;  zR @ 50: 0.0453;  zR @ 100: 0.0673;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0615;  zR @ 50: 0.0786;  zR @ 100: 0.1081;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0306;  zR @ 50: 0.0491;  zR @ 100: 0.0796;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0313;  zR @ 50: 0.0384;  zR @ 100: 0.0798;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0576;  zR @ 50: 0.1043;  zR @ 100: 0.1129;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0284;  zR @ 50: 0.0554;  zR @ 100: 0.0973;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0266;  zR @ 50: 0.0505;  zR @ 100: 0.0783;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0506;  zR @ 50: 0.1030;  zR @ 100: 0.1262;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0260;  zR @ 100: 0.0390;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.1827;  zR @ 50: 0.2816;  zR @ 100: 0.3106;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.1042;  zR @ 50: 0.1458;  zR @ 100: 0.1964;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.1859;  zR @ 100: 0.2051;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.0000;  zR @ 50: 0.3333;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0544;  mR @ 50: 0.0731;  mR @ 100: 0.0862;  for mode=sgdet, type=Mean Recall.
(above:0.0516) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.0670) (attached to:0.0000) (behind:0.1852) (belonging to:0.0000) (between:0.0000) (carrying:0.3465) (covered in:0.1429) (covering:0.0000) (eating:0.2143) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4042) (holding:0.2219) (in:0.1517) (in front of:0.0554) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2655) (of:0.2100) (on:0.4458) (on back of:0.0000) (over:0.0427) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.2902) (says:0.0000) (sitting on:0.1051) (standing on:0.0239) (to:0.0000) (under:0.0765) (using:0.1538) (walking in:0.0000) (walking on:0.1815) (watching:0.0686) (wearing:0.5860) (wears:0.0000) (with:0.0221) 
====================================================================================================

2023-03-14 23:20:54,942 maskrcnn_benchmark INFO: Validation Result: 0.3456
2023-03-14 23:23:27,500 maskrcnn_benchmark INFO: eta: 16:04:30  iter: 36200  loss: 0.6328 (0.6339)  loss_rel: 0.1836 (0.1862)  loss_refine_obj: 0.5772 (0.5727)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7648 (1.3212)  data: 0.0068 (0.5590)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:26:01,356 maskrcnn_benchmark INFO: eta: 15:54:31  iter: 36400  loss: 0.5680 (0.6341)  loss_rel: 0.1794 (0.1862)  loss_refine_obj: 0.5187 (0.5729)  ML Loss (cd): -0.1250 (-0.1249)  time: 0.7646 (1.3136)  data: 0.0070 (0.5514)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:28:33,716 maskrcnn_benchmark INFO: eta: 15:44:40  iter: 36600  loss: 0.5365 (0.6338)  loss_rel: 0.1891 (0.1861)  loss_refine_obj: 0.4766 (0.5727)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7569 (1.3060)  data: 0.0068 (0.5439)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:31:07,418 maskrcnn_benchmark INFO: eta: 15:35:05  iter: 36800  loss: 0.5729 (0.6337)  loss_rel: 0.1601 (0.1861)  loss_refine_obj: 0.5512 (0.5726)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7641 (1.2987)  data: 0.0065 (0.5366)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:33:40,755 maskrcnn_benchmark INFO: eta: 15:25:40  iter: 37000  loss: 0.5483 (0.6334)  loss_rel: 0.1625 (0.1860)  loss_refine_obj: 0.5327 (0.5723)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7626 (1.2917)  data: 0.0064 (0.5296)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:36:13,851 maskrcnn_benchmark INFO: eta: 15:16:26  iter: 37200  loss: 0.5760 (0.6331)  loss_rel: 0.1792 (0.1860)  loss_refine_obj: 0.5052 (0.5720)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7615 (1.2847)  data: 0.0071 (0.5227)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:38:47,556 maskrcnn_benchmark INFO: eta: 15:07:23  iter: 37400  loss: 0.6255 (0.6329)  loss_rel: 0.1772 (0.1859)  loss_refine_obj: 0.5767 (0.5719)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7701 (1.2780)  data: 0.0072 (0.5160)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:41:21,180 maskrcnn_benchmark INFO: eta: 14:58:31  iter: 37600  loss: 0.5921 (0.6327)  loss_rel: 0.1881 (0.1858)  loss_refine_obj: 0.5434 (0.5719)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7655 (1.2715)  data: 0.0070 (0.5095)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:43:54,774 maskrcnn_benchmark INFO: eta: 14:49:47  iter: 37800  loss: 0.5818 (0.6326)  loss_rel: 0.1588 (0.1856)  loss_refine_obj: 0.5944 (0.5719)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7651 (1.2651)  data: 0.0071 (0.5031)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:46:28,204 maskrcnn_benchmark INFO: ---Total norm 0.01906 clip coef 262.27835-----------------
2023-03-14 23:46:28,209 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.00902, (torch.Size([512, 1024]))
2023-03-14 23:46:28,209 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.00902, (torch.Size([512, 1024]))
2023-03-14 23:46:28,209 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00752, (torch.Size([1]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00749, (torch.Size([1, 512]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00388, (torch.Size([1536]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00351, (torch.Size([1]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00299, (torch.Size([1, 512]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00291, (torch.Size([512, 279]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00286, (torch.Size([1536, 512]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00257, (torch.Size([512]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00232, (torch.Size([1536, 512]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00229, (torch.Size([1536, 512]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00195, (torch.Size([1536]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00136, (torch.Size([1536, 512]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00128, (torch.Size([512, 512]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00113, (torch.Size([512, 4096]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00107, (torch.Size([512, 512]))
2023-03-14 23:46:28,210 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00104, (torch.Size([512]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00103, (torch.Size([512]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00103, (torch.Size([512, 51]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00093, (torch.Size([512]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00079, (torch.Size([512, 1024, 1, 1]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00076, (torch.Size([512]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00076, (torch.Size([512, 512, 1, 1]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00067, (torch.Size([512]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00064, (torch.Size([512]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00058, (torch.Size([512]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00047, (torch.Size([512, 512]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00038, (torch.Size([128, 32]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00034, (torch.Size([512, 512]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00034, (torch.Size([512]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00030, (torch.Size([1, 512]))
2023-03-14 23:46:28,211 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00030, (torch.Size([1536, 512]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00028, (torch.Size([1]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00024, (torch.Size([512]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00022, (torch.Size([512]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00021, (torch.Size([32, 9]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00018, (torch.Size([1536]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00017, (torch.Size([1]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00016, (torch.Size([1, 512]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00015, (torch.Size([512, 512]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00014, (torch.Size([128]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00009, (torch.Size([1536]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00008, (torch.Size([1536, 512]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00007, (torch.Size([32]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00007, (torch.Size([512]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00005, (torch.Size([32]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00003, (torch.Size([512]))
2023-03-14 23:46:28,212 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00003, (torch.Size([512, 512]))
2023-03-14 23:46:28,213 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00003, (torch.Size([512]))
2023-03-14 23:46:28,213 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00001, (torch.Size([512, 512]))
2023-03-14 23:46:28,213 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-14 23:46:28,213 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 23:46:28,215 maskrcnn_benchmark INFO: ---Total norm 3.52833 clip coef 1.41710-----------------
2023-03-14 23:46:28,219 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.22175, (torch.Size([4096, 12544]))
2023-03-14 23:46:28,219 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 1.65805, (torch.Size([4096, 4096]))
2023-03-14 23:46:28,219 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.32464, (torch.Size([3072, 5136]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.30232, (torch.Size([151, 512]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.73301, (torch.Size([4096, 12544]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.46260, (torch.Size([4096, 4096]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.39909, (torch.Size([51, 4096]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.28157, (torch.Size([512, 1024]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.27081, (torch.Size([256, 1024, 3, 3]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.26364, (torch.Size([4096, 1024]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.23454, (torch.Size([256, 128, 3, 3]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.19946, (torch.Size([2048, 4808]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.18624, (torch.Size([2048, 4808]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.16194, (torch.Size([2560, 512]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.10580, (torch.Size([128, 2, 7, 7]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.05627, (torch.Size([512, 1024]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.04236, (torch.Size([2048, 4424]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.04106, (torch.Size([2048, 4424]))
2023-03-14 23:46:28,220 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.03964, (torch.Size([151]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.03385, (torch.Size([512]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.02523, (torch.Size([3072]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.02459, (torch.Size([2048, 512]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.02176, (torch.Size([22801, 51]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.02175, (torch.Size([2048, 512]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.01874, (torch.Size([51]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01671, (torch.Size([128]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.01472, (torch.Size([4096]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.01419, (torch.Size([128, 32]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01227, (torch.Size([32, 9]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01187, (torch.Size([1024, 512]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01076, (torch.Size([4096]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00703, (torch.Size([4096]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00631, (torch.Size([2560]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00597, (torch.Size([256]))
2023-03-14 23:46:28,221 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00574, (torch.Size([512]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00554, (torch.Size([2048, 512]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00549, (torch.Size([4096]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00546, (torch.Size([2048, 512]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00528, (torch.Size([151, 200]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00485, (torch.Size([128]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00467, (torch.Size([2048]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00467, (torch.Size([2048]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00426, (torch.Size([2048]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00426, (torch.Size([2048]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00363, (torch.Size([152, 200]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00360, (torch.Size([256]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00343, (torch.Size([1024]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00322, (torch.Size([4096]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00285, (torch.Size([256]))
2023-03-14 23:46:28,222 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00283, (torch.Size([256]))
2023-03-14 23:46:28,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00222, (torch.Size([128]))
2023-03-14 23:46:28,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00180, (torch.Size([151, 200]))
2023-03-14 23:46:28,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00173, (torch.Size([32]))
2023-03-14 23:46:28,223 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00170, (torch.Size([128]))
2023-03-14 23:46:28,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00169, (torch.Size([32]))
2023-03-14 23:46:28,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00093, (torch.Size([2048]))
2023-03-14 23:46:28,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00093, (torch.Size([2048]))
2023-03-14 23:46:28,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00091, (torch.Size([2048]))
2023-03-14 23:46:28,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00091, (torch.Size([2048]))
2023-03-14 23:46:28,223 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-14 23:46:28,223 maskrcnn_benchmark INFO: -------------------------------
2023-03-14 23:46:28,226 maskrcnn_benchmark INFO: eta: 14:41:13  iter: 38000  loss: 0.5682 (0.6323)  loss_rel: 0.1527 (0.1856)  loss_refine_obj: 0.5179 (0.5717)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7672 (1.2589)  data: 0.0072 (0.4969)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-14 23:46:28,228 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0038000.pth
2023-03-14 23:46:56,252 maskrcnn_benchmark INFO: Start validating
2023-03-14 23:46:56,315 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-15 00:01:06,155 maskrcnn_benchmark INFO: Total run time: 0:14:09.840302 (0.16996806049346924 s / img per device, on 1 devices)
2023-03-15 00:01:06,156 maskrcnn_benchmark INFO: Model inference time: 0:13:12.419723 (0.15848394455909728 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.11s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=23.94s).
Accumulating evaluation results...
DONE (t=5.40s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.150
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.288
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.140
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.065
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.110
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.188
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.222
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.320
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.165
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.268
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.354
2023-03-15 00:04:58,731 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2882
====================================================================================================
SGG eval:   R @ 20: 0.2443;   R @ 50: 0.3118;   R @ 100: 0.3457;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2542; ngR @ 50: 0.3390; ngR @ 100: 0.3985;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0044;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0085;  zR @ 50: 0.0180;  zR @ 100: 0.0406;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0165;  zR @ 50: 0.0280;  zR @ 100: 0.0435;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0110;  zR @ 50: 0.0421;  zR @ 100: 0.0604;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0279;  zR @ 100: 0.0451;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0256;  zR @ 50: 0.0629;  zR @ 100: 0.0804;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0564;  zR @ 50: 0.0748;  zR @ 100: 0.0799;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0228;  zR @ 50: 0.0435;  zR @ 100: 0.0978;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0303;  zR @ 50: 0.0369;  zR @ 100: 0.0677;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0360;  zR @ 50: 0.1115;  zR @ 100: 0.1201;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0216;  zR @ 50: 0.0622;  zR @ 100: 0.0872;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0213;  zR @ 50: 0.0718;  zR @ 100: 0.0943;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0488;  zR @ 50: 0.0935;  zR @ 100: 0.1202;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0260;  zR @ 100: 0.0390;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.2060;  zR @ 50: 0.3048;  zR @ 100: 0.3281;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.1042;  zR @ 50: 0.1875;  zR @ 100: 0.1964;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.1859;  zR @ 100: 0.2436;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.3333;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0510;  mR @ 50: 0.0722;  mR @ 100: 0.0846;  for mode=sgdet, type=Mean Recall.
(above:0.0393) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.1879) (attached to:0.0000) (behind:0.1802) (belonging to:0.0000) (between:0.0000) (carrying:0.2018) (covered in:0.1429) (covering:0.0000) (eating:0.3571) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4133) (holding:0.2688) (in:0.1538) (in front of:0.1185) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2309) (of:0.2169) (on:0.4489) (on back of:0.0000) (over:0.0366) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.1860) (says:0.0000) (sitting on:0.1091) (standing on:0.0054) (to:0.0000) (under:0.0714) (using:0.0000) (walking in:0.0000) (walking on:0.1845) (watching:0.0686) (wearing:0.5888) (wears:0.0000) (with:0.0216) 
====================================================================================================

2023-03-15 00:04:59,462 maskrcnn_benchmark INFO: Validation Result: 0.3457
2023-03-15 00:07:32,183 maskrcnn_benchmark INFO: eta: 15:20:33  iter: 38200  loss: 0.5872 (0.6323)  loss_rel: 0.1429 (0.1855)  loss_refine_obj: 0.5581 (0.5717)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7614 (1.3214)  data: 0.0071 (0.5595)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-15 00:10:05,945 maskrcnn_benchmark INFO: eta: 15:11:28  iter: 38400  loss: 0.6209 (0.6321)  loss_rel: 0.1875 (0.1855)  loss_refine_obj: 0.5168 (0.5715)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7706 (1.3146)  data: 0.0072 (0.5527)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-15 00:12:39,484 maskrcnn_benchmark INFO: eta: 15:02:32  iter: 38600  loss: 0.5489 (0.6319)  loss_rel: 0.1640 (0.1855)  loss_refine_obj: 0.5046 (0.5714)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7641 (1.3080)  data: 0.0072 (0.5462)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-15 00:15:13,293 maskrcnn_benchmark INFO: eta: 14:53:46  iter: 38800  loss: 0.6078 (0.6319)  loss_rel: 0.1780 (0.1855)  loss_refine_obj: 0.5710 (0.5714)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7728 (1.3016)  data: 0.0072 (0.5397)  energy lr: 0.001000  base lr : 0.001000  max mem: 9409
2023-03-15 00:17:47,111 maskrcnn_benchmark INFO: eta: 14:45:09  iter: 39000  loss: 0.5823 (0.6318)  loss_rel: 0.1975 (0.1854)  loss_refine_obj: 0.5278 (0.5713)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7685 (1.2954)  data: 0.0071 (0.5335)  energy lr: 0.001000  base lr : 0.001000  max mem: 9674
2023-03-15 00:20:20,758 maskrcnn_benchmark INFO: eta: 14:36:40  iter: 39200  loss: 0.5709 (0.6315)  loss_rel: 0.1645 (0.1853)  loss_refine_obj: 0.5381 (0.5712)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7659 (1.2892)  data: 0.0069 (0.5274)  energy lr: 0.001000  base lr : 0.001000  max mem: 9674
2023-03-15 00:22:54,908 maskrcnn_benchmark INFO: eta: 14:28:20  iter: 39400  loss: 0.6776 (0.6316)  loss_rel: 0.1469 (0.1853)  loss_refine_obj: 0.6132 (0.5712)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7688 (1.2833)  data: 0.0072 (0.5214)  energy lr: 0.001000  base lr : 0.001000  max mem: 9674
2023-03-15 00:25:28,651 maskrcnn_benchmark INFO: eta: 14:20:07  iter: 39600  loss: 0.6033 (0.6312)  loss_rel: 0.1611 (0.1852)  loss_refine_obj: 0.5465 (0.5710)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7636 (1.2774)  data: 0.0074 (0.5155)  energy lr: 0.001000  base lr : 0.001000  max mem: 9674
2023-03-15 00:28:02,456 maskrcnn_benchmark INFO: eta: 14:12:02  iter: 39800  loss: 0.6080 (0.6311)  loss_rel: 0.1790 (0.1853)  loss_refine_obj: 0.5891 (0.5708)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7645 (1.2717)  data: 0.0071 (0.5098)  energy lr: 0.001000  base lr : 0.001000  max mem: 9674
2023-03-15 00:30:36,328 maskrcnn_benchmark INFO: ---Total norm 0.00725 clip coef 689.55267-----------------
2023-03-15 00:30:36,332 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.00332, (torch.Size([512, 1024]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.00326, (torch.Size([512, 1024]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00284, (torch.Size([1]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00281, (torch.Size([1, 512]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00149, (torch.Size([512, 279]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00137, (torch.Size([512, 4096]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00136, (torch.Size([1536, 512]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00131, (torch.Size([1536]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00119, (torch.Size([1, 512]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00118, (torch.Size([1]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00102, (torch.Size([512]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00070, (torch.Size([1536, 512]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00066, (torch.Size([1536]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00063, (torch.Size([512, 512]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00063, (torch.Size([1536, 512]))
2023-03-15 00:30:36,333 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00043, (torch.Size([512]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00041, (torch.Size([1536, 512]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00037, (torch.Size([512]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00037, (torch.Size([512, 512]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00036, (torch.Size([1536, 512]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00035, (torch.Size([512, 1024, 1, 1]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00031, (torch.Size([512, 512]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00030, (torch.Size([1, 512]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00029, (torch.Size([512]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00029, (torch.Size([128, 32]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00028, (torch.Size([512, 51]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00028, (torch.Size([512, 512, 1, 1]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00026, (torch.Size([512]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00024, (torch.Size([512]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00023, (torch.Size([512]))
2023-03-15 00:30:36,334 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00018, (torch.Size([1536]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00017, (torch.Size([32, 9]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00016, (torch.Size([512]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00015, (torch.Size([1]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00011, (torch.Size([512, 512]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00011, (torch.Size([512]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00009, (torch.Size([1536]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00009, (torch.Size([512]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00008, (torch.Size([1536, 512]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00008, (torch.Size([512]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00007, (torch.Size([512]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00005, (torch.Size([512, 512]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00005, (torch.Size([128]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00004, (torch.Size([512, 512]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00003, (torch.Size([512]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00003, (torch.Size([32]))
2023-03-15 00:30:36,335 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00003, (torch.Size([32]))
2023-03-15 00:30:36,336 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00002, (torch.Size([512, 512]))
2023-03-15 00:30:36,336 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00002, (torch.Size([512]))
2023-03-15 00:30:36,336 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00001, (torch.Size([1, 512]))
2023-03-15 00:30:36,336 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00001, (torch.Size([1]))
2023-03-15 00:30:36,336 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-15 00:30:36,336 maskrcnn_benchmark INFO: -------------------------------
2023-03-15 00:30:36,338 maskrcnn_benchmark INFO: ---Total norm 4.78541 clip coef 1.04484-----------------
2023-03-15 00:30:36,342 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 3.08251, (torch.Size([4096, 12544]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 2.26754, (torch.Size([4096, 4096]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.91084, (torch.Size([151, 512]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.82832, (torch.Size([3072, 5136]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.69982, (torch.Size([4096, 12544]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.45049, (torch.Size([4096, 4096]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.34000, (torch.Size([512, 1024]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.30737, (torch.Size([51, 4096]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.29209, (torch.Size([4096, 1024]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.24986, (torch.Size([256, 1024, 3, 3]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.23121, (torch.Size([2048, 4808]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.22770, (torch.Size([2048, 4808]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.22532, (torch.Size([2560, 512]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.16371, (torch.Size([256, 128, 3, 3]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.07417, (torch.Size([151]))
2023-03-15 00:30:36,343 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.07383, (torch.Size([512, 1024]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.07169, (torch.Size([128, 2, 7, 7]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.05843, (torch.Size([2048, 4424]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.05024, (torch.Size([2048, 4424]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.03955, (torch.Size([3072]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.03517, (torch.Size([512]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.02775, (torch.Size([2048, 512]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.02721, (torch.Size([2048, 512]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.02384, (torch.Size([4096]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.01791, (torch.Size([22801, 51]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01732, (torch.Size([4096]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.01682, (torch.Size([128, 32]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01376, (torch.Size([32, 9]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01331, (torch.Size([1024, 512]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.01173, (torch.Size([51]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01140, (torch.Size([128]))
2023-03-15 00:30:36,344 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00933, (torch.Size([512]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00902, (torch.Size([2560]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00816, (torch.Size([151, 200]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00752, (torch.Size([2048, 512]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00637, (torch.Size([2048, 512]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00630, (torch.Size([4096]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00598, (torch.Size([4096]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00515, (torch.Size([2048]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00515, (torch.Size([2048]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00495, (torch.Size([2048]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00495, (torch.Size([2048]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00448, (torch.Size([152, 200]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00434, (torch.Size([256]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00395, (torch.Size([128]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00389, (torch.Size([128]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00379, (torch.Size([1024]))
2023-03-15 00:30:36,345 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00285, (torch.Size([256]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00280, (torch.Size([256]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00273, (torch.Size([4096]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00252, (torch.Size([32]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00232, (torch.Size([256]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00229, (torch.Size([32]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00215, (torch.Size([151, 200]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00205, (torch.Size([128]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00151, (torch.Size([2048]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00151, (torch.Size([2048]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00124, (torch.Size([2048]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00124, (torch.Size([2048]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-15 00:30:36,346 maskrcnn_benchmark INFO: -------------------------------
2023-03-15 00:30:36,349 maskrcnn_benchmark INFO: eta: 14:04:05  iter: 40000  loss: 0.6275 (0.6309)  loss_rel: 0.1953 (0.1852)  loss_refine_obj: 0.5169 (0.5706)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7672 (1.2661)  data: 0.0074 (0.5042)  energy lr: 0.001000  base lr : 0.001000  max mem: 9674
2023-03-15 00:30:36,351 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0040000.pth
2023-03-15 00:31:09,563 maskrcnn_benchmark INFO: Start validating
2023-03-15 00:31:09,630 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-15 00:45:22,653 maskrcnn_benchmark INFO: Total run time: 0:14:13.023710 (0.17060474195480346 s / img per device, on 1 devices)
2023-03-15 00:45:22,654 maskrcnn_benchmark INFO: Model inference time: 0:13:10.985855 (0.15819717106819153 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.31s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=23.68s).
Accumulating evaluation results...
DONE (t=5.39s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.149
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.286
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.139
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.065
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.109
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.189
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.221
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.320
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.162
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.270
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.355
2023-03-15 00:49:16,393 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2863
====================================================================================================
SGG eval:   R @ 20: 0.2413;   R @ 50: 0.3110;   R @ 100: 0.3456;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2486; ngR @ 50: 0.3375; ngR @ 100: 0.3948;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0044;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0106;  zR @ 50: 0.0190;  zR @ 100: 0.0409;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0075;  zR @ 50: 0.0315;  zR @ 100: 0.0435;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0147;  zR @ 50: 0.0458;  zR @ 100: 0.0531;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0365;  zR @ 100: 0.0451;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0322;  zR @ 50: 0.0497;  zR @ 100: 0.0804;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0359;  zR @ 50: 0.0705;  zR @ 100: 0.0919;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0306;  zR @ 50: 0.0546;  zR @ 100: 0.0930;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0313;  zR @ 50: 0.0424;  zR @ 100: 0.0949;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0360;  zR @ 50: 0.0899;  zR @ 100: 0.1115;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0216;  zR @ 50: 0.0622;  zR @ 100: 0.1041;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0293;  zR @ 50: 0.0665;  zR @ 100: 0.0996;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0435;  zR @ 50: 0.1024;  zR @ 100: 0.1095;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0260;  zR @ 100: 0.0390;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.2409;  zR @ 50: 0.3048;  zR @ 100: 0.3339;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.1250;  zR @ 50: 0.1875;  zR @ 100: 0.1875;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.1859;  zR @ 100: 0.2436;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.3333;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0597;  mR @ 50: 0.0827;  mR @ 100: 0.0949;  for mode=sgdet, type=Mean Recall.
(above:0.0444) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.2287) (attached to:0.0000) (behind:0.2130) (belonging to:0.0000) (between:0.0000) (carrying:0.2939) (covered in:0.1429) (covering:0.0000) (eating:0.4048) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4151) (holding:0.2544) (in:0.1451) (in front of:0.1081) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2100) (of:0.2330) (on:0.4398) (on back of:0.0000) (over:0.0488) (painted on:0.0000) (parked on:0.0079) (part of:0.0000) (playing:0.0000) (riding:0.3170) (says:0.0000) (sitting on:0.1091) (standing on:0.0326) (to:0.0000) (under:0.0791) (using:0.0769) (walking in:0.0000) (walking on:0.2418) (watching:0.0686) (wearing:0.5911) (wears:0.0000) (with:0.0384) 
====================================================================================================

2023-03-15 00:49:17,126 maskrcnn_benchmark INFO: Validation Result: 0.3456
2023-03-15 00:49:17,126 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-15 00:49:17,126 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-15 00:51:49,097 maskrcnn_benchmark INFO: eta: 14:37:01  iter: 40200  loss: 0.6208 (0.6305)  loss_rel: 0.1728 (0.1852)  loss_refine_obj: 0.5634 (0.5703)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7601 (1.3221)  data: 0.0071 (0.5604)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 00:54:22,746 maskrcnn_benchmark INFO: eta: 14:28:38  iter: 40400  loss: 0.6475 (0.6304)  loss_rel: 0.1811 (0.1851)  loss_refine_obj: 0.5914 (0.5702)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7669 (1.3161)  data: 0.0072 (0.5544)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 00:56:56,494 maskrcnn_benchmark INFO: eta: 14:20:23  iter: 40600  loss: 0.5798 (0.6300)  loss_rel: 0.1573 (0.1850)  loss_refine_obj: 0.4966 (0.5700)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7638 (1.3102)  data: 0.0076 (0.5485)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 00:59:30,339 maskrcnn_benchmark INFO: eta: 14:12:15  iter: 40800  loss: 0.5075 (0.6298)  loss_rel: 0.1586 (0.1849)  loss_refine_obj: 0.5067 (0.5699)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7592 (1.3045)  data: 0.0072 (0.5427)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:02:03,555 maskrcnn_benchmark INFO: eta: 14:04:13  iter: 41000  loss: 0.6237 (0.6296)  loss_rel: 0.1635 (0.1849)  loss_refine_obj: 0.5673 (0.5696)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7672 (1.2988)  data: 0.0069 (0.5371)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:04:37,468 maskrcnn_benchmark INFO: eta: 13:56:20  iter: 41200  loss: 0.6340 (0.6295)  loss_rel: 0.1619 (0.1848)  loss_refine_obj: 0.5510 (0.5696)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7656 (1.2933)  data: 0.0072 (0.5316)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:07:10,923 maskrcnn_benchmark INFO: eta: 13:48:32  iter: 41400  loss: 0.6039 (0.6291)  loss_rel: 0.1812 (0.1848)  loss_refine_obj: 0.5477 (0.5693)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7723 (1.2879)  data: 0.0072 (0.5261)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:09:44,573 maskrcnn_benchmark INFO: eta: 13:40:51  iter: 41600  loss: 0.5966 (0.6291)  loss_rel: 0.1834 (0.1847)  loss_refine_obj: 0.5040 (0.5694)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7590 (1.2826)  data: 0.0071 (0.5209)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:12:18,001 maskrcnn_benchmark INFO: eta: 13:33:15  iter: 41800  loss: 0.5965 (0.6290)  loss_rel: 0.1428 (0.1846)  loss_refine_obj: 0.5593 (0.5693)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7736 (1.2774)  data: 0.0073 (0.5157)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:14:51,728 maskrcnn_benchmark INFO: ---Total norm 0.02096 clip coef 238.51025-----------------
2023-03-15 01:14:51,733 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.00976, (torch.Size([512, 1024]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.00968, (torch.Size([512, 1024]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00815, (torch.Size([1, 512]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00739, (torch.Size([1]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00515, (torch.Size([1]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00483, (torch.Size([1536]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00425, (torch.Size([1, 512]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00363, (torch.Size([512, 279]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00362, (torch.Size([1536, 512]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00255, (torch.Size([512]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00243, (torch.Size([1536]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00232, (torch.Size([1536, 512]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00184, (torch.Size([512, 4096]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00165, (torch.Size([1536, 512]))
2023-03-15 01:14:51,734 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00105, (torch.Size([512, 512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00102, (torch.Size([512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00097, (torch.Size([1536, 512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00095, (torch.Size([512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00092, (torch.Size([512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00086, (torch.Size([512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00084, (torch.Size([512, 512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00084, (torch.Size([512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00077, (torch.Size([512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00076, (torch.Size([512, 512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00074, (torch.Size([512, 51]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00057, (torch.Size([1, 512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00056, (torch.Size([512, 1024, 1, 1]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00053, (torch.Size([512, 512, 1, 1]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00050, (torch.Size([1536, 512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00043, (torch.Size([512]))
2023-03-15 01:14:51,735 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00039, (torch.Size([512, 512]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00037, (torch.Size([128, 32]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00035, (torch.Size([1]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00032, (torch.Size([512]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00032, (torch.Size([1536]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00030, (torch.Size([512]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00025, (torch.Size([512]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00022, (torch.Size([32, 9]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00017, (torch.Size([128]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00016, (torch.Size([1]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00016, (torch.Size([1536]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00014, (torch.Size([1536, 512]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00012, (torch.Size([512, 512]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00011, (torch.Size([512]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00010, (torch.Size([1, 512]))
2023-03-15 01:14:51,736 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00009, (torch.Size([32]))
2023-03-15 01:14:51,737 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00005, (torch.Size([512]))
2023-03-15 01:14:51,737 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00005, (torch.Size([512, 512]))
2023-03-15 01:14:51,737 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00005, (torch.Size([512]))
2023-03-15 01:14:51,737 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00004, (torch.Size([32]))
2023-03-15 01:14:51,737 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00002, (torch.Size([512, 512]))
2023-03-15 01:14:51,737 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-15 01:14:51,737 maskrcnn_benchmark INFO: -------------------------------
2023-03-15 01:14:51,739 maskrcnn_benchmark INFO: ---Total norm 4.43895 clip coef 1.12639-----------------
2023-03-15 01:14:51,743 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.74935, (torch.Size([4096, 12544]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 2.07531, (torch.Size([4096, 4096]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.63918, (torch.Size([3072, 5136]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.58041, (torch.Size([151, 512]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.98462, (torch.Size([4096, 12544]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.79789, (torch.Size([51, 4096]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.63896, (torch.Size([4096, 4096]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.39703, (torch.Size([4096, 1024]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.39034, (torch.Size([512, 1024]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.30839, (torch.Size([256, 1024, 3, 3]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.26290, (torch.Size([256, 128, 3, 3]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.23084, (torch.Size([2048, 4808]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.21722, (torch.Size([2048, 4808]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.18029, (torch.Size([2560, 512]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.11416, (torch.Size([128, 2, 7, 7]))
2023-03-15 01:14:51,744 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.06342, (torch.Size([512, 1024]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.05167, (torch.Size([512]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.04710, (torch.Size([2048, 4424]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.04689, (torch.Size([151]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.04542, (torch.Size([2048, 4424]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.03336, (torch.Size([51]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.02938, (torch.Size([3072]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.02652, (torch.Size([2048, 512]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.02458, (torch.Size([2048, 512]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.02125, (torch.Size([22801, 51]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.01834, (torch.Size([4096]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01731, (torch.Size([1024, 512]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01614, (torch.Size([128]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.01576, (torch.Size([128, 32]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01497, (torch.Size([4096]))
2023-03-15 01:14:51,745 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01291, (torch.Size([32, 9]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.01014, (torch.Size([4096]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00922, (torch.Size([4096]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00773, (torch.Size([151, 200]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00721, (torch.Size([512]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00709, (torch.Size([2560]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00632, (torch.Size([256]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00567, (torch.Size([128]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00565, (torch.Size([1024]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00549, (torch.Size([2048, 512]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00539, (torch.Size([2048, 512]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00530, (torch.Size([2048]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00530, (torch.Size([2048]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00494, (torch.Size([2048]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00494, (torch.Size([2048]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00462, (torch.Size([256]))
2023-03-15 01:14:51,746 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00428, (torch.Size([4096]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00396, (torch.Size([152, 200]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00346, (torch.Size([256]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00313, (torch.Size([256]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00296, (torch.Size([128]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00197, (torch.Size([128]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00193, (torch.Size([32]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00188, (torch.Size([151, 200]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00183, (torch.Size([32]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00110, (torch.Size([2048]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00110, (torch.Size([2048]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00104, (torch.Size([2048]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00104, (torch.Size([2048]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-15 01:14:51,747 maskrcnn_benchmark INFO: -------------------------------
2023-03-15 01:14:51,750 maskrcnn_benchmark INFO: eta: 13:25:46  iter: 42000  loss: 0.6404 (0.6288)  loss_rel: 0.1326 (0.1847)  loss_refine_obj: 0.5716 (0.5691)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7744 (1.2723)  data: 0.0071 (0.5106)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:14:51,752 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0042000.pth
2023-03-15 01:15:24,470 maskrcnn_benchmark INFO: Start validating
2023-03-15 01:15:24,532 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-15 01:29:42,632 maskrcnn_benchmark INFO: Total run time: 0:14:18.100497 (0.171620099401474 s / img per device, on 1 devices)
2023-03-15 01:29:42,634 maskrcnn_benchmark INFO: Model inference time: 0:13:11.704600 (0.1583409200191498 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.28s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=23.37s).
Accumulating evaluation results...
DONE (t=6.18s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.150
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.288
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.140
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.064
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.109
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.189
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.222
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.320
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.162
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.270
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.354
2023-03-15 01:33:35,474 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2876
====================================================================================================
SGG eval:   R @ 20: 0.2441;   R @ 50: 0.3123;   R @ 100: 0.3465;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2518; ngR @ 50: 0.3402; ngR @ 100: 0.3980;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0106;  zR @ 50: 0.0211;  zR @ 100: 0.0419;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0150;  zR @ 50: 0.0315;  zR @ 100: 0.0495;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0073;  zR @ 50: 0.0421;  zR @ 100: 0.0641;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0322;  zR @ 100: 0.0494;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0344;  zR @ 50: 0.0497;  zR @ 100: 0.0804;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0359;  zR @ 50: 0.0692;  zR @ 100: 0.0919;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0306;  zR @ 50: 0.0491;  zR @ 100: 0.0852;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0364;  zR @ 50: 0.0404;  zR @ 100: 0.0889;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0504;  zR @ 50: 0.1115;  zR @ 100: 0.1201;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0216;  zR @ 50: 0.0622;  zR @ 100: 0.0973;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0346;  zR @ 50: 0.0665;  zR @ 100: 0.0889;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0577;  zR @ 50: 0.0952;  zR @ 100: 0.1024;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0260;  zR @ 100: 0.0390;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.2292;  zR @ 50: 0.3048;  zR @ 100: 0.3223;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.0833;  zR @ 50: 0.1667;  zR @ 100: 0.1964;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.1859;  zR @ 100: 0.2051;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.3333;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0568;  mR @ 50: 0.0791;  mR @ 100: 0.0903;  for mode=sgdet, type=Mean Recall.
(above:0.0444) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.2253) (attached to:0.0000) (behind:0.2032) (belonging to:0.0000) (between:0.0000) (carrying:0.2939) (covered in:0.0714) (covering:0.0000) (eating:0.4048) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4073) (holding:0.2527) (in:0.1493) (in front of:0.1021) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2179) (of:0.2252) (on:0.4476) (on back of:0.0000) (over:0.0488) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.2991) (says:0.0000) (sitting on:0.1091) (standing on:0.0130) (to:0.0000) (under:0.0791) (using:0.0769) (walking in:0.0000) (walking on:0.1507) (watching:0.0686) (wearing:0.5894) (wears:0.0000) (with:0.0348) 
====================================================================================================

2023-03-15 01:33:36,211 maskrcnn_benchmark INFO: Validation Result: 0.3465
2023-03-15 01:36:09,007 maskrcnn_benchmark INFO: eta: 13:53:26  iter: 42200  loss: 0.6083 (0.6287)  loss_rel: 0.1847 (0.1847)  loss_refine_obj: 0.5767 (0.5690)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7633 (1.3229)  data: 0.0071 (0.5613)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:38:42,035 maskrcnn_benchmark INFO: eta: 13:45:36  iter: 42400  loss: 0.5963 (0.6286)  loss_rel: 0.1504 (0.1846)  loss_refine_obj: 0.4896 (0.5689)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7720 (1.3175)  data: 0.0071 (0.5558)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:41:15,307 maskrcnn_benchmark INFO: eta: 13:37:52  iter: 42600  loss: 0.5764 (0.6282)  loss_rel: 0.1429 (0.1845)  loss_refine_obj: 0.4904 (0.5687)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7625 (1.3121)  data: 0.0073 (0.5505)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:43:48,931 maskrcnn_benchmark INFO: eta: 13:30:15  iter: 42800  loss: 0.5748 (0.6279)  loss_rel: 0.1711 (0.1844)  loss_refine_obj: 0.5191 (0.5685)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7679 (1.3069)  data: 0.0072 (0.5453)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:46:22,287 maskrcnn_benchmark INFO: eta: 13:22:43  iter: 43000  loss: 0.5542 (0.6277)  loss_rel: 0.1385 (0.1843)  loss_refine_obj: 0.5061 (0.5683)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7634 (1.3017)  data: 0.0074 (0.5402)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:48:55,809 maskrcnn_benchmark INFO: eta: 13:15:18  iter: 43200  loss: 0.5830 (0.6275)  loss_rel: 0.1964 (0.1843)  loss_refine_obj: 0.5126 (0.5682)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7617 (1.2967)  data: 0.0073 (0.5351)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:51:28,918 maskrcnn_benchmark INFO: eta: 13:07:57  iter: 43400  loss: 0.5780 (0.6274)  loss_rel: 0.1697 (0.1843)  loss_refine_obj: 0.5467 (0.5680)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7589 (1.2917)  data: 0.0075 (0.5302)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:54:02,743 maskrcnn_benchmark INFO: eta: 13:00:42  iter: 43600  loss: 0.6911 (0.6271)  loss_rel: 0.1599 (0.1842)  loss_refine_obj: 0.6297 (0.5678)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7717 (1.2869)  data: 0.0074 (0.5254)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:56:36,024 maskrcnn_benchmark INFO: eta: 12:53:32  iter: 43800  loss: 0.5610 (0.6269)  loss_rel: 0.1574 (0.1842)  loss_refine_obj: 0.5389 (0.5677)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7639 (1.2821)  data: 0.0072 (0.5206)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:59:09,690 maskrcnn_benchmark INFO: ---Total norm 0.01345 clip coef 371.64032-----------------
2023-03-15 01:59:09,695 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00807, (torch.Size([1]))
2023-03-15 01:59:09,695 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.00547, (torch.Size([512, 1024]))
2023-03-15 01:59:09,695 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.00532, (torch.Size([512, 1024]))
2023-03-15 01:59:09,695 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00422, (torch.Size([1, 512]))
2023-03-15 01:59:09,695 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00341, (torch.Size([512]))
2023-03-15 01:59:09,695 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00321, (torch.Size([1536]))
2023-03-15 01:59:09,695 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00175, (torch.Size([1536, 512]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00167, (torch.Size([512, 279]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00161, (torch.Size([1536]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00149, (torch.Size([512]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00125, (torch.Size([512]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00118, (torch.Size([1536, 512]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00104, (torch.Size([512, 4096]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00067, (torch.Size([1]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00066, (torch.Size([512]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00064, (torch.Size([512]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00062, (torch.Size([1, 512]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00057, (torch.Size([512]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00037, (torch.Size([1, 512]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00032, (torch.Size([512, 512]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00031, (torch.Size([1536, 512]))
2023-03-15 01:59:09,696 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00030, (torch.Size([512, 512]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00027, (torch.Size([128, 32]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00027, (torch.Size([1536, 512]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00027, (torch.Size([512, 512]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00024, (torch.Size([512]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00021, (torch.Size([512]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00019, (torch.Size([512, 512]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00019, (torch.Size([1536, 512]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00018, (torch.Size([32, 9]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00016, (torch.Size([1]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00015, (torch.Size([512, 1024, 1, 1]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00015, (torch.Size([512]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00015, (torch.Size([1, 512]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00014, (torch.Size([1]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00013, (torch.Size([512, 51]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00012, (torch.Size([512, 512, 1, 1]))
2023-03-15 01:59:09,697 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00012, (torch.Size([128]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00010, (torch.Size([1536]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00009, (torch.Size([512, 512]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00008, (torch.Size([512]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00006, (torch.Size([512]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00005, (torch.Size([32]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00005, (torch.Size([1536, 512]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00005, (torch.Size([1536]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00004, (torch.Size([512]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00003, (torch.Size([512, 512]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00003, (torch.Size([32]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00003, (torch.Size([512, 512]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00002, (torch.Size([512]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00001, (torch.Size([512]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-15 01:59:09,698 maskrcnn_benchmark INFO: -------------------------------
2023-03-15 01:59:09,701 maskrcnn_benchmark INFO: ---Total norm 4.18939 clip coef 1.19349-----------------
2023-03-15 01:59:09,705 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.57388, (torch.Size([4096, 12544]))
2023-03-15 01:59:09,705 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 2.11670, (torch.Size([4096, 4096]))
2023-03-15 01:59:09,705 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.70220, (torch.Size([151, 512]))
2023-03-15 01:59:09,705 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.62448, (torch.Size([3072, 5136]))
2023-03-15 01:59:09,705 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.56713, (torch.Size([4096, 12544]))
2023-03-15 01:59:09,705 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.36498, (torch.Size([4096, 4096]))
2023-03-15 01:59:09,705 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.35401, (torch.Size([51, 4096]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.27747, (torch.Size([512, 1024]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.26726, (torch.Size([4096, 1024]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.19253, (torch.Size([256, 1024, 3, 3]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.17582, (torch.Size([2560, 512]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.17023, (torch.Size([256, 128, 3, 3]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.16484, (torch.Size([2048, 4808]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.16430, (torch.Size([2048, 4808]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.08447, (torch.Size([128, 2, 7, 7]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.08159, (torch.Size([151]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.06315, (torch.Size([512, 1024]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.04722, (torch.Size([2048, 4424]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.04387, (torch.Size([3072]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.04349, (torch.Size([2048, 4424]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.03764, (torch.Size([512]))
2023-03-15 01:59:09,706 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.02737, (torch.Size([4096]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.02490, (torch.Size([32, 9]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.02101, (torch.Size([128, 32]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.01930, (torch.Size([2048, 512]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.01910, (torch.Size([2048, 512]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.01827, (torch.Size([51]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01706, (torch.Size([4096]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.01446, (torch.Size([22801, 51]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01306, (torch.Size([128]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01216, (torch.Size([1024, 512]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.01053, (torch.Size([512]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00822, (torch.Size([2560]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00652, (torch.Size([4096]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00636, (torch.Size([151, 200]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00610, (torch.Size([4096]))
2023-03-15 01:59:09,707 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00601, (torch.Size([2048, 512]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00600, (torch.Size([128]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00525, (torch.Size([2048, 512]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00488, (torch.Size([256]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00460, (torch.Size([152, 200]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00441, (torch.Size([32]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00413, (torch.Size([1024]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00401, (torch.Size([2048]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00401, (torch.Size([2048]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00391, (torch.Size([2048]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00391, (torch.Size([2048]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00345, (torch.Size([128]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00331, (torch.Size([32]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00252, (torch.Size([4096]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00244, (torch.Size([256]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00231, (torch.Size([256]))
2023-03-15 01:59:09,708 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00207, (torch.Size([256]))
2023-03-15 01:59:09,709 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00155, (torch.Size([128]))
2023-03-15 01:59:09,709 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00151, (torch.Size([151, 200]))
2023-03-15 01:59:09,709 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00146, (torch.Size([2048]))
2023-03-15 01:59:09,709 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00146, (torch.Size([2048]))
2023-03-15 01:59:09,709 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00133, (torch.Size([2048]))
2023-03-15 01:59:09,709 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00133, (torch.Size([2048]))
2023-03-15 01:59:09,709 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-15 01:59:09,709 maskrcnn_benchmark INFO: -------------------------------
2023-03-15 01:59:09,712 maskrcnn_benchmark INFO: eta: 12:46:27  iter: 44000  loss: 0.6396 (0.6268)  loss_rel: 0.1738 (0.1842)  loss_refine_obj: 0.6038 (0.5676)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7741 (1.2774)  data: 0.0071 (0.5159)  energy lr: 0.000050  base lr : 0.000050  max mem: 9674
2023-03-15 01:59:09,714 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0044000.pth
2023-03-15 01:59:42,672 maskrcnn_benchmark INFO: Start validating
2023-03-15 01:59:42,731 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-15 02:13:51,439 maskrcnn_benchmark INFO: Total run time: 0:14:08.708163 (0.16974163269996642 s / img per device, on 1 devices)
2023-03-15 02:13:51,441 maskrcnn_benchmark INFO: Model inference time: 0:13:12.861610 (0.15857232193946838 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.10s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=24.01s).
Accumulating evaluation results...
DONE (t=5.37s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.150
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.287
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.140
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.064
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.109
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.190
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.221
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.321
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.162
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.269
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.355
2023-03-15 02:17:46,121 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2875
====================================================================================================
SGG eval:   R @ 20: 0.2438;   R @ 50: 0.3119;   R @ 100: 0.3462;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2508; ngR @ 50: 0.3392; ngR @ 100: 0.3974;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0106;  zR @ 50: 0.0201;  zR @ 100: 0.0430;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0135;  zR @ 50: 0.0315;  zR @ 100: 0.0495;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0073;  zR @ 50: 0.0421;  zR @ 100: 0.0678;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0322;  zR @ 100: 0.0494;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0387;  zR @ 50: 0.0497;  zR @ 100: 0.0848;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0410;  zR @ 50: 0.0692;  zR @ 100: 0.0919;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0306;  zR @ 50: 0.0459;  zR @ 100: 0.0938;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0242;  zR @ 50: 0.0434;  zR @ 100: 0.0828;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0504;  zR @ 50: 0.1043;  zR @ 100: 0.1201;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0216;  zR @ 50: 0.0622;  zR @ 100: 0.0905;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0266;  zR @ 50: 0.0677;  zR @ 100: 0.1008;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0577;  zR @ 50: 0.1095;  zR @ 100: 0.1167;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0260;  zR @ 100: 0.0390;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.2176;  zR @ 50: 0.3048;  zR @ 100: 0.3223;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.0833;  zR @ 50: 0.1667;  zR @ 100: 0.1964;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.1859;  zR @ 100: 0.2051;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.6667;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0565;  mR @ 50: 0.0788;  mR @ 100: 0.0889;  for mode=sgdet, type=Mean Recall.
(above:0.0473) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.2039) (attached to:0.0000) (behind:0.2032) (belonging to:0.0000) (between:0.0000) (carrying:0.2807) (covered in:0.0714) (covering:0.0000) (eating:0.4048) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4125) (holding:0.2571) (in:0.1510) (in front of:0.1021) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2240) (of:0.2319) (on:0.4468) (on back of:0.0000) (over:0.0488) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.2932) (says:0.0000) (sitting on:0.0986) (standing on:0.0109) (to:0.0000) (under:0.0842) (using:0.0769) (walking in:0.0000) (walking on:0.1116) (watching:0.0686) (wearing:0.5884) (wears:0.0000) (with:0.0286) 
====================================================================================================

2023-03-15 02:17:46,861 maskrcnn_benchmark INFO: Validation Result: 0.3462
2023-03-15 02:17:46,862 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-15 02:17:46,862 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-15 02:20:19,569 maskrcnn_benchmark INFO: eta: 13:09:28  iter: 44200  loss: 0.5844 (0.6265)  loss_rel: 0.1693 (0.1841)  loss_refine_obj: 0.5603 (0.5674)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7615 (1.3231)  data: 0.0072 (0.5617)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 02:22:53,015 maskrcnn_benchmark INFO: eta: 13:02:06  iter: 44400  loss: 0.6354 (0.6264)  loss_rel: 0.1672 (0.1841)  loss_refine_obj: 0.5633 (0.5673)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7638 (1.3182)  data: 0.0066 (0.5567)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 02:25:26,700 maskrcnn_benchmark INFO: eta: 12:54:51  iter: 44600  loss: 0.5714 (0.6262)  loss_rel: 0.1602 (0.1841)  loss_refine_obj: 0.4904 (0.5670)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7647 (1.3133)  data: 0.0068 (0.5519)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 02:28:00,198 maskrcnn_benchmark INFO: eta: 12:47:39  iter: 44800  loss: 0.5568 (0.6261)  loss_rel: 0.1596 (0.1841)  loss_refine_obj: 0.5589 (0.5669)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7653 (1.3085)  data: 0.0068 (0.5471)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 02:30:34,005 maskrcnn_benchmark INFO: eta: 12:40:33  iter: 45000  loss: 0.5881 (0.6260)  loss_rel: 0.1634 (0.1840)  loss_refine_obj: 0.5039 (0.5670)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7661 (1.3038)  data: 0.0072 (0.5424)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 02:33:07,855 maskrcnn_benchmark INFO: eta: 12:33:32  iter: 45200  loss: 0.5338 (0.6259)  loss_rel: 0.1412 (0.1839)  loss_refine_obj: 0.5360 (0.5669)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7699 (1.2992)  data: 0.0073 (0.5378)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 02:35:41,742 maskrcnn_benchmark INFO: eta: 12:26:36  iter: 45400  loss: 0.5345 (0.6257)  loss_rel: 0.1202 (0.1839)  loss_refine_obj: 0.5535 (0.5668)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7704 (1.2947)  data: 0.0072 (0.5332)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 02:38:14,992 maskrcnn_benchmark INFO: eta: 12:19:43  iter: 45600  loss: 0.6027 (0.6254)  loss_rel: 0.1524 (0.1839)  loss_refine_obj: 0.5675 (0.5665)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7655 (1.2902)  data: 0.0074 (0.5288)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 02:40:48,499 maskrcnn_benchmark INFO: eta: 12:12:55  iter: 45800  loss: 0.5454 (0.6252)  loss_rel: 0.1546 (0.1839)  loss_refine_obj: 0.4761 (0.5663)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7583 (1.2858)  data: 0.0071 (0.5244)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 02:43:21,931 maskrcnn_benchmark INFO: ---Total norm 0.01770 clip coef 282.54565-----------------
2023-03-15 02:43:21,936 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.00840, (torch.Size([512, 1024]))
2023-03-15 02:43:21,936 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.00834, (torch.Size([512, 1024]))
2023-03-15 02:43:21,936 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.00671, (torch.Size([1, 512]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00488, (torch.Size([1]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.00469, (torch.Size([1]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00443, (torch.Size([1536]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00391, (torch.Size([1, 512]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00350, (torch.Size([512, 279]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00347, (torch.Size([1536, 512]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00223, (torch.Size([1536]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00189, (torch.Size([512, 4096]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00188, (torch.Size([512]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00179, (torch.Size([1536, 512]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00089, (torch.Size([1, 512]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00086, (torch.Size([512]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00081, (torch.Size([1]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00081, (torch.Size([512]))
2023-03-15 02:43:21,937 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00080, (torch.Size([512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00076, (torch.Size([512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00075, (torch.Size([1536, 512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00070, (torch.Size([512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00057, (torch.Size([512, 512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00056, (torch.Size([512, 512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00052, (torch.Size([1536, 512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00043, (torch.Size([1536, 512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00043, (torch.Size([1536]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00038, (torch.Size([512, 512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00035, (torch.Size([128, 32]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00035, (torch.Size([512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00035, (torch.Size([512, 512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00034, (torch.Size([512, 51]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00033, (torch.Size([512]))
2023-03-15 02:43:21,938 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00031, (torch.Size([512, 1024, 1, 1]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00030, (torch.Size([512]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00026, (torch.Size([512, 512, 1, 1]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00022, (torch.Size([32, 9]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00022, (torch.Size([1536]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00019, (torch.Size([512]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00018, (torch.Size([1536, 512]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00017, (torch.Size([512]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00014, (torch.Size([128]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00012, (torch.Size([512]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00009, (torch.Size([32]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00007, (torch.Size([512]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00007, (torch.Size([512, 512]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00006, (torch.Size([512]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00005, (torch.Size([512, 512]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00003, (torch.Size([32]))
2023-03-15 02:43:21,939 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00002, (torch.Size([1]))
2023-03-15 02:43:21,940 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00002, (torch.Size([1, 512]))
2023-03-15 02:43:21,940 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00001, (torch.Size([512, 512]))
2023-03-15 02:43:21,940 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-15 02:43:21,940 maskrcnn_benchmark INFO: -------------------------------
2023-03-15 02:43:21,942 maskrcnn_benchmark INFO: ---Total norm 4.21819 clip coef 1.18534-----------------
2023-03-15 02:43:21,946 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.38851, (torch.Size([4096, 12544]))
2023-03-15 02:43:21,946 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 2.07121, (torch.Size([4096, 4096]))
2023-03-15 02:43:21,946 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.56648, (torch.Size([151, 512]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.56202, (torch.Size([3072, 5136]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 1.07598, (torch.Size([4096, 12544]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.71629, (torch.Size([51, 4096]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.67127, (torch.Size([4096, 4096]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.39371, (torch.Size([256, 1024, 3, 3]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.39107, (torch.Size([4096, 1024]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.38419, (torch.Size([512, 1024]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.32439, (torch.Size([256, 128, 3, 3]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.24562, (torch.Size([128, 2, 7, 7]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.24361, (torch.Size([2048, 4808]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.23311, (torch.Size([2048, 4808]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.14999, (torch.Size([2560, 512]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.08071, (torch.Size([151]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.06466, (torch.Size([512, 1024]))
2023-03-15 02:43:21,947 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.04850, (torch.Size([512]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.04834, (torch.Size([2048, 4424]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.04587, (torch.Size([2048, 4424]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.04185, (torch.Size([3072]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.03301, (torch.Size([128]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.02756, (torch.Size([2048, 512]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.02673, (torch.Size([4096]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.02589, (torch.Size([2048, 512]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.02573, (torch.Size([51]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.02554, (torch.Size([22801, 51]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01852, (torch.Size([4096]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01733, (torch.Size([1024, 512]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.01494, (torch.Size([128, 32]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01262, (torch.Size([32, 9]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.01045, (torch.Size([512]))
2023-03-15 02:43:21,948 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.01031, (torch.Size([128]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00899, (torch.Size([4096]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00893, (torch.Size([4096]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00813, (torch.Size([256]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00805, (torch.Size([151, 200]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00753, (torch.Size([2560]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00580, (torch.Size([256]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00580, (torch.Size([2048, 512]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00578, (torch.Size([128]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00551, (torch.Size([2048, 512]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00541, (torch.Size([1024]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00524, (torch.Size([2048]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00524, (torch.Size([2048]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00512, (torch.Size([2048]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00512, (torch.Size([2048]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00408, (torch.Size([256]))
2023-03-15 02:43:21,949 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00401, (torch.Size([4096]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00396, (torch.Size([256]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00360, (torch.Size([32]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00323, (torch.Size([152, 200]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00308, (torch.Size([32]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00259, (torch.Size([128]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00195, (torch.Size([151, 200]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00144, (torch.Size([2048]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00144, (torch.Size([2048]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00134, (torch.Size([2048]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00134, (torch.Size([2048]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-15 02:43:21,950 maskrcnn_benchmark INFO: -------------------------------
2023-03-15 02:43:21,953 maskrcnn_benchmark INFO: eta: 12:06:10  iter: 46000  loss: 0.6072 (0.6251)  loss_rel: 0.1793 (0.1839)  loss_refine_obj: 0.5541 (0.5662)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7661 (1.2815)  data: 0.0074 (0.5201)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 02:43:21,955 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0046000.pth
2023-03-15 02:43:55,310 maskrcnn_benchmark INFO: Start validating
2023-03-15 02:43:55,370 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-15 02:58:04,172 maskrcnn_benchmark INFO: Total run time: 0:14:08.801024 (0.1697602047920227 s / img per device, on 1 devices)
2023-03-15 02:58:04,172 maskrcnn_benchmark INFO: Model inference time: 0:13:11.310431 (0.15826208629608154 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.29s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=23.46s).
Accumulating evaluation results...
DONE (t=6.18s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.150
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.288
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.141
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.064
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.109
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.190
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.221
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.321
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.162
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.269
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.355
2023-03-15 03:01:57,548 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2877
====================================================================================================
SGG eval:   R @ 20: 0.2435;   R @ 50: 0.3120;   R @ 100: 0.3462;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2510; ngR @ 50: 0.3398; ngR @ 100: 0.3970;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0106;  zR @ 50: 0.0201;  zR @ 100: 0.0430;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0135;  zR @ 50: 0.0315;  zR @ 100: 0.0495;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0073;  zR @ 50: 0.0421;  zR @ 100: 0.0678;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0322;  zR @ 100: 0.0494;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0387;  zR @ 50: 0.0497;  zR @ 100: 0.0804;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0410;  zR @ 50: 0.0705;  zR @ 100: 0.0919;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0306;  zR @ 50: 0.0459;  zR @ 100: 0.0965;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0303;  zR @ 50: 0.0434;  zR @ 100: 0.0828;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0504;  zR @ 50: 0.1043;  zR @ 100: 0.1201;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0216;  zR @ 50: 0.0622;  zR @ 100: 0.0905;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0293;  zR @ 50: 0.0677;  zR @ 100: 0.1008;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0577;  zR @ 50: 0.1095;  zR @ 100: 0.1167;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0260;  zR @ 100: 0.0390;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.2292;  zR @ 50: 0.3048;  zR @ 100: 0.3223;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.0833;  zR @ 50: 0.1667;  zR @ 100: 0.1964;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.1859;  zR @ 100: 0.2051;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.6667;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0564;  mR @ 50: 0.0789;  mR @ 100: 0.0890;  for mode=sgdet, type=Mean Recall.
(above:0.0473) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.2039) (attached to:0.0000) (behind:0.2032) (belonging to:0.0000) (between:0.0000) (carrying:0.2807) (covered in:0.0714) (covering:0.0000) (eating:0.4048) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4128) (holding:0.2571) (in:0.1510) (in front of:0.1021) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2245) (of:0.2314) (on:0.4469) (on back of:0.0000) (over:0.0488) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.2932) (says:0.0000) (sitting on:0.0986) (standing on:0.0109) (to:0.0000) (under:0.0842) (using:0.0769) (walking in:0.0000) (walking on:0.1134) (watching:0.0686) (wearing:0.5880) (wears:0.0000) (with:0.0286) 
====================================================================================================

2023-03-15 03:01:58,280 maskrcnn_benchmark INFO: Validation Result: 0.3462
2023-03-15 03:04:30,668 maskrcnn_benchmark INFO: eta: 12:25:28  iter: 46200  loss: 0.6392 (0.6251)  loss_rel: 0.1967 (0.1839)  loss_refine_obj: 0.5811 (0.5661)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7712 (1.3233)  data: 0.0073 (0.5620)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 03:07:04,165 maskrcnn_benchmark INFO: eta: 12:18:30  iter: 46400  loss: 0.6028 (0.6249)  loss_rel: 0.1585 (0.1839)  loss_refine_obj: 0.5455 (0.5660)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7628 (1.3188)  data: 0.0068 (0.5574)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 03:09:37,725 maskrcnn_benchmark INFO: eta: 12:11:37  iter: 46600  loss: 0.5419 (0.6248)  loss_rel: 0.1633 (0.1838)  loss_refine_obj: 0.5300 (0.5660)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7646 (1.3143)  data: 0.0073 (0.5530)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 03:12:11,511 maskrcnn_benchmark INFO: eta: 12:04:48  iter: 46800  loss: 0.6522 (0.6247)  loss_rel: 0.1754 (0.1837)  loss_refine_obj: 0.5801 (0.5660)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7693 (1.3099)  data: 0.0072 (0.5486)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 03:14:45,037 maskrcnn_benchmark INFO: eta: 11:58:03  iter: 47000  loss: 0.5773 (0.6246)  loss_rel: 0.1537 (0.1837)  loss_refine_obj: 0.5199 (0.5659)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7616 (1.3056)  data: 0.0068 (0.5442)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 03:17:18,307 maskrcnn_benchmark INFO: eta: 11:51:22  iter: 47200  loss: 0.6179 (0.6243)  loss_rel: 0.1541 (0.1836)  loss_refine_obj: 0.5559 (0.5657)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7636 (1.3013)  data: 0.0073 (0.5400)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 03:19:51,780 maskrcnn_benchmark INFO: eta: 11:44:44  iter: 47400  loss: 0.5583 (0.6240)  loss_rel: 0.1715 (0.1835)  loss_refine_obj: 0.5102 (0.5655)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7602 (1.2971)  data: 0.0071 (0.5358)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 03:22:25,302 maskrcnn_benchmark INFO: eta: 11:38:11  iter: 47600  loss: 0.5578 (0.6240)  loss_rel: 0.1478 (0.1835)  loss_refine_obj: 0.5183 (0.5654)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7625 (1.2929)  data: 0.0072 (0.5317)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 03:24:58,992 maskrcnn_benchmark INFO: eta: 11:31:41  iter: 47800  loss: 0.5633 (0.6239)  loss_rel: 0.1339 (0.1835)  loss_refine_obj: 0.5224 (0.5654)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7647 (1.2889)  data: 0.0072 (0.5276)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 03:27:32,893 maskrcnn_benchmark INFO: ---Total norm 0.03890 clip coef 128.53499-----------------
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.weight                   : 0.01912, (torch.Size([512, 1024]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: energy.0.weight                                   : 0.01900, (torch.Size([512, 1024]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: energy.2.weight                                   : 0.01503, (torch.Size([1, 512]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.bias                       : 0.01031, (torch.Size([1]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_ih                        : 0.00961, (torch.Size([1536]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: sg_pooler.hgate_node.0.weight                     : 0.00862, (torch.Size([1, 512]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: energy.2.bias                                     : 0.00813, (torch.Size([1]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: obj_label_embedding.weight                        : 0.00761, (torch.Size([512, 279]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_hh                      : 0.00755, (torch.Size([1536, 512]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: sg_layer.node_gate.bias_hh                        : 0.00483, (torch.Size([1536]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: sg_layer.node_gate.weight_ih                      : 0.00432, (torch.Size([1536, 512]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: energy.0.bias                                     : 0.00386, (torch.Size([512]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: obj_emdedding.weight                              : 0.00305, (torch.Size([512, 4096]))
2023-03-15 03:27:32,898 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_hh                      : 0.00270, (torch.Size([1536, 512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: obj_label_embedding.bias                          : 0.00187, (torch.Size([512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.bias                  : 0.00176, (torch.Size([512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.bias                  : 0.00171, (torch.Size([512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.2.weight                : 0.00170, (torch.Size([512, 512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: sg_layer.edge_gate.weight_ih                      : 0.00160, (torch.Size([1536, 512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: sg_pooler.poolingLayer.0.bias                     : 0.00157, (torch.Size([512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.weight                   : 0.00148, (torch.Size([512, 512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: im_pooler.poolingLayer.0.bias                     : 0.00145, (torch.Size([512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.weight                : 0.00126, (torch.Size([512, 512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: rel_label_embedding.weight                        : 0.00120, (torch.Size([512, 51]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.bias                  : 0.00118, (torch.Size([512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.weight                : 0.00100, (torch.Size([512, 1024, 1, 1]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.2.weight                : 0.00093, (torch.Size([512, 512, 1, 1]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: im_layer.node_gate.weight_hh                      : 0.00082, (torch.Size([1536, 512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.2.weight                : 0.00078, (torch.Size([512, 512]))
2023-03-15 03:27:32,899 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.weight                     : 0.00078, (torch.Size([1, 512]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: pos_embed.2.weight                                : 0.00074, (torch.Size([128, 32]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: sg_layer.edge2node_kernel.0.bias                  : 0.00067, (torch.Size([512]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: rel_label_embedding.bias                          : 0.00066, (torch.Size([512]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.bias                  : 0.00062, (torch.Size([512]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: im_layer.node_gate.bias_ih                        : 0.00060, (torch.Size([1536]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: pos_embed.0.weight                                : 0.00049, (torch.Size([32, 9]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: im_pooler.hgate_node.0.bias                       : 0.00044, (torch.Size([1]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: sg_layer.node2edge_kernel.0.bias                  : 0.00038, (torch.Size([512]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: pos_embed.2.bias                                  : 0.00032, (torch.Size([128]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: im_layer.node_gate.bias_hh                        : 0.00030, (torch.Size([1536]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: im_layer.node_gate.weight_ih                      : 0.00026, (torch.Size([1536, 512]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.bias                       : 0.00025, (torch.Size([1]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: im_layer.node_kernel.2.bias                       : 0.00024, (torch.Size([512]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: sg_layer.node2node_kernel.0.weight                : 0.00018, (torch.Size([512, 512]))
2023-03-15 03:27:32,900 maskrcnn_benchmark INFO: pos_embed.1.bias                                  : 0.00018, (torch.Size([32]))
2023-03-15 03:27:32,901 maskrcnn_benchmark INFO: sg_pooler.hgate_edge.0.weight                     : 0.00017, (torch.Size([1, 512]))
2023-03-15 03:27:32,901 maskrcnn_benchmark INFO: obj_emdedding.bias                                : 0.00010, (torch.Size([512]))
2023-03-15 03:27:32,901 maskrcnn_benchmark INFO: im_layer.node_kernel.2.weight                     : 0.00009, (torch.Size([512, 512]))
2023-03-15 03:27:32,901 maskrcnn_benchmark INFO: im_layer.node_kernel.0.bias                       : 0.00009, (torch.Size([512]))
2023-03-15 03:27:32,901 maskrcnn_benchmark INFO: pos_embed.1.weight                                : 0.00007, (torch.Size([32]))
2023-03-15 03:27:32,901 maskrcnn_benchmark INFO: im_layer.node_kernel.0.weight                     : 0.00002, (torch.Size([512, 512]))
2023-03-15 03:27:32,901 maskrcnn_benchmark INFO: pos_embed.0.bias                                  : 0.00000, (torch.Size([32]))
2023-03-15 03:27:32,901 maskrcnn_benchmark INFO: -------------------------------
2023-03-15 03:27:32,903 maskrcnn_benchmark INFO: ---Total norm 3.33920 clip coef 1.49736-----------------
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.weight: 2.05833, (torch.Size([4096, 12544]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.weight: 1.54275, (torch.Size([4096, 4096]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.weight: 1.27472, (torch.Size([151, 512]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.weight: 1.24258, (torch.Size([3072, 5136]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.weight: 0.71375, (torch.Size([4096, 12544]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.weight: 0.46183, (torch.Size([4096, 4096]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.weight  : 0.43561, (torch.Size([51, 4096]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.weight: 0.34342, (torch.Size([512, 1024]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.weight      : 0.32452, (torch.Size([4096, 1024]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.weight: 0.24305, (torch.Size([256, 1024, 3, 3]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0_reverse: 0.21923, (torch.Size([2048, 4808]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_ih_l0: 0.21802, (torch.Size([2048, 4808]))
2023-03-15 03:27:32,908 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.weight: 0.19105, (torch.Size([256, 128, 3, 3]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.weight: 0.13902, (torch.Size([2560, 512]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.weight: 0.07562, (torch.Size([128, 2, 7, 7]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.weight: 0.05291, (torch.Size([512, 1024]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.out_obj.bias: 0.04145, (torch.Size([151]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0_reverse: 0.03967, (torch.Size([2048, 4424]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_ih_l0: 0.03669, (torch.Size([2048, 4424]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_edge_h.bias: 0.03591, (torch.Size([512]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0_reverse: 0.02593, (torch.Size([2048, 512]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.weight_hh_l0: 0.02564, (torch.Size([2048, 512]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.input_linearity.bias: 0.02306, (torch.Size([3072]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.freq_bias.obj_baseline.weight: 0.01750, (torch.Size([22801, 51]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.weight: 0.01609, (torch.Size([128, 32]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.weight: 0.01527, (torch.Size([32, 9]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.weight      : 0.01475, (torch.Size([1024, 512]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc7.bias : 0.01465, (torch.Size([4096]))
2023-03-15 03:27:32,909 maskrcnn_benchmark INFO: roi_heads.relation.predictor.rel_compress.bias    : 0.01312, (torch.Size([51]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.box_feature_extractor.fc6.bias : 0.01073, (torch.Size([4096]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.0.bias: 0.01066, (torch.Size([128]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc7.bias: 0.00696, (torch.Size([4096]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_cat.bias        : 0.00602, (torch.Size([4096]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.lin_obj_h.bias: 0.00553, (torch.Size([512]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.state_linearity.bias: 0.00512, (torch.Size([2560]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0_reverse: 0.00511, (torch.Size([2048, 512]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.weight_hh_l0: 0.00473, (torch.Size([2048, 512]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed1.weight: 0.00461, (torch.Size([151, 200]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0_reverse: 0.00456, (torch.Size([2048]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0_reverse: 0.00456, (torch.Size([2048]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_ih_l0: 0.00447, (torch.Size([2048]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.edge_ctx_rnn.bias_hh_l0: 0.00447, (torch.Size([2048]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.bias: 0.00429, (torch.Size([256]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.decoder_rnn.obj_embed.weight: 0.00409, (torch.Size([152, 200]))
2023-03-15 03:27:32,910 maskrcnn_benchmark INFO: roi_heads.relation.predictor.post_emb.bias        : 0.00372, (torch.Size([1024]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.weight: 0.00369, (torch.Size([128]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.6.weight: 0.00326, (torch.Size([256]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.fc6.bias: 0.00305, (torch.Size([4096]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.2.bias: 0.00276, (torch.Size([128]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.bias: 0.00244, (torch.Size([32]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.feature_extractor.pooler.reduce_channel.0.bias: 0.00233, (torch.Size([256]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.4.bias: 0.00233, (torch.Size([256]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_embed2.weight: 0.00193, (torch.Size([151, 200]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.1.weight: 0.00172, (torch.Size([32]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.union_feature_extractor.rect_conv.2.bias: 0.00137, (torch.Size([128]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0_reverse: 0.00087, (torch.Size([2048]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0_reverse: 0.00087, (torch.Size([2048]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_ih_l0: 0.00081, (torch.Size([2048]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.obj_ctx_rnn.bias_hh_l0: 0.00081, (torch.Size([2048]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: roi_heads.relation.predictor.context_layer.pos_embed.0.bias: 0.00000, (torch.Size([32]))
2023-03-15 03:27:32,911 maskrcnn_benchmark INFO: -------------------------------
2023-03-15 03:27:32,915 maskrcnn_benchmark INFO: eta: 11:25:16  iter: 48000  loss: 0.5671 (0.6238)  loss_rel: 0.1424 (0.1834)  loss_refine_obj: 0.5380 (0.5653)  ML Loss (cd): -0.1250 (-0.1250)  time: 0.7702 (1.2849)  data: 0.0069 (0.5236)  energy lr: 0.000003  base lr : 0.000003  max mem: 9674
2023-03-15 03:27:32,917 maskrcnn_benchmark.utils.checkpoint INFO: Saving checkpoint to /users/students/r0879687/amager/vg/output/relation_baseline_sgdet_energy_bs44/model_0048000.pth
2023-03-15 03:28:09,583 maskrcnn_benchmark INFO: Start validating
2023-03-15 03:28:09,643 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_val dataset(5000 images).
2023-03-15 03:42:19,803 maskrcnn_benchmark INFO: Total run time: 0:14:10.159235 (0.17003184700012208 s / img per device, on 1 devices)
2023-03-15 03:42:19,804 maskrcnn_benchmark INFO: Model inference time: 0:13:12.319925 (0.15846398491859437 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(249987, 7)
0/249987
DONE (t=1.32s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=23.73s).
Accumulating evaluation results...
DONE (t=5.39s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.150
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.288
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.141
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.064
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.110
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.190
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.221
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.321
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.162
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.269
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.355
2023-03-15 03:46:13,694 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2877
====================================================================================================
SGG eval:   R @ 20: 0.2440;   R @ 50: 0.3118;   R @ 100: 0.3459;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2511; ngR @ 50: 0.3406; ngR @ 100: 0.3972;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0000;  zR @ 50: 0.0000;  zR @ 100: 0.0000;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0106;  zR @ 50: 0.0211;  zR @ 100: 0.0409;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0135;  zR @ 50: 0.0315;  zR @ 100: 0.0495;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0073;  zR @ 50: 0.0421;  zR @ 100: 0.0678;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0236;  zR @ 50: 0.0322;  zR @ 100: 0.0494;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0387;  zR @ 50: 0.0497;  zR @ 100: 0.0804;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0410;  zR @ 50: 0.0692;  zR @ 100: 0.0919;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0306;  zR @ 50: 0.0514;  zR @ 100: 0.0965;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0303;  zR @ 50: 0.0434;  zR @ 100: 0.0828;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0504;  zR @ 50: 0.1043;  zR @ 100: 0.1201;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0216;  zR @ 50: 0.0622;  zR @ 100: 0.0838;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0293;  zR @ 50: 0.0677;  zR @ 100: 0.1008;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0577;  zR @ 50: 0.1095;  zR @ 100: 0.1167;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0130;  zR @ 50: 0.0260;  zR @ 100: 0.0390;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.2292;  zR @ 50: 0.3048;  zR @ 100: 0.3223;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.0833;  zR @ 50: 0.1667;  zR @ 100: 0.1964;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1474;  zR @ 50: 0.1859;  zR @ 100: 0.2051;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3333;  zR @ 50: 0.3333;  zR @ 100: 0.6667;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0564;  mR @ 50: 0.0789;  mR @ 100: 0.0889;  for mode=sgdet, type=Mean Recall.
(above:0.0444) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.2039) (attached to:0.0000) (behind:0.2006) (belonging to:0.0000) (between:0.0000) (carrying:0.2807) (covered in:0.0714) (covering:0.0000) (eating:0.4048) (flying in:0.0000) (for:0.0000) (from:0.0000) (growing on:0.0000) (hanging from:0.0000) (has:0.4124) (holding:0.2571) (in:0.1510) (in front of:0.1051) (laying on:0.0000) (looking at:0.0000) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2236) (of:0.2310) (on:0.4467) (on back of:0.0000) (over:0.0488) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.2932) (says:0.0000) (sitting on:0.0986) (standing on:0.0109) (to:0.0000) (under:0.0842) (using:0.0769) (walking in:0.0000) (walking on:0.1116) (watching:0.0686) (wearing:0.5887) (wears:0.0000) (with:0.0286) 
====================================================================================================

2023-03-15 03:46:14,444 maskrcnn_benchmark INFO: Validation Result: 0.3459
2023-03-15 03:46:14,444 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-15 03:46:14,444 maskrcnn_benchmark INFO: Trigger Schedule Decay, RL has been reduced by factor 0.05
2023-03-15 03:46:14,444 maskrcnn_benchmark INFO: Trigger MAX_DECAY_STEP at iteration 48000.
2023-03-15 03:46:14,532 maskrcnn_benchmark INFO: Total training time: 9:35:28.545282 (0.4316 s / it)
2023-03-15 03:46:56,190 maskrcnn_benchmark INFO: >>>>>>>>>>Testing without Sampling
2023-03-15 03:46:56,190 maskrcnn_benchmark INFO: Start evaluation on VG_stanford_filtered_with_attribute_test dataset(26446 images).
2023-03-15 05:02:24,149 maskrcnn_benchmark INFO: Total run time: 1:15:27.958899 (0.17121526504945875 s / img per device, on 1 devices)
2023-03-15 05:02:24,150 maskrcnn_benchmark INFO: Model inference time: 1:10:47.368253 (0.16060531851582346 s / img per device, on 1 devices)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(1321710, 7)
0/1321710
1000000/1321710
DONE (t=6.12s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=132.67s).
Accumulating evaluation results...
DONE (t=30.84s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.141
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.286
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.124
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.056
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.116
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.174
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.214
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.313
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.317
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.190
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.297
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.329
2023-03-15 05:27:21,313 maskrcnn_benchmark INFO: 
====================================================================================================
Detection evaluation mAp=0.2864
====================================================================================================
SGG eval:   R @ 20: 0.2501;   R @ 50: 0.3208;   R @ 100: 0.3601;  for mode=sgdet, type=Recall(Main).
SGG eval: ngR @ 20: 0.2659; ngR @ 50: 0.3627; ngR @ 100: 0.4255;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:  zR @ 20: 0.0004;  zR @ 50: 0.0010;  zR @ 100: 0.0022;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:  zR @ 20: 0.0095;  zR @ 50: 0.0205;  zR @ 100: 0.0326;  for mode=sgdet, type=1 Shot Recall.
 zR @ 20: 0.0136;  zR @ 50: 0.0214;  zR @ 100: 0.0407;  for mode=sgdet, type=2 Shot Recall.
 zR @ 20: 0.0199;  zR @ 50: 0.0426;  zR @ 100: 0.0653;  for mode=sgdet, type=3 Shot Recall.
 zR @ 20: 0.0289;  zR @ 50: 0.0590;  zR @ 100: 0.0818;  for mode=sgdet, type=4 Shot Recall.
 zR @ 20: 0.0217;  zR @ 50: 0.0513;  zR @ 100: 0.0847;  for mode=sgdet, type=5 Shot Recall.
 zR @ 20: 0.0312;  zR @ 50: 0.0578;  zR @ 100: 0.0890;  for mode=sgdet, type=6 Shot Recall.
 zR @ 20: 0.0330;  zR @ 50: 0.0547;  zR @ 100: 0.0854;  for mode=sgdet, type=7 Shot Recall.
 zR @ 20: 0.0219;  zR @ 50: 0.0476;  zR @ 100: 0.0765;  for mode=sgdet, type=8 Shot Recall.
 zR @ 20: 0.0406;  zR @ 50: 0.0817;  zR @ 100: 0.1141;  for mode=sgdet, type=9 Shot Recall.
 zR @ 20: 0.0347;  zR @ 50: 0.0653;  zR @ 100: 0.0936;  for mode=sgdet, type=10 Shot Recall.
 zR @ 20: 0.0470;  zR @ 50: 0.1040;  zR @ 100: 0.1321;  for mode=sgdet, type=20 Shot Recall.
 zR @ 20: 0.0615;  zR @ 50: 0.1019;  zR @ 100: 0.1323;  for mode=sgdet, type=25 Shot Recall.
 zR @ 20: 0.0902;  zR @ 50: 0.1798;  zR @ 100: 0.2475;  for mode=sgdet, type=30 Shot Recall.
 zR @ 20: 0.1152;  zR @ 50: 0.1874;  zR @ 100: 0.2309;  for mode=sgdet, type=40 Shot Recall.
 zR @ 20: 0.1111;  zR @ 50: 0.1850;  zR @ 100: 0.2139;  for mode=sgdet, type=50 Shot Recall.
 zR @ 20: 0.1539;  zR @ 50: 0.2438;  zR @ 100: 0.2886;  for mode=sgdet, type=100 Shot Recall.
 zR @ 20: 0.3077;  zR @ 50: 0.6703;  zR @ 100: 0.7253;  for mode=sgdet, type=200 Shot Recall.
SGG eval:  mR @ 20: 0.0532;  mR @ 50: 0.0726;  mR @ 100: 0.0853;  for mode=sgdet, type=Mean Recall.
(above:0.0499) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0000) (at:0.1924) (attached to:0.0006) (behind:0.2713) (belonging to:0.0000) (between:0.0000) (carrying:0.1266) (covered in:0.0196) (covering:0.0000) (eating:0.0898) (flying in:0.0000) (for:0.0191) (from:0.0000) (growing on:0.0000) (hanging from:0.0040) (has:0.4702) (holding:0.3444) (in:0.1594) (in front of:0.0444) (laying on:0.0101) (looking at:0.0601) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.2063) (of:0.3552) (on:0.4001) (on back of:0.0000) (over:0.0459) (painted on:0.0000) (parked on:0.0056) (part of:0.0000) (playing:0.0000) (riding:0.1869) (says:0.0000) (sitting on:0.1054) (standing on:0.0146) (to:0.0000) (under:0.1720) (using:0.1510) (walking in:0.0000) (walking on:0.0657) (watching:0.0645) (wearing:0.6053) (wears:0.0000) (with:0.0245) 
====================================================================================================

